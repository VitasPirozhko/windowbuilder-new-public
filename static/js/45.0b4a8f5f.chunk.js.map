{"version":3,"sources":["../windowbuilder-addictions/windowbuilder-core/dist/drawer.js"],"names":["module","exports","$p","paper","consts","tune_paper","settings","builder","job_prm","handle_size","handleSize","this","sticking","sticking_l","sticking0","sticking2","font_size","font_family","elm_font_size","cutoff","wsql","alasql","utils","isNode","orientation_delta","epsilon","move_points","move_handle","move_shapes","EditorInvisible","PaperScope","constructor","super","_undo","clear","save_snapshot","eve","Object","getPrototypeOf","md","elm","num","project","getItem","class","BuilderElement","set_text","create_scheme","_canvas","document","createElement","height","width","setup","projects","lengrh","Scheme","remove","unload","removeAllListeners","arr","concat","tools","length","splice","i","_scopes","paths_intersecting_rect","rect","paths","boundingRect","Path","Rectangle","getItems","ProfileItem","forEach","item","contains","generatrix","bounds","push","segments_in_rect","segments","Contour","checkPathItem","_locked","_visible","_guide","children","intersects","parent","point","clear_selection_bounds","_selectionBoundsShape","hide_selection_bounds","_drawSelectionBounds","visible","canvas_cursor","name","_scheme","view","element","classList","class_name","test","add","ToolElement","Tool","resetHot","type","event","mode","testHot","hitTest","detache_wnd","profile","check_layer","_scope","contours","undefined","emit_async","ox","constructions","on_activate","cursor","options","_dp","sys","empty","msg","ui","dialogs","alert","text","bld_not_sys","title","bld_title","AbstractFilling","superclass","is_pos","pos","count","res","Math","abs","topLeft","topRight","bottomLeft","bottomRight","some","l","profiles_by_side","side","profiles","left","Infinity","top","bottom","right","ares","by_side","b","e","x","y","keys","filter","_attr","_dimlns","DimensionDrawer","DimensionLineCustom","dl","unite","GlassSegment","outer","clone","segment","gen","addl","ProfileAddl","is_nearest","getNearestPoint","break_by_angle","nodes","offset","curr_profile","segm_profile","node","byPoint","tangent","getTangentAt","negate","angles","ppoint","poffset","getOffsetOf","ptangent","segm","angle","getDirectedAngle","has_cnn","is_collinear","gb","by_angle","rays","ge","sub_path","firstSegment","Point","v","lastSegment","PointMap","Map","key","value","Layer","attr","l_connective","row","_row","cnstr","aggregate","coordinates","elm_types","enm","find_rows","includes","elm_type","ProfileVirtual","Profile","glasses","Filling","Водоотлив","Sectional","Текст","FreeText","l_text","bringToFront","activate","custom","_activeLayer","notify","register_update","area","round","upath","path","insert","furn","direction","furn_params","param","properties","refill_prm","register_change","hide","glass_only","fillings","glass","apply","glass_segments","count_nodes","curr","acurr","go_go","anext","next","every","el","ind","indexOf","glass_nodes","bind","curve_nodes","path_nodes","ipoint","interiorPoint","curve","findedb","d","node1","node2","curves","d1","d2","n","getDistance","point1","point2","profile_by_nodes","loc1","getNearestLocation","loc2","out","index","parameter","sort_nodes","calck_rating","glcontour","outer_profiles","crating","cnt","glass_recalc","glass_contours","binded","Set","has","redraw","cglass","glass_center","rating","g","reduce","sum","val","divide","center","proto","push_new","p","sort","fn_sort","ip","joined_imposts","pb","pe","pbg","is_t","d0","peg","inner","is_i","is_cut","is_x","Импост","is_linear","angle_hor","move","delta","crays","translate","findede","set","obj","map","to_remove","simulated","j","nearest","profile_by_furn_side","cache","outer_nodes","profile_node","open_directions","Правое","other_node","n1","n2","params","_owner","del","_manager","_metadata","fld","tabular_sections","fields","h_ruch","_bounds","sectionals","sectional","dimension_bounds","ib","l_visualization","_by_insets","zoom_fit","call","draw_cnn_errors","_cnn","removeChildren","Group","err_attrs","strokeColor","strokeWidth","strokeCap","strokeScaling","dashOffset","dashArray","guide","err","cnn","assign","is_self_intersected","fill_error","form_area","inset","smin","smax","fillColor","clr_by_clr","clr","imposts","impost","Onlay","_rays","oerr_attrs","radius","check_err","_corns","_nearest_cnn","get_subpath","addls","draw_mosquito","builder_props","mosquito","inserts","insert_type","inserts_types","МоскитнаяСетка","props","sz","specification","rspec","count_calc_method","count_calculating_ways","ПоПериметру","nom","Рама","ПоШагам","perimetr","equidistant","prev","getIntersections","PointText","fontFamily","fontSize","content","presentation","offsets","do_center","step","add_impost","aloc","l1","l2","centerY","draw_jalousie","jalousie","Жалюзи","control","steps","css","replace","shadowColor","shadowBlur","shadowOffset","opacity","closed","bounds_light","ПоПлощади","floor","strokeOpacity","draw_sill","Подоконник","vlen","vwidth","prow","draw_opening","_contour","open_types","is_opening","open_type","_opening","CompoundPath","is_sliding","moveTo","lineTo","sliding","side_count","open_tunes","rotation_axis","axis","other","corns","getPointAt","rotary_folding","draw_visualization","rows","draw","visualization","len","_by_spec","dop","contour","_hidden","hidden","l_dimensions","hide_generatrix","is_tt","Array","isArray","noti","points","need_bind","available_bind","set_node","ProfileConstructor","ContourVirtual","_nearest","default_inset","tmp","subtract","perimeter_inner","size","ubound","intersect_point","bounds_inner","addSegments","closePath","filling","_saving","refresh_prm_links","root","blank","guid","links","params_links","grid","selection","show_calculated","is_calculated","link","linked_values","extra_fields","save_coordinates","short","is_rectangular","w","h","couner","handle_line","update_handle_height","from_setter","furn_set","handle_side","furn_cache","ignore_formulas","handle_height","set_handle_height","handle_height_base","fix_ruch","quantity","check_restrictions","is_set_row","ok","get_spec","each","sub_row","emit","layer","old_fix_ruch","sizefurn","_txt","_visl","on_remove_elm","_loading","on_insert_elm","on_sys_changed","thickness","tmin","tmax","Стекло","Заполнение","check_nom2","cat","cnns","elm_cnn","cnn_types","acn","ii","a","da","db","ContourNested","kind","DimensionGroup","has_size","DimensionLayer","ihor","ivert","forse","auto_lines","chld","our","eb","_sub","npoint","ee","push_by_point","by_imposts","by_contour","draw_by_imposts","mark_direction","invert","pi","po","dx","dxi","dxo","dx1","dx2","sizefaltz","DimensionLineImpost","elm1","elm2","p1","p2","draw_by_falsebinding","by_base","collection","shift","DimensionLine","by_faltz","faltz","_ihor","_ivert","path_data","_mixin","JSON","parse","justification","_font_size","_from_service","on","mouseenter","_mouseenter","click","_click","max","dp","builder_size","metadata","stop","RulerWnd","wnd","_move_points","xy","min","deselect_all_points","selected","sizes_wnd","align","normal","getNormalAt","multiply","nl","ns","normalize","bs","es","callout1","callout2","scale","hide_c1","hide_c2","hide_line","rounding","toString","rotation","ref","text_aligns","position","owner_bounds","parseFloat","parseInt","setSelection","Размер","fix_angle","by_curve","stringify","ToolRuler","tool","is_ruler","attach","t","offsetB","elmB","cnn_point","elongation","ob","oo","oi","toFixed","bdx1","sign","DimensionRadius","Радиус","c","c1","c2","curv","getCurvatureAt","sub","ravg","Створка","insertBelow","elm_dblclick","owner","removeSegments","tpath","reverse","d3","split","_xfields","arc_h","r","synonym","info","note","cnn1","cnn_elmnts","cnn2","cnn3","iface","clrs","cch","cnn_choice_links","o","nom_cnns","nom_cnn","is_data_obj","refs","_inserts_types_filling","choice_links","f","insert_glass_type","get","inserts_glass_types","by_thickness","in","Добор","elmnts","cnn_ii","selected_cnn_ii","selection_exclude_service","mfields","x1","x2","y1","y2","arc_ccw","a1","a2","region","Proxy","target","prop","mf","types","choice_params","_obj","sizeb","set_inset","set_clr","ignore_select","t_parent","be","sel","getSelectedItems","items","observer","off","err_spec_row","info_error","ProductsBuilding","new_spec_row","row_base","spec","view_out","clr_str","clr_in","clr_out","default_clr_str","Color","alpha","stops","origin","destination","initialize","addChild","Раскладка","glass_specification","gno","formula","s","is_sandwich","pathData","debug","ReferenceError","aperture_path","_reversed","aperture_len","create_leaf","default_furn","cnn_side","cnn_sides","Изнутри","select_node","update","sendToBack","purge_paths","_text","textBounds","turn","fitBounds","maxCurve","angleInRadians","line","vector","PI","biasPoint","cos","sin","rightCenter","draw_fragment","lv","clr_group","default_clr","selected_glasses","selm","selectedItems","child","by_art","not","article","aname","deselect_onlay_points","_profiles","remove_onlays","onlay","hasHandles","crossings","getCrossings","splitAt","nloc","getLocationOf","intersections","self_intersections","purge","rib","oxml","id","_ins_proxy","bounds_x","bounds_y","prototype","bold","builder_text","fontWeight","setTimeout","GeneratrixElement","all_points","start_point","changed","isegments","noti_points","old","free_point","profile_point","Key","isDown","move_nodes","ppath","ray","new","start","do_sub_bind","mpoint","GridCoordinates","points_color","sel_color","lines_color","Circle","lines","set_bind","set_line","langle","dangle","rotate","n0","grid_points","sel_x","do_break","tpoint","pt","pth","defineProperties","np","first","crv1","i1","crv2","i2","angle_to","interior","t1","firstCurve","isLinear","dc","offset1","offset2","simplify","elong","handleIn","handleOut","elongate","other_point","tdelta","tg","p1last","p2last","point_pos","Line","getSide","rmin","rmax","ph0","ph1","arc_r","arc_cntr","r0","ccw","q","yy1","xx1","yy2","xx2","tmpx","tmpy","sqrt","arc_point","more_180","dy","dr","centr","snap_to_angle","snapAngle","atan2","dirx","diry","bind_to_nodes","activeLayer","CnnPoint","_parent","orientations","cnn_type","ad","av","orientation","vert","ah","hor","xx","distance","_err","style","angle_at","lmin","lmax","amin","amax","critical_error","err_seam_len","err_no_cnn","_profile","len_angl","art1","art2","find","ProfileRays","clear_segments","with_cnn","recalc","ds","tangent_e","normal_e","point_b","tangent_b","normal_b","point_e","nearests","joined_nearests","hhpoint","getcnnn","setcnnn","gn","g1","g2","set_generatrix_radius","getSignedDistance","ppoints","sub_gen","incline","elm_props","product_params","hasOwnProperty","defineProperty","prow0","configurable","Примыкание","Свойства","main_row","angle_calc_method","angle_calculating_ways","СварнойШов","ruler_line_select","_hatching","fp","op","cip","cop","nip","nop","pp","ruler_line_path","ruler_line","ruler_line_coordin","row_b","row_e","r1","r2","nrst","alp1","alp2","first_point","arcTo","base_clr","an","do_bind","ProfileConnective","bcnn","ecnn","moved","moved_fact","de","deselectAll","console","log","Снаружи","min_radius","full","selected_profiles","postcalc_cnn","postcalc_inset","check_inset","all","flap_pos_by_impost","positions","Центр","ЦентрВертикаль","ЦентрГоризонталь","path_points","path1","path2","prays","force_redraw","Error","profile2","cp","prays2","side2","pt1","pt2","pt3","pt4","cnn_point2","lastCurve","igen","select_corn","dist","angl","join","ie","oe","corn","point_name","hhi","hho","substr","check_distance","check_only","max_right_angle","_angle","show_number","show","elm_number","fromCoordinates","Верх","Низ","Лев","Прав","ign_cnn","check_nearest","isInserted","find_nearest","tinner","touter","candidates","pname","cpoint","has_changes","allow_open_cnn","is_l","with_addl","gp","bind_node","glass_segment","Соединитель","rama","ConnectiveLayer","BaseLine","Item","Линия","lay_regions","set_region","pn","res_bind","from","to","nearest_cnn","pinner","selection_params","Project","_editor","_silent","_calc_order_row","_update_timer","_vis_timer","_ch","buyers_order","create","isBrowser","requestAnimationFrame","_opened","draw_sizes","_dp_listener","clearTimeout","_snapshot","row_changed_names","get_user_param","set_user_param","set_sys","set_glasses","set_furn","_papam_listener","characteristic","setted","calc_order_row","production_params","is_folder","production","_builder_props","load_dimension_lines","Constructor","load_contour","load","from_service","load_object","builder_props_defaults","Promise","resolve","reject","base_block","is_new","then","products_building","load_stamp","_data","refill_props","_acc","reload","calc_order","is_guid","characteristics","doc","with_update","_modified","Date","now","strokeBounds","match","layers","auto_align","check_selected","do_align","message","space","zoom","viewSize","get_svg","export_options","precision","obj_delivery_state","ownerDocument","onExport","svg","exportSVG","setAttribute","querySelector","removeAttribute","outerHTML","obx","is_snapshot","do_load","src","_not_set_loaded","obj_delivery_states","Шаблон","_align_timer","glass_align","resize_canvas","addLayer","pos_array","check_pos","Любое","by_default","finded","node_distance","bind_generatrix","check_node_distance","base_furn","null","furns","is_set","hitPoints","tolerance","selected_first","with_onlays","hit","check_corns","onlays","rootLayer","with_items","perimeter","_skeleton","skeleton","EditableText","_edit","mouseleave","projectToView","edit","parentNode","appendChild","onblur","edit_remove","onkeydown","edit_keydown","focus","select","code","preventDefault","stopPropagation","removeChild","AngleText","_ind","getLocationAtTime","ray0","ray1","equals","LenText","segment1","segment2","getTangentAtTime","draw_angle","loc","getLocationAt","end","Arc","through","pricing","adapters","once","pouch","local","templates","user_node","load_prices","use_ram","by_local","by_range","remote","changes","since","live","include_docs","selector","$in","change","by_doc","by_ref","user","authorized","timestamp","load_changes","docs","update_only","build_cache","currencies","do_reload","onom","record_log","_price","date","currency","price","build_cache_local","prices","cref","pref","sync_local","catch","remote_rev","_rev","put","_clone","adapter","loaded","startkey","query","limit","endkey","group","goods","nom_characteristic","price_type","nom_price","prm","price_prm","doc_currency","price_type_first_cost","price_type_sale","sale_formula","ireg","empty_formula","formulas","empty_price_type","nom_prices_types","marginality","marginality_min","marginality_internal","discount","discount_external","extra_charge_external","price_type_internal","internal_formula","external_formula","partner","price_group","price_groups","margin_coefficients","row_prm","property","check_compare","calculated_value","extract_value","comparison_type","comparison_types","vpartner","partners","row_x","priority","dealer_surcharge","calc_first_cost","marginality_in_spec","fake_row","amount","totqty1","tmp_price","amount_marged","first_cost","order_rows","fake_prm","calc_amount","not_update","price_cost","discount_percent","extra_charge","current_user","partners_uids","price_internal","hand_start","value_change","from_currency_to_currency","main_currency","cource_sql","compile","cfrom","course","multiplicity","cto","cut_upload","role_available","show_msg","error_low_acl","error_rights","upload_tech","mgrs","ram","replicate","_id","reason","sync_complite","sync_title","upload_acc","listen","added_cnn_spec","cnn_row","cnn_need_add_spec","cnn_add_spec","cnn_other","CatInserts","calc_count_area_mass","filtered_spec","row_cnn_spec","coefficient","tmp_len_angl","calculate_spec","row_spec","is_pieces","qty","rounding_quantity","execute","row_cnn","condition_formula","furn_spec","Глухое","furn_error","arc_available","furn_check_opening_restrictions","blank_clr","specify","is_procedure_row","handle_height_min","totqty","flap_weight_max","weight","crow","density","base_spec_profile","is_service","is_procedure","predefined","row_cnn_prev","row_cnn_next","seam","d45","dprev","dnext","_len","arc_elongation","angle_calc_method_prev","angle_calc_method_next","СоединениеПополам","s2","Соединение","s1","cnn_spec_nearest","spec_tmp","is_order_row","specification_order_row_types","Продукция","cx","find_create_cx","contour_attrs","_order_rows","base_spec_sectional","base_spec_glass","glength","inset_contour_spec","scheme","finish","Editor","base_spec","group_by","silent","spec_building","specification_adjustment","save","snapshot","characteristic_saved","close","_shown","prm_row","check_condition","by_predefined","cutting_optimization_type","cutting_optimization_types","Нет","row_coord","Основной","_90","loss_factor","global","_mgr","calc_row_spec","cancel","with_price","adel","ch","insert_bind","insets","ordn","ax","unit","storage_unit","classes","DataManager","CatObj","value_mgr","array_enabled","УгловоеДиагональное","УгловоеКВертикальной","УгловоеКГоризонтальной","ТОбразное","Наложение","НезамкнутыйКонтур","xt","КрестПересечение","КрестВСтык","__define","Штульп","profile_items","rama_impost","impost_lay","stvs","additions_groups","Откос","Профиль","Монтаж","Доставка","Набор","debit_credit_kinds","debit","Приход","credit","Расход","Неподвижное","Горизонтальная","Вертикальная","Наклонная","_direct_ram","load_view","form","widths","CatCharacteristics","before_save","prod_nom","is_read_only","prod_name","add_inset_params","blank_inset","ts_params","used_params","leading_product","number_internal","trim","num0","number_doc","part","isNaN","pad","DocPurchase_order","z","sprm","include_to_name","String","open_origin","row_id","form_obj","leading_elm","_deleted","_set_loaded","defaults","__notify","editor","snake_ref","imgs","format","toDataURL","formula_long","CatNom","valueOf","custom_lines","txts","CatCharacteristicsInsertsRow","field","data_error","clr_elm","clr_sch","predefined_name","inverted","sub_clr","alatable","sclr_group","iclr_group","clr_conformity","add_by_clr","CatClrs","CatColor_price_groups","clr1","form_selection","pwnd","eclr","hide_filter","toolbar_click","btn_id","on_select","common","authHeader","getBasicAuthHeaders","prefix","auth_prefix","__opts","auth","fetch","local_storage_prefix","method","headers","body","json","load_array","composite_clr_folder","register_on_server","objs","get_option_list","tb_filter","get_filter","getSelectedValue","hide_tree","attachEvent","OCombo","div","hide_frm","DOMelem","float","DOMelem_input","placeholder","call_event","toolbar","hideItem","setItemText","writable","sync_grid","action","initial_value","save_obj","is_in","is_out","sql_selection_list_flds","nom1","nom2","ign_side","is_outer","onom2","thickness1","thickness2","art1glass","art2glass","ref1","ref2","_nomcache","is_nom1","is_nom2","sd1","sort_cnns","curr_cnn","contracts","by_partner_and_org","organization","contract_kind","contract_kinds","СПокупателем","main_contract","CatElm_visualization","subpath","svg_path","li","lo","attributes","pivot","p0","elm_side","CatFurns","fprms","aprm","forcibly","sprms","predefined_formulas","cx_prm","algorithm","exclude_dop","transfer_operations_options","НаПримыкающий","nea","ЧерезПримыкающий","НаПримыкающийОтКонца","inverse","offset_options","row_furn","dop_row","add_d","coordin","offset_option","Формула","РазмерПоФальцу","contraction","ОтРучки","ОтСередины","ОтКонцаСтороны","proc_row","handle_height_max","transfer_option","joined","acc","cur","nouter","overmeasure","dx0","add_with_algorithm","toLowerCase","shtulp_kind","shtulp_available","shtulp_fix_here","CatFurnsSpecificationRow","specification_restrictions","prop_direction","for_direct_profile_only","_getter","_setter","nom_set","scheme_settings","find_schemas","_prms_by_type","prms","available","ItemData","Renderer","idata","ItemRow","DpBuyers_orderProductionRow","tune","column","choice","read_only","filter_params_links","get_row","Параметрик","tune_meta","ProductionRow","meta","disable_clear","roles","with_scheme","_meta","rm","caption","use","swap","drow","list","enumerable","_by_thickness","ins","sql_selection_where_flds","strict","_nom","main_rows","is_main_elm","check_params","fake_origin","values","irow","sizes","sz_keys","sz_prms","ПоФормуле","row_ins","by_perimetr","ahmin","ahmax","is_high_level_call","own_row","glass_rows","subrow","fakerow","_origin","ДляЭлемента","ДлинаПоПарам","ГабаритыПоПарам","ПоСоединениям","calc_qty_len","row_ins_spec","nom_size","step_angle","ceil","digits","_hierarchy","CatPartners","addr","contact_information","contact_information_kinds","phone","long_presentation","inn","kpp","name_full","slist","is_furn","rt","at","pmgr","is_ref","tso","folding","CatProduction_params","noms","is_empty_guid","__noms","force","prm_ts","add_prm","frow","window","FakeLenAngl","FakeElm","DocCalc_orderProductionRow","depth","DocCalc_order","after_create","acl_objs","organizations","acl_obj","set_department","contract","manager","Черновик","new_number_doc","Отклонен","Отозван","Подтвержден","Отправлен","ОшибкаКритическая","ОшибкаИнфо","must_be_saved","posted","department","doc_amount","internal","errors","amount_internal","category","amount_operation","critical","elms","error","state","product_rows","pouch_db","deleted","mark_deleted","ads","clear_templates_props","emit_add_fields","del_row","orders","invoice","after_del_row","settlements_currency","parts","parameters_russian_recipe","vat_consider","vat_included","product","dispatching_totals","is_accessory","plan","moment","fact","print_data","bank_account","individual_person","our_bank_account","main_bank_account","get_imgs","blob_as_text","АдресДоставки","shipping_address","ВалютаДокумента","ДатаЗаказаФорматD","ДатаЗаказаФорматDD","ДатаТекущаяФорматD","ДатаТекущаяФорматDD","ДоговорДатаФорматD","ДоговорДатаФорматDD","ДоговорНомер","ДоговорСрокДействия","validity","ЗаказНомер","Контрагент","КонтрагентОписание","КонтрагентДокумент","КонтрагентКЛДолжность","КонтрагентКЛДолжностьРП","КонтрагентКЛИмя","КонтрагентКЛИмяРП","КонтрагентКЛК","КонтрагентКЛОснованиеРП","КонтрагентКЛОтчество","КонтрагентКЛОтчествоРП","КонтрагентКЛФамилия","КонтрагентКЛФамилияРП","КонтрагентИНН","КонтрагентКПП","КонтрагентЮрФизЛицо","КратностьВзаиморасчетов","settlements_multiplicity","КурсВзаиморасчетов","settlements_course","ЛистКомплектацииГруппы","ЛистКомплектацииСтроки","Организация","ОрганизацияГород","city","ОрганизацияАдрес","ОрганизацияТелефон","ОрганизацияБанкБИК","bank","ОрганизацияБанкГород","ОрганизацияБанкКоррСчет","correspondent_account","ОрганизацияБанкНаименование","ОрганизацияБанкНомерСчета","account_number","ОрганизацияИндивидуальныйПредприниматель","individual_entrepreneur","ОрганизацияИНН","ОрганизацияКПП","ОрганизацияСвидетельствоДатаВыдачи","certificate_date_issue","ОрганизацияСвидетельствоКодОргана","certificate_authority_code","ОрганизацияСвидетельствоНаименованиеОргана","certificate_authority_name","ОрганизацияСвидетельствоСерияНомер","certificate_series_number","ОрганизацияЮрФизЛицо","individual_legal","Офис","ПродукцияЭскизы","Проект","СистемыПрофилей","sys_profile","СистемыФурнитуры","sys_furn","Сотрудник","СотрудникКомментарий","СотрудникДолжность","Должность","СотрудникДолжностьРП","ДолжностьРП","СотрудникИмя","Имя","СотрудникИмяРП","ИмяРП","СотрудникОснованиеРП","ОснованиеРП","СотрудникОтчество","Отчество","СотрудникОтчествоРП","ОтчествоРП","СотрудникФамилия","Фамилия","СотрудникФамилияРП","ФамилияРП","СотрудникФИО","toUpperCase","СотрудникФИОРП","СуммаДокумента","СуммаДокументаПрописью","in_words","СуммаДокументаБезСкидки","СуммаСкидки","СуммаНДС","vat_amount","ТекстНДС","ТелефонПоАдресуДоставки","СуммаВключаетНДС","УчитыватьНДС","ВсегоНаименований","ВсегоИзделий","ВсегоПлощадьИзделий","Аксессуары","Услуги","Материалы","НомерВнутр","КлиентДилера","client_of_dealer","Комментарий","МонтажДоставкаСамовывоз","_attachments","get_attachment","blob","data_url","ОрганизацияЛоготип","load_production","row_description","img","l0","QRCode","innerHTML","colorDark","colorLight","correctLevel","CorrectLevel","H","useSVG","qrcode","НомерСтроки","Количество","Ед","Цвет","Размеры","Площадь","Длина","Ширина","ВсегоПлощадь","Примечание","СистемаПрофилей","Номенклатура","Характеристика","Заполнения","Фурнитура","Параметры","Цена","ЦенаВнутр","СкидкаПроцент","СкидкаПроцентВнутр","discount_percent_internal","Скидка","Сумма","СуммаВнутр","include_to_description","fill_plan","planning","aes","suffix","url","post_data","prod","Headers","append","btoa","unescape","encodeURIComponent","Ctr","decrypt","response","ro","_saving_trans","sattr","create_product_row","selectRowById","mgr","ts","fill_cx","generate_guid","process_add_product_list","row_dp","row_prod","tx","slave","divisions","no_extra_charge","_slave_recalc","rfield","rfields","pfields","НДС18","НДС18_118","НДС10","НДС10_110","НДС20","НДС20_120","НДС0","БезНДС","vat_rates","vat_rate","destinations","dst","sorting_field","templates_props","specify_sys","specify_furn","refresh_doc","from_files","rres","batch_size","batches_limit","result","direct_templates","_suffix","on_log_in","names","cachable","patch_cachable","PouchDB","skip_setup","direct","auto_compaction","revs_limit","setInterval","rebuild_indexes","user_log_out"],"mappings":"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","file":"static/js/45.0b4a8f5f.chunk.js","sourcesContent":["module.exports = function({$p, paper}) {\r\nconst consts = {\r\n\r\n\ttune_paper(settings) {\r\n\r\n\t  const builder = $p.job_prm.builder || {};\r\n\r\n\t\tif(builder.handle_size) {\r\n      settings.handleSize = builder.handle_size;\r\n    }\r\n\r\n\t\tthis.sticking = builder.sticking || 90;\r\n\t\tthis.sticking_l = builder.sticking_l || 9;\r\n\t\tthis.sticking0 = this.sticking / 2;\r\n\t\tthis.sticking2 = this.sticking * this.sticking;\r\n\t\tthis.font_size = builder.font_size || 90;\r\n    this.font_family = builder.font_family || 'GOST type B';\r\n    this.elm_font_size = builder.elm_font_size || 60;\r\n    this.cutoff = builder.cutoff || 1300; \r\n\r\n    if(!builder.font_family) {\r\n      builder.font_family = this.font_family;\r\n    }\r\n    if(!builder.font_size) {\r\n      builder.font_size = this.font_size;\r\n    }\r\n    if(!builder.elm_font_size) {\r\n      builder.elm_font_size = this.elm_font_size;\r\n    }\r\n\r\n    if($p.wsql.alasql.utils.isNode) {\r\n      this.font_size *= 1.2;\r\n      this.elm_font_size *= 1.2;\r\n    }\r\n\r\n\t\tthis.orientation_delta = builder.orientation_delta || 30;\r\n\r\n\r\n\t},\r\n\r\n  epsilon: 0.01,\r\n\tmove_points: 'move_points',\r\n\tmove_handle: 'move_handle',\r\n\tmove_shapes: 'move-shapes',\r\n\r\n};\r\n\r\n\r\nclass EditorInvisible extends paper.PaperScope {\r\n\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    this._undo = {\r\n      clear() {},\r\n      save_snapshot() {},\r\n    };\r\n\r\n    this.eve = new (Object.getPrototypeOf($p.md.constructor))();\r\n\r\n    consts.tune_paper(this.settings);\r\n  }\r\n\r\n  get consts() {\r\n    return consts;\r\n  }\r\n\r\n  elm(num) {\r\n    return this.project.getItem({class: BuilderElement, elm: num});\r\n  }\r\n\r\n  set_text() {\r\n  }\r\n\r\n  create_scheme() {\r\n    if(!this._canvas) {\r\n      this._canvas = document.createElement('CANVAS');\r\n      this._canvas.height = 480;\r\n      this._canvas.width = 480;\r\n      this.setup(this._canvas);\r\n    }\r\n    if(this.projects.lengrh && !(this.projects[0] instanceof Scheme)) {\r\n      this.projects[0].remove();\r\n    }\r\n    return new Scheme(this._canvas, this, true);\r\n  }\r\n\r\n  unload() {\r\n    this.eve.removeAllListeners();\r\n    const arr = this.projects.concat(this.tools);\r\n    while (arr.length) {\r\n      const elm = arr[0];\r\n      if(elm.unload) {\r\n        elm.unload();\r\n      }\r\n      else if(elm.remove) {\r\n        elm.remove();\r\n      }\r\n      arr.splice(0, 1);\r\n    }\r\n    for(let i in EditorInvisible._scopes) {\r\n      if(EditorInvisible._scopes[i] === this) {\r\n        delete EditorInvisible._scopes[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  paths_intersecting_rect(rect) {\r\n\r\n    const paths = [];\r\n    const boundingRect = new paper.Path.Rectangle(rect);\r\n\r\n    this.project.getItems({class: ProfileItem}).forEach((item) => {\r\n      if (rect.contains(item.generatrix.bounds)) {\r\n        paths.push(item.generatrix);\r\n        return;\r\n      }\r\n    });\r\n\r\n    boundingRect.remove();\r\n\r\n    return paths;\r\n  }\r\n\r\n  segments_in_rect(rect) {\r\n    const segments = [];\r\n\r\n    function checkPathItem(item) {\r\n      if(item._locked || !item._visible || item._guide) {\r\n        return;\r\n      }\r\n      const children = item.children || [];\r\n      if(!rect.intersects(item.bounds)) {\r\n        return;\r\n      }\r\n      if (item instanceof paper.Path) {\r\n        if(item.parent instanceof ProfileItem){\r\n          if(item != item.parent.generatrix) {\r\n            return;\r\n          }\r\n          for (let i = 0; i < item.segments.length; i++) {\r\n            if(rect.contains(item.segments[i].point)) {\r\n              segments.push(item.segments[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        for (let i = children.length - 1; i >= 0; i--)\r\n          checkPathItem(children[i]);\r\n      }\r\n    }\r\n\r\n    this.project.getItems({class: Contour}).forEach(checkPathItem);\r\n\r\n    return segments;\r\n  }\r\n\r\n  clear_selection_bounds() {\r\n    if (this._selectionBoundsShape) {\r\n      this._selectionBoundsShape.remove();\r\n    }\r\n    this._selectionBoundsShape = null;\r\n  }\r\n\r\n  hide_selection_bounds() {\r\n    if(this._drawSelectionBounds > 0) {\r\n      this._drawSelectionBounds--;\r\n    }\r\n    if(this._drawSelectionBounds == 0) {\r\n      if(this._selectionBoundsShape) {\r\n        this._selectionBoundsShape.visible = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  canvas_cursor(name) {\r\n    this.projects.forEach((_scheme) => {\r\n      for(let i=0; i<_scheme.view.element.classList.length; i++){\r\n        const class_name = _scheme.view.element.classList[i];\r\n        if(class_name == name) {\r\n          return;\r\n        }\r\n        else if((/\\bcursor-\\S+/g).test(class_name))\r\n          _scheme.view.element.classList.remove(class_name);\r\n      }\r\n      _scheme.view.element.classList.add(name);\r\n    });\r\n  }\r\n\r\n}\r\n\r\n$p.EditorInvisible = EditorInvisible;\r\n\r\n\r\nEditorInvisible.ToolElement = class ToolElement extends paper.Tool {\r\n\r\n  resetHot(type, event, mode) {\r\n\r\n  }\r\n\r\n  testHot(type, event, mode) {\r\n    return this.hitTest(event);\r\n  }\r\n\r\n  detache_wnd() {\r\n    this.profile = null;\r\n  }\r\n\r\n  check_layer() {\r\n    const {project, eve} = this._scope;\r\n    if (!project.contours.length) {\r\n      new EditorInvisible.Contour({parent: undefined});\r\n      eve.emit_async('rows', project.ox, {constructions: true});\r\n    }\r\n  }\r\n\r\n  on_activate(cursor) {\r\n\r\n    this._scope.canvas_cursor(cursor);\r\n    this.eve.emit_async('tool_activated', this);\r\n\r\n    if(this.options.name != 'select_node') {\r\n      this.check_layer();\r\n      if(this.project._dp.sys.empty()) {\r\n        const {msg, ui} = $p;\r\n        ui && ui.dialogs.alert({text: msg.bld_not_sys, title: msg.bld_title});\r\n      }\r\n    }\r\n  }\r\n\r\n  get eve() {\r\n    return this._scope.eve;\r\n  }\r\n\r\n  get project() {\r\n    return this._scope.project;\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst AbstractFilling = (superclass) => class extends superclass {\r\n\r\n\r\n  is_pos(pos) {\r\n    if(this.project.contours.count == 1 || this.parent){\r\n      return true;\r\n    }\r\n\r\n    let res = Math.abs(this.bounds[pos] - this.project.bounds[pos]) < consts.sticking_l;\r\n\r\n    if(!res){\r\n      let rect;\r\n      if(pos == \"top\"){\r\n        rect = new paper.Rectangle(this.bounds.topLeft, this.bounds.topRight.add([0, -200]));\r\n      }\r\n      else if(pos == \"left\"){\r\n        rect = new paper.Rectangle(this.bounds.topLeft, this.bounds.bottomLeft.add([-200, 0]));\r\n      }\r\n      else if(pos == \"right\"){\r\n        rect = new paper.Rectangle(this.bounds.topRight, this.bounds.bottomRight.add([200, 0]));\r\n      }\r\n      else if(pos == \"bottom\"){\r\n        rect = new paper.Rectangle(this.bounds.bottomLeft, this.bounds.bottomRight.add([0, 200]));\r\n      }\r\n\r\n      res = !this.project.contours.some((l) => {\r\n        return l != this && rect.intersects(l.bounds);\r\n      });\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n\r\n  profiles_by_side(side, profiles) {\r\n    if(!profiles){\r\n      profiles = this.profiles;\r\n    }\r\n    const bounds = {\r\n      left: Infinity,\r\n      top: Infinity,\r\n      bottom: -Infinity,\r\n      right: -Infinity\r\n    };\r\n    const res = {};\r\n    const ares = [];\r\n\r\n    function by_side(name) {\r\n      ares.some((elm) => {\r\n        if(elm[name] == bounds[name]){\r\n          res[name] = elm.profile;\r\n          return true;\r\n        }\r\n      })\r\n    };\r\n\r\n    if (profiles.length) {\r\n      profiles.forEach((profile) => {\r\n        const {b, e} = profile;\r\n        const x = b.x + e.x;\r\n        const y = b.y + e.y;\r\n        if(x < bounds.left){\r\n          bounds.left = x;\r\n        }\r\n        if(x > bounds.right){\r\n          bounds.right = x;\r\n        }\r\n        if(y < bounds.top){\r\n          bounds.top = y;\r\n        }\r\n        if(y > bounds.bottom){\r\n          bounds.bottom = y;\r\n        }\r\n        ares.push({\r\n          profile: profile,\r\n          left: x,\r\n          top: y,\r\n          bottom: y,\r\n          right: x\r\n        });\r\n      });\r\n      if (side) {\r\n        by_side(side);\r\n        return res[side];\r\n      }\r\n\r\n      Object.keys(bounds).forEach(by_side);\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n\r\n  get contours() {\r\n    return this.children.filter((elm) => elm instanceof Contour);\r\n  }\r\n\r\n\r\n  get l_dimensions() {\r\n    const {_attr} = this;\r\n    return _attr._dimlns || (_attr._dimlns = new DimensionDrawer({parent: this}));\r\n  }\r\n\r\n\r\n  get dimension_bounds() {\r\n    let {bounds} = this;\r\n    this.getItems({class: DimensionLineCustom}).forEach((dl) => {\r\n      bounds = bounds.unite(dl.bounds);\r\n    });\r\n    return bounds;\r\n  }\r\n\r\n};\r\n\r\nEditorInvisible.AbstractFilling = AbstractFilling;\r\n\r\n\r\n\r\nclass GlassSegment {\r\n\r\n  constructor(profile, b, e, outer) {\r\n    this.profile = profile;\r\n    this.b = b.clone();\r\n    this.e = e.clone();\r\n    this.outer = outer;\r\n    this.segment();\r\n  }\r\n\r\n  segment() {\r\n\r\n    let gen;\r\n\r\n    if (this.profile.children.some((addl) => {\r\n\r\n        if (addl instanceof ProfileAddl && this.outer == addl.outer) {\r\n\r\n          if (!gen) {\r\n            gen = this.profile.generatrix;\r\n          }\r\n\r\n          const b = this.profile instanceof ProfileAddl ? this.profile.b : this.b;\r\n          const e = this.profile instanceof ProfileAddl ? this.profile.e : this.e;\r\n\r\n\r\n          if (b.is_nearest(gen.getNearestPoint(addl.b), true) && e.is_nearest(gen.getNearestPoint(addl.e), true)) {\r\n            this.profile = addl;\r\n            this.outer = false;\r\n            return true;\r\n          }\r\n        }\r\n      })) {\r\n\r\n      this.segment();\r\n    }\r\n\r\n  }\r\n\r\n  break_by_angle(nodes, segments, point, offset, curr_profile, segm_profile) {\r\n\r\n    const node = nodes.byPoint(point);\r\n    if(!node) {\r\n      return false;\r\n    }\r\n\r\n    let tangent = curr_profile.generatrix.getTangentAt(offset);\r\n    if(this.outer) {\r\n      tangent = tangent.negate();\r\n    }\r\n\r\n    const angles = [];\r\n    for(const elm of node) {\r\n      if(elm.profile === curr_profile) {\r\n        continue;\r\n      }\r\n      const {generatrix} = elm.profile;\r\n      const ppoint = generatrix.getNearestPoint(point);\r\n      const poffset = generatrix.getOffsetOf(ppoint);\r\n      const ptangent = generatrix.getTangentAt(poffset);\r\n      for(const segm of segments) {\r\n        if(segm.profile === elm.profile && segm.b.is_nearest(ppoint, true)) {\r\n          angles.push({profile: elm.profile, angle: tangent.getDirectedAngle(segm.outer ? ptangent.negate() : ptangent)});\r\n        }\r\n      }\r\n    }\r\n    let angle;\r\n    for(const elm of angles) {\r\n      if(elm.profile === segm_profile && (!angle || elm.angle > angle)) {\r\n        angle = elm.angle;\r\n      }\r\n    }\r\n    if(angle < 0) {\r\n      return true;\r\n    }\r\n    for(const elm of angles) {\r\n      if(elm.profile !== segm_profile && elm.angle > angle) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  has_cnn(segm, nodes, segments) {\r\n\r\n    const point = segm.b;\r\n    if(!this.e.is_nearest(point, 0)) {\r\n      return false;\r\n    }\r\n\r\n    let curr_profile = this.profile;\r\n    let segm_profile = segm.profile;\r\n    while (curr_profile instanceof ProfileAddl) {\r\n      if(!this.outer) {\r\n        this.outer = !curr_profile.is_collinear(curr_profile.parent);\r\n      }\r\n      curr_profile = curr_profile.parent;\r\n    }\r\n    while (segm_profile instanceof ProfileAddl) {\r\n      if(!segm.outer) {\r\n        segm.outer = !segm_profile.is_collinear(segm_profile.parent);\r\n      }\r\n      segm_profile = segm_profile.parent;\r\n    }\r\n\r\n    if(curr_profile === segm_profile && (this.profile instanceof ProfileAddl || segm.profile instanceof ProfileAddl)) {\r\n      return false;\r\n    }\r\n    if(curr_profile.gb.is_nearest(point, true)) {\r\n      const by_angle = this.break_by_angle(nodes, segments, point, 0, curr_profile, segm_profile);\r\n      if(by_angle) {\r\n        return false;\r\n      }\r\n      else if(by_angle === undefined || curr_profile.rays.b.profile === segm_profile) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if(curr_profile.ge.is_nearest(point, true)) {\r\n      const by_angle = this.break_by_angle(nodes, segments, point, curr_profile.generatrix.length, curr_profile, segm_profile);\r\n      if(by_angle) {\r\n        return false;\r\n      }\r\n      else if(by_angle === undefined || curr_profile.rays.e.profile === segm_profile) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if(segm_profile.gb.is_nearest(point, true)) {\r\n      const by_angle = segm.break_by_angle(nodes, segments, point, 0, segm_profile, curr_profile)\r\n      if(by_angle) {\r\n        return false;\r\n      }\r\n      else if(by_angle === undefined || segm_profile.rays.b.profile == curr_profile) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if(segm_profile.ge.is_nearest(point, true)) {\r\n      const by_angle = segm.break_by_angle(nodes, segments, point, segm_profile.generatrix.length, segm_profile, curr_profile);\r\n      if(by_angle) {\r\n        return false;\r\n      }\r\n      else if(by_angle === undefined || segm_profile.rays.e.profile == curr_profile) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  get _sub() {\r\n    const {sub_path} = this;\r\n    return {\r\n      get b() {\r\n        return sub_path ? sub_path.firstSegment.point : new paper.Point();\r\n      },\r\n      set b(v) {\r\n        sub_path && (sub_path.firstSegment.point = v);\r\n      },\r\n      get e() {\r\n        return sub_path ? sub_path.lastSegment.point : new paper.Point();\r\n      },\r\n      set e(v) {\r\n        sub_path && (sub_path.lastSegment.point = v);\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nclass PointMap extends Map {\r\n\r\n  byPoint(point) {\r\n    for(const [key, value] of this) {\r\n      if(point.is_nearest(key, 0)) {\r\n        return value.length > 2 && value;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Contour extends AbstractFilling(paper.Layer) {\r\n\r\n  constructor(attr) {\r\n\r\n    super({parent: attr.parent});\r\n\r\n    this._attr = {};\r\n\r\n    const {ox, l_connective} = this.project;\r\n\r\n    if (attr.row) {\r\n      this._row = attr.row;\r\n    }\r\n    else {\r\n      const {constructions} = ox;\r\n      this._row = constructions.add({parent: attr.parent ? attr.parent.cnstr : 0});\r\n      this._row.cnstr = constructions.aggregate([], ['cnstr'], 'MAX') + 1;\r\n    }\r\n\r\n    const {cnstr} = this;\r\n    if (cnstr) {\r\n\r\n      const {coordinates} = ox;\r\n      const {elm_types} = $p.enm;\r\n\r\n      coordinates.find_rows({cnstr}, (row) => {\r\n        if(elm_types.profiles.includes(row.elm_type)) {\r\n          if(row.parent) {\r\n            new ProfileVirtual({row, parent: this});\r\n          }\r\n          else {\r\n            new Profile({row, parent: this});\r\n          }\r\n        }\r\n        else if(elm_types.glasses.includes(row.elm_type)) {\r\n          new Filling({row, parent: this})\r\n        }\r\n        else if(row.elm_type === elm_types.Водоотлив) {\r\n          new Sectional({row, parent: this})\r\n        }\r\n        else if(row.elm_type === elm_types.Текст) {\r\n          new FreeText({row, parent: this.l_text})\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n    l_connective.bringToFront();\r\n\r\n  }\r\n\r\n  activate(custom) {\r\n    this.project._activeLayer = this;\r\n    if (this._row) {\r\n      this.notify(this, 'layer_activated', !custom);\r\n      this.project.register_update();\r\n    }\r\n  }\r\n\r\n  get area() {\r\n    return (this.bounds.area/1e6).round(3);\r\n  }\r\n\r\n  get form_area() {\r\n    let upath;\r\n    this.glasses(false, true).concat(this.profiles).forEach(({path}) => {\r\n      if(upath) {\r\n        upath = upath.unite(path, {insert: false});\r\n      }\r\n      else {\r\n        upath = path.clone({insert: false});\r\n      }\r\n    });\r\n    return (upath.area/1e6).round(3);\r\n  }\r\n\r\n  get furn() {\r\n    return this._row.furn;\r\n  }\r\n\r\n  set furn(v) {\r\n    const {_row} = this;\r\n    if (_row.furn == v) {\r\n      return;\r\n    }\r\n\r\n    _row.furn = v;\r\n\r\n    if (this.direction.empty()) {\r\n      this.project._dp.sys.furn_params.find_rows({\r\n        param: $p.job_prm.properties.direction,\r\n      }, ({value}) => {\r\n        _row.direction = value;\r\n        return false;\r\n      });\r\n    }\r\n\r\n    _row.furn.refill_prm(this);\r\n\r\n    this.project.register_change(true);\r\n\r\n    this.notify(this, 'furn_changed');\r\n  }\r\n\r\n  glasses(hide, glass_only) {\r\n    return this.children.filter((elm) => {\r\n      if ((!glass_only && elm instanceof Contour) || elm instanceof Filling) {\r\n        if (hide) {\r\n          elm.visible = false;\r\n        }\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  get fillings() {\r\n    const fillings = [];\r\n    for(const glass of this.glasses()){\r\n      if(glass instanceof Contour){\r\n        fillings.push.apply(fillings, glass.fillings);\r\n      }\r\n      else{\r\n        fillings.push(glass);\r\n      }\r\n    }\r\n    return fillings;\r\n  }\r\n\r\n  get glass_contours() {\r\n    const segments = this.glass_segments;\r\n    const nodes = this.count_nodes();\r\n    const res = [];\r\n    let curr, acurr;\r\n\r\n    function go_go(segm) {\r\n      const anext = GlassSegment.next(segm, nodes, segments);\r\n      for (const next of anext) {\r\n        if (next === curr) {\r\n          return anext;\r\n        }\r\n        else if (acurr.every((el) => el !== next)) {\r\n          acurr.push(next);\r\n          return go_go(next);\r\n        }\r\n      }\r\n    }\r\n\r\n    while (segments.length) {\r\n\r\n      curr = segments[0];\r\n      acurr = [curr];\r\n      if (go_go(curr) && acurr.length > 1) {\r\n        res.push(acurr);\r\n      }\r\n\r\n      acurr.forEach((el) => {\r\n        const ind = segments.indexOf(el);\r\n        if (ind != -1) {\r\n          segments.splice(ind, 1);\r\n        }\r\n      });\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  glass_nodes(path, nodes, bind) {\r\n    const curve_nodes = [];\r\n    const path_nodes = [];\r\n    const ipoint = path.interiorPoint.negate();\r\n    let curve, findedb, findede, d, node1, node2;\r\n\r\n    if (!nodes) {\r\n      nodes = this.nodes;\r\n    }\r\n\r\n    for (let i in path.curves) {\r\n      curve = path.curves[i];\r\n\r\n      let d1 = Infinity;\r\n      let d2 = Infinity;\r\n      nodes.forEach((n) => {\r\n        if ((d = n.getDistance(curve.point1, true)) < d1) {\r\n          d1 = d;\r\n          node1 = n;\r\n        }\r\n        if ((d = n.getDistance(curve.point2, true)) < d2) {\r\n          d2 = d;\r\n          node2 = n;\r\n        }\r\n      });\r\n\r\n      if (path_nodes.indexOf(node1) == -1)\r\n        path_nodes.push(node1);\r\n      if (path_nodes.indexOf(node2) == -1)\r\n        path_nodes.push(node2);\r\n\r\n      if (!bind)\r\n        continue;\r\n\r\n      if(node1 === node2) {\r\n        continue;\r\n      }\r\n      findedb = false;\r\n      for (let n in curve_nodes) {\r\n        if (curve_nodes[n].node1 == node1 && curve_nodes[n].node2 == node2) {\r\n          findedb = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!findedb) {\r\n        findedb = this.profile_by_nodes(node1, node2);\r\n        const loc1 = findedb.generatrix.getNearestLocation(node1);\r\n        const loc2 = findedb.generatrix.getNearestLocation(node2);\r\n        if (node1.add(ipoint).getDirectedAngle(node2.add(ipoint)) < 0)\r\n          curve_nodes.push({\r\n            node1: node2,\r\n            node2: node1,\r\n            profile: findedb,\r\n            out: loc2.index == loc1.index ? loc2.parameter > loc1.parameter : loc2.index > loc1.index,\r\n          });\r\n        else\r\n          curve_nodes.push({\r\n            node1: node1,\r\n            node2: node2,\r\n            profile: findedb,\r\n            out: loc1.index == loc2.index ? loc1.parameter > loc2.parameter : loc1.index > loc2.index,\r\n          });\r\n      }\r\n    }\r\n\r\n    this.sort_nodes(curve_nodes);\r\n\r\n    return path_nodes;\r\n  }\r\n\r\n  calck_rating(glcontour, glass) {\r\n\r\n    const {outer_profiles} = glass;\r\n    let crating = 0;\r\n\r\n    if (outer_profiles.length) {\r\n      for(const cnt of glcontour) {\r\n        for(const curr of outer_profiles) {\r\n          if(cnt.profile == curr.profile && cnt.b.is_nearest(curr.b) && cnt.e.is_nearest(curr.e)) {\r\n            crating++;\r\n            break;\r\n          }\r\n        }\r\n        if (crating > 2) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      const {nodes} = glass;\r\n      for(const cnt of glcontour) {\r\n        for(const node of nodes) {\r\n          if (cnt.b.is_nearest(node)) {\r\n            crating++;\r\n            break;\r\n          }\r\n        }\r\n        if (crating > 2) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return crating;\r\n  }\r\n\r\n  glass_recalc() {\r\n    const {glass_contours} = this;      \r\n    const glasses = this.glasses(true); \r\n    const binded = new Set();\r\n\r\n    for(const glass of glasses) {\r\n      if (glass.visible) {\r\n        continue;\r\n      }\r\n      for(const glcontour of glass_contours) {\r\n        if (binded.has(glcontour)) {\r\n          continue;\r\n        }\r\n        if (this.calck_rating(glcontour, glass) > 2) {\r\n          glass.path = glcontour;\r\n          glass.visible = true;\r\n          if (glass instanceof Filling) {\r\n            glass.redraw();\r\n          }\r\n          binded.add(glcontour);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(const glcontour of glass_contours) {\r\n      if (binded.has(glcontour)) {\r\n        continue;\r\n      }\r\n\r\n      let rating = 0, glass, crating, cglass, glass_center;\r\n\r\n      for (const g in glasses) {\r\n\r\n        glass = glasses[g];\r\n        if (glass.visible) {\r\n          continue;\r\n        }\r\n\r\n        crating = this.calck_rating(glcontour, glass);\r\n\r\n        if (crating > rating || !cglass) {\r\n          rating = crating;\r\n          cglass = glass;\r\n        }\r\n        if (crating == rating && cglass != glass) {\r\n          if (!glass_center) {\r\n            glass_center = glcontour.reduce((sum, val) => sum.add(val.b), new paper.Point).divide(glcontour.length);\r\n          }\r\n          if (glass_center.getDistance(glass.bounds.center, true) < glass_center.getDistance(cglass.bounds.center, true)) {\r\n            cglass = glass;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (cglass || (cglass = this.getItem({class: Filling, visible: false}))) {\r\n        cglass.path = glcontour;\r\n        cglass.visible = true;\r\n        if (cglass instanceof Filling) {\r\n          cglass.redraw();\r\n        }\r\n      }\r\n      else {\r\n        if (glass = this.getItem({class: Filling})) {\r\n\r\n        }\r\n        else if (glass = this.project.getItem({class: Filling})) {\r\n\r\n        }\r\n        else {\r\n\r\n        }\r\n        cglass = new Filling({proto: glass, parent: this, path: glcontour});\r\n        cglass.redraw();\r\n      }\r\n    }\r\n  }\r\n\r\n  get glass_segments() {\r\n    const nodes = [];\r\n\r\n    function push_new(profile, b, e, outer = false) {\r\n      if(b.is_nearest(e, 0)){\r\n        return;\r\n      }\r\n      for(const segm of nodes) {\r\n        if(segm.profile === profile && segm.b.is_nearest(b, 0) && segm.e.is_nearest(e, 0) && segm.outer == outer){\r\n          return;\r\n        }\r\n      }\r\n      nodes.push(new GlassSegment(profile, b, e, outer));\r\n    }\r\n\r\n    for(const p of this.profiles) {\r\n      const sort = GlassSegment.fn_sort.bind(p.generatrix);\r\n\r\n      const ip = p.joined_imposts();\r\n      const {b: pb, e: pe} = p.rays;\r\n\r\n      const pbg = pb.is_t && pb.profile.d0 ? pb.profile.generatrix.getNearestPoint(p.b) : p.b;\r\n      const peg = pe.is_t && pe.profile.d0 ? pe.profile.generatrix.getNearestPoint(p.e) : p.e;\r\n\r\n      if (ip.inner.length) {\r\n\r\n        ip.inner.sort(sort);\r\n\r\n        if (!pb.is_i && !pbg.is_nearest(ip.inner[0].point)) {\r\n          push_new(p, pbg, ip.inner[0].point);\r\n        }\r\n\r\n        for (let i = 1; i < ip.inner.length; i++) {\r\n          push_new(p, ip.inner[i - 1].point, ip.inner[i].point);\r\n        }\r\n\r\n        if (!pe.is_i && !ip.inner[ip.inner.length - 1].point.is_nearest(peg)) {\r\n          push_new(p, ip.inner[ip.inner.length - 1].point, peg);\r\n        }\r\n\r\n      }\r\n      if (ip.outer.length) {\r\n\r\n        ip.outer.sort(sort);\r\n\r\n        if (!pb.is_i && !ip.outer[0].point.is_nearest(pbg)) {\r\n          push_new(p, ip.outer[0].point, pbg, true);\r\n        }\r\n\r\n        for (let i = 1; i < ip.outer.length; i++) {\r\n          push_new(p, ip.outer[i].point, ip.outer[i - 1].point, true);\r\n        }\r\n\r\n        if (!pe.is_i && !peg.is_nearest(ip.outer[ip.outer.length - 1].point)) {\r\n          push_new(p, peg, ip.outer[ip.outer.length - 1].point, true);\r\n        }\r\n      }\r\n\r\n      if (!ip.inner.length) {\r\n        if (!pb.is_i && !pe.is_i) {\r\n          push_new(p, pbg, peg);\r\n        }\r\n      }\r\n\r\n      if (!ip.outer.length && (pb.is_cut || pe.is_cut || pb.is_t || pe.is_t)) {\r\n        if (!pb.is_i && !pe.is_i) {\r\n          push_new(p, peg, pbg, true);\r\n        }\r\n      }\r\n      else if(pb.is_x || pe.is_x) {\r\n        push_new(p, peg, pbg, true);\r\n      }\r\n    }\r\n\r\n    return nodes;\r\n  }\r\n\r\n  get is_rectangular() {\r\n    const {Импост} = $p.enm.elm_types;\r\n    const outer = this.profiles.filter((v) => v.elm_type != Импост);\r\n    return outer.length === 4 && !outer.some(profile => !(profile.is_linear() && Math.abs(profile.angle_hor % 90) < 0.2));\r\n  }\r\n\r\n  move(delta) {\r\n    const {contours, profiles, project} = this;\r\n    const crays = (p) => p.rays.clear();\r\n    this.translate(delta);\r\n    contours.forEach((elm) => elm.profiles.forEach(crays));\r\n    profiles.forEach(crays);\r\n    project.register_change();\r\n  }\r\n\r\n  get nodes() {\r\n    const nodes = [];\r\n    this.profiles.forEach(({b, e}) => {\r\n      let findedb;\r\n      let findede;\r\n      nodes.forEach((n) => {\r\n        if (b && b.is_nearest(n)) {\r\n          findedb = true;\r\n        }\r\n        if (e && e.is_nearest(n)) {\r\n          findede = true;\r\n        }\r\n      });\r\n      if (!findedb && b) {\r\n        nodes.push(b.clone());\r\n      }\r\n      if (!findede && e) {\r\n        nodes.push(e.clone());\r\n      }\r\n    });\r\n    return nodes;\r\n  }\r\n\r\n  count_nodes() {\r\n    const nodes = new PointMap();\r\n    this.profiles.forEach((profile) => {\r\n      const {b, e} = profile;\r\n      let findedb;\r\n      let findede;\r\n      for(const [key, value] of nodes) {\r\n        if (b && b.is_nearest(key)) {\r\n          value.push({profile, point: 'b'})\r\n          findedb = true;\r\n        }\r\n        if (e && e.is_nearest(key)) {\r\n          value.push({profile, point: 'e'})\r\n          findede = true;\r\n        }\r\n      }\r\n      if (!findedb && b) {\r\n        nodes.set(b.clone(), [{profile, point: 'b'}]);\r\n      }\r\n      if (!findede && e) {\r\n        nodes.set(e.clone(), [{profile, point: 'e'}]);\r\n      }\r\n    });\r\n    return nodes;\r\n  }\r\n\r\n  notify(obj, type = 'update') {\r\n    if (obj.type) {\r\n      type = obj.type;\r\n    }\r\n    this.project._scope.eve.emit_async(type, obj);\r\n    type === consts.move_points && this.project.register_change();\r\n  }\r\n\r\n  get outer_nodes() {\r\n    return this.outer_profiles.map((v) => v.elm);\r\n  }\r\n\r\n  get outer_profiles() {\r\n    const {profiles} = this;\r\n    const to_remove = [];\r\n    const res = [];\r\n\r\n    let findedb, findede;\r\n\r\n    for (let i = 0; i < profiles.length; i++) {\r\n      const elm = profiles[i];\r\n      if (elm._attr.simulated)\r\n        continue;\r\n      findedb = false;\r\n      findede = false;\r\n      for (let j = 0; j < profiles.length; j++) {\r\n        if (profiles[j] == elm)\r\n          continue;\r\n        if (!findedb && elm.has_cnn(profiles[j], elm.b) && elm.b.is_nearest(profiles[j].e))\r\n          findedb = true;\r\n        if (!findede && elm.has_cnn(profiles[j], elm.e) && elm.e.is_nearest(profiles[j].b))\r\n          findede = true;\r\n      }\r\n      if (!findedb || !findede){\r\n        to_remove.push(elm);\r\n      }\r\n    }\r\n    for (let i = 0; i < profiles.length; i++) {\r\n      const elm = profiles[i];\r\n      if (to_remove.indexOf(elm) != -1)\r\n        continue;\r\n      elm._attr.binded = false;\r\n      res.push({\r\n        elm: elm,\r\n        profile: elm.nearest(true),\r\n        b: elm.b,\r\n        e: elm.e,\r\n      });\r\n    }\r\n    return res;\r\n  }\r\n\r\n  profile_by_furn_side(side, cache) {\r\n\r\n    if (!cache || !cache.profiles) {\r\n      cache = {\r\n        profiles: this.outer_nodes,\r\n        bottom: this.profiles_by_side('bottom'),\r\n      };\r\n    }\r\n\r\n    const profile_node = this.direction == $p.enm.open_directions.Правое ? 'b' : 'e';\r\n    const other_node = profile_node == 'b' ? 'e' : 'b';\r\n\r\n    let profile = cache.bottom;\r\n\r\n    const next = () => {\r\n      side--;\r\n      if (side <= 0) {\r\n        return profile;\r\n      }\r\n\r\n      cache.profiles.some((curr) => {\r\n        if (curr[other_node].is_nearest(profile[profile_node])) {\r\n          profile = curr;\r\n          return true;\r\n        }\r\n      });\r\n\r\n      return next();\r\n    };\r\n\r\n    return next();\r\n\r\n  }\r\n\r\n\r\n  profile_by_nodes(n1, n2, point) {\r\n    const {profiles} = this;\r\n    for (let i = 0; i < profiles.length; i++) {\r\n      const {generatrix} = profiles[i];\r\n      if (generatrix.getNearestPoint(n1).is_nearest(n1) && generatrix.getNearestPoint(n2).is_nearest(n2)) {\r\n        if (!point || generatrix.getNearestPoint(point).is_nearest(point))\r\n          return profiles[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    const {children, _row, cnstr} = this;\r\n    while (children.length) {\r\n      children[0].remove();\r\n    }\r\n\r\n    if (_row) {\r\n      const {ox} = this.project;\r\n      ox.coordinates.clear({cnstr});\r\n      ox.params.clear({cnstr});\r\n\r\n      if (ox === _row._owner._owner) {\r\n        _row._owner.del(_row);\r\n      }\r\n      this._row = null;\r\n    }\r\n\r\n    super.remove();\r\n  }\r\n\r\n  get _manager() {\r\n    return this.project._dp._manager;\r\n  }\r\n\r\n  _metadata(fld) {\r\n\r\n    const {tabular_sections} = this.project.ox._metadata();\r\n    const {fields} = tabular_sections.constructions;\r\n\r\n    return fld ? (fields[fld] || tabular_sections[fld]) : {\r\n      fields: {\r\n        furn: fields.furn,\r\n        direction: fields.direction,\r\n        h_ruch: fields.h_ruch,\r\n      },\r\n      tabular_sections: {\r\n        params: tabular_sections.params,\r\n      },\r\n    };\r\n\r\n  }\r\n\r\n  get bounds() {\r\n    const {_attr, parent} = this;\r\n    if (!_attr._bounds || !_attr._bounds.width || !_attr._bounds.height) {\r\n\r\n      this.profiles.forEach((profile) => {\r\n        const path = profile.path && profile.path.segments.length ? profile.path : profile.generatrix;\r\n        if (path) {\r\n          _attr._bounds = _attr._bounds ? _attr._bounds.unite(path.bounds) : path.bounds;\r\n          if (!parent) {\r\n            const {d0} = profile;\r\n            if (d0) {\r\n              _attr._bounds = _attr._bounds.unite(profile.generatrix.bounds);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      this.sectionals.forEach((sectional) => {\r\n        _attr._bounds = _attr._bounds ? _attr._bounds.unite(sectional.bounds) : sectional.bounds;\r\n      });\r\n\r\n      if (!_attr._bounds) {\r\n        _attr._bounds = new paper.Rectangle();\r\n      }\r\n    }\r\n    return _attr._bounds;\r\n  }\r\n\r\n  get cnstr() {\r\n    return this._row ? this._row.cnstr : 0;\r\n  }\r\n\r\n  set cnstr(v) {\r\n    this._row && (this._row.cnstr = v);\r\n  }\r\n\r\n  get dimension_bounds() {\r\n    let bounds = super.dimension_bounds;\r\n    const ib = this.l_visualization._by_insets.bounds;\r\n    if (ib.height && ib.bottom > bounds.bottom) {\r\n      const delta = ib.bottom - bounds.bottom + 10;\r\n      bounds = bounds.unite(\r\n        new paper.Rectangle(bounds.bottomLeft, bounds.bottomRight.add([0, delta < 250 ? delta * 1.1 : delta * 1.2]))\r\n      );\r\n    }\r\n    return bounds;\r\n  }\r\n\r\n  get direction() {\r\n    return this._row.direction;\r\n  }\r\n\r\n  set direction(v) {\r\n    this._row.direction = v;\r\n    this.project.register_change(true);\r\n  }\r\n\r\n  zoom_fit() {\r\n    this.project.zoom_fit.call(this, null, true);\r\n  }\r\n\r\n  draw_cnn_errors() {\r\n\r\n    const {l_visualization} = this;\r\n\r\n    if (l_visualization._cnn) {\r\n      l_visualization._cnn.removeChildren();\r\n    }\r\n    else {\r\n      l_visualization._cnn = new paper.Group({parent: l_visualization});\r\n    }\r\n\r\n    const err_attrs = {\r\n      strokeColor: 'red',\r\n      strokeWidth: 2,\r\n      strokeCap: 'round',\r\n      strokeScaling: false,\r\n      dashOffset: 4,\r\n      dashArray: [4, 4],\r\n      guide: true,\r\n      parent: l_visualization._cnn,\r\n    };\r\n\r\n    this.glasses(false, true).forEach(glass => {\r\n      let err;\r\n      glass.profiles.forEach(({cnn, sub_path}) => {\r\n        if (!cnn) {\r\n          Object.assign(sub_path, err_attrs);\r\n          err = true;\r\n        }\r\n      });\r\n      if (err || glass.path.is_self_intersected()) {\r\n        glass.fill_error();\r\n      }\r\n      else {\r\n        const {form_area, inset: {smin, smax}} = glass;\r\n        if((smin && smin > form_area) || (smax && smax < form_area)) {\r\n          glass.fill_error();\r\n        }\r\n        else {\r\n          glass.path.fillColor = BuilderElement.clr_by_clr.call(glass, glass._row.clr, false);\r\n        }\r\n      }\r\n      glass.imposts.forEach((impost) => {\r\n        if(impost instanceof Onlay) {\r\n          const {b, e} = impost._attr._rays;\r\n          const oerr_attrs = Object.assign({radius: 50}, err_attrs);\r\n          b.check_err(oerr_attrs);\r\n          e.check_err(oerr_attrs);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.profiles.forEach((elm) => {\r\n      const {_corns, _rays} = elm._attr;\r\n      _rays.b.check_err(err_attrs);\r\n      _rays.e.check_err(err_attrs);\r\n      if (elm.nearest(true) && (!elm._attr._nearest_cnn || elm._attr._nearest_cnn.empty())) {\r\n        Object.assign(elm.path.get_subpath(_corns[1], _corns[2]), err_attrs);\r\n      }\r\n      elm.addls.forEach((elm) => {\r\n        if (elm.nearest(true) && (!elm._attr._nearest_cnn || elm._attr._nearest_cnn.empty())) {\r\n          Object.assign(elm.path.get_subpath(_corns[1], _corns[2]), err_attrs);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  draw_mosquito() {\r\n    const {l_visualization, project} = this;\r\n    if(project.builder_props.mosquito === false) {\r\n      return;\r\n    }\r\n    project.ox.inserts.find_rows({cnstr: this.cnstr}, (row) => {\r\n      if (row.inset.insert_type == $p.enm.inserts_types.МоскитнаяСетка) {\r\n        const props = {\r\n          parent: new paper.Group({parent: l_visualization._by_insets}),\r\n          strokeColor: 'grey',\r\n          strokeWidth: 3,\r\n          dashArray: [6, 4],\r\n          strokeScaling: false,\r\n        };\r\n        let sz, imposts;\r\n        row.inset.specification.forEach((rspec) => {\r\n          if (!sz && rspec.count_calc_method == $p.enm.count_calculating_ways.ПоПериметру && rspec.nom.elm_type == $p.enm.elm_types.Рама) {\r\n            sz = rspec.sz;\r\n          }\r\n          if (!imposts && rspec.count_calc_method == $p.enm.count_calculating_ways.ПоШагам && rspec.nom.elm_type == $p.enm.elm_types.Импост) {\r\n            imposts = rspec;\r\n          }\r\n        });\r\n\r\n        const perimetr = [];\r\n        if (typeof sz != 'number') {\r\n          sz = 20;\r\n        }\r\n        this.outer_profiles.forEach((curr) => {\r\n          const profile = curr.profile || curr.elm;\r\n          const is_outer = Math.abs(profile.angle_hor - curr.elm.angle_hor) > 60;\r\n          const ray = is_outer ? profile.rays.outer : profile.rays.inner;\r\n          const segm = ray.get_subpath(curr.b, curr.e).equidistant(sz);\r\n          perimetr.push(Object.assign(segm, props));\r\n        });\r\n\r\n        const count = perimetr.length - 1;\r\n        perimetr.forEach((curr, index) => {\r\n          const prev = index == 0 ? perimetr[count] : perimetr[index - 1];\r\n          const next = index == count ? perimetr[0] : perimetr[index + 1];\r\n          const b = curr.getIntersections(prev);\r\n          const e = curr.getIntersections(next);\r\n          if (b.length) {\r\n            curr.firstSegment.point = b[0].point;\r\n          }\r\n          if (e.length) {\r\n            curr.lastSegment.point = e[0].point;\r\n          }\r\n        });\r\n\r\n        const {elm_font_size} = consts;\r\n        const {bounds} = props.parent;\r\n        new paper.PointText({\r\n          parent: props.parent,\r\n          fillColor: 'black',\r\n          fontFamily: consts.font_family,\r\n          fontSize: consts.elm_font_size,\r\n          guide: true,\r\n          content: row.inset.presentation,\r\n          point: bounds.bottomLeft.add([elm_font_size * 1.2, -elm_font_size * 0.4]),\r\n        });\r\n\r\n        if (imposts) {\r\n          const {offsets, do_center, step} = imposts;\r\n          const add_impost = function (y) {\r\n            const impost = Object.assign(new paper.Path({\r\n              insert: false,\r\n              segments: [[bounds.left, y], [bounds.right, y]],\r\n            }), props);\r\n            const {length} = impost;\r\n            perimetr.forEach((curr) => {\r\n              const aloc = curr.getIntersections(impost);\r\n              if (aloc.length) {\r\n                const l1 = impost.firstSegment.point.getDistance(aloc[0].point);\r\n                const l2 = impost.lastSegment.point.getDistance(aloc[0].point);\r\n                if (l1 < length / 2) {\r\n                  impost.firstSegment.point = aloc[0].point;\r\n                }\r\n                if (l2 < length / 2) {\r\n                  impost.lastSegment.point = aloc[0].point;\r\n                }\r\n              }\r\n            });\r\n          }\r\n\r\n          if (step) {\r\n            const height = bounds.height - offsets;\r\n            if (height >= step) {\r\n              if (do_center) {\r\n                add_impost(bounds.centerY);\r\n              }\r\n              else {\r\n                for (let y = step; y < height; y += step) {\r\n                  add_impost(y);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  draw_jalousie(glass) {\r\n    const {l_visualization, project} = this;\r\n    if(project.builder_props.jalousie === false) {\r\n      return;\r\n    }\r\n    project.ox.inserts.find_rows({cnstr: -glass.elm}, ({inset, clr}) => {\r\n      if(inset.insert_type == $p.enm.inserts_types.Жалюзи) {\r\n\r\n        let control, type, shift, step, steps, pos;\r\n        project.ox.params.find_rows({inset, cnstr: -glass.elm}, ({param, value}) => {\r\n          if(value.css && ['tb_jalousie_horizontal', 'tb_jalousie_vertical', 'tb_jalousie_roller'].includes(value.css)) {\r\n            type = value.css.replace('tb_jalousie_', '');\r\n          }\r\n          if(value.css && ['tb_jalousie_control-side-left', 'tb_jalousie_control-side-right'].includes(value.css)) {\r\n            control = value.css.replace('tb_jalousie_control-side-', '');\r\n          }\r\n        });\r\n        if(!type) {\r\n          type = 'horizontal';\r\n        }\r\n        if(!control) {\r\n          control = 'left';\r\n        }\r\n\r\n        const props = {\r\n          parent: new paper.Group({parent: l_visualization._by_insets}),\r\n          fillColor: BuilderElement.clr_by_clr(clr),\r\n          shadowColor: 'lightgray',\r\n          shadowBlur: 20,\r\n          shadowOffset: [13, 13],\r\n          opacity: 0.3,\r\n          strokeScaling: false,\r\n          closed: true,\r\n          guide: true,\r\n        };\r\n        const bounds = glass.bounds_light();\r\n        inset.specification.forEach(({count_calc_method, sz, offsets}) => {\r\n          if (count_calc_method == $p.enm.count_calculating_ways.ПоПлощади && sz && offsets) {\r\n            bounds.height += offsets;\r\n            bounds.width += sz;\r\n            bounds.left -= sz * 0.6;\r\n            bounds.top -= offsets * 0.6;\r\n            return false;\r\n          }\r\n        });\r\n\r\n        switch (type) {\r\n        case 'roller':\r\n          new paper.Path(Object.assign({\r\n            segments: [bounds.topLeft, bounds.topRight, bounds.bottomRight, bounds.bottomLeft],\r\n          }, props));\r\n          break;\r\n\r\n        case 'horizontal':\r\n          steps = Math.floor(bounds.height / 60);\r\n          step = bounds.height / steps - 0.01;\r\n          pos = bounds.top;\r\n          while (pos < bounds.bottom - step) {\r\n            new paper.Path(Object.assign({\r\n              segments: [[bounds.left, pos], [bounds.right, pos], [bounds.right, pos + step - 20], [bounds.left, pos + step - 20]],\r\n            }, props));\r\n            pos += step;\r\n          }\r\n          break;\r\n\r\n        case 'vertical':\r\n          steps = Math.floor(bounds.width / 60);\r\n          step = bounds.width / steps - 0.01;\r\n          pos = bounds.left;\r\n          while (pos < bounds.right - step) {\r\n            new paper.Path(Object.assign({\r\n              segments: [[pos, bounds.top], [pos + step - 20, bounds.top], [pos + step - 20, bounds.bottom], [pos, bounds.bottom]],\r\n            }, props));\r\n            pos += step;\r\n          }\r\n          break;\r\n        }\r\n\r\n        pos = control === 'left' ? bounds.left - 10 : bounds.right + 10;\r\n        new paper.Path(Object.assign({\r\n          segments: [\r\n            [pos, bounds.top],\r\n            [pos + 10, bounds.top],\r\n            [pos + 10, bounds.bottom - 80],\r\n            [pos + 20, bounds.bottom - 40],\r\n            [pos - 10, bounds.bottom - 40],\r\n            [pos, bounds.bottom - 80],\r\n          ],\r\n        }, props, {\r\n          strokeColor: 'lightgray',\r\n          strokeOpacity: 0.5,\r\n          strokeWidth: 1,\r\n          fillColor: 'gray',\r\n          opacity: 0.6,\r\n        }));\r\n        new paper.Path(Object.assign({\r\n          segments: [\r\n            bounds.topLeft.add([0, -10]),\r\n            bounds.topRight.add([0, -10]),\r\n            bounds.topRight.add([0, 20]),\r\n            bounds.topLeft.add([0, 20]),\r\n          ],\r\n        }, props, {\r\n          strokeColor: 'lightgray',\r\n          strokeOpacity: 0.5,\r\n          strokeWidth: 1,\r\n          fillColor: 'lightgray',\r\n          opacity: 0.6,\r\n        }));\r\n\r\n        const {elm_font_size} = consts;\r\n        new paper.PointText({\r\n          parent: props.parent,\r\n          fillColor: 'black',\r\n          fontFamily: consts.font_family,\r\n          fontSize: consts.elm_font_size,\r\n          guide: true,\r\n          content: inset.presentation,\r\n          point: bounds.topLeft.add([elm_font_size/3, 0]),\r\n        });\r\n\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  draw_sill() {\r\n    const {l_visualization, project, cnstr} = this;\r\n    const {ox} = project;\r\n    const {properties} = $p.job_prm;\r\n    if (!properties) {\r\n      return;\r\n    }\r\n    const {length, width} = properties;\r\n\r\n    ox.inserts.find_rows({cnstr}, (row) => {\r\n      if (row.inset.insert_type == $p.enm.inserts_types.Подоконник) {\r\n\r\n        const bottom = this.profiles_by_side('bottom');\r\n        let vlen, vwidth;\r\n        ox.params.find_rows({cnstr: cnstr, inset: row.inset}, (prow) => {\r\n          if (prow.param == length) {\r\n            vlen = prow.value;\r\n          }\r\n          if (prow.param == width) {\r\n            vwidth = prow.value;\r\n          }\r\n        });\r\n        if (!vlen) {\r\n          vlen = bottom.length + 160;\r\n        }\r\n        if (vwidth) {\r\n          vwidth = vwidth * 0.7;\r\n        }\r\n        else {\r\n          vwidth = 200;\r\n        }\r\n        const delta = (vlen - bottom.length) / 2;\r\n\r\n        new paper.Path({\r\n          parent: new paper.Group({parent: l_visualization._by_insets}),\r\n          strokeColor: 'grey',\r\n          fillColor: BuilderElement.clr_by_clr(row.clr),\r\n          shadowColor: 'grey',\r\n          shadowBlur: 20,\r\n          shadowOffset: [10, 20],\r\n          opacity: 0.7,\r\n          strokeWidth: 1,\r\n          strokeScaling: false,\r\n          closed: true,\r\n          segments: [\r\n            bottom.b.add([delta, 0]),\r\n            bottom.e.add([-delta, 0]),\r\n            bottom.e.add([-delta - vwidth, vwidth]),\r\n            bottom.b.add([delta - vwidth, vwidth]),\r\n          ],\r\n        });\r\n\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  draw_opening() {\r\n\r\n    const _contour = this;\r\n    const {l_visualization, furn} = this;\r\n\r\n    if (!this.parent || !$p.enm.open_types.is_opening(furn.open_type)) {\r\n      if (l_visualization._opening && l_visualization._opening.visible)\r\n        l_visualization._opening.visible = false;\r\n      return;\r\n    }\r\n\r\n    const cache = {\r\n      profiles: this.outer_nodes,\r\n      bottom: this.profiles_by_side('bottom'),\r\n    };\r\n\r\n    function rotary_folding() {\r\n\r\n      const {_opening} = l_visualization;\r\n      const {side_count} = _contour;\r\n\r\n      furn.open_tunes.forEach((row) => {\r\n\r\n        if (row.rotation_axis) {\r\n          const axis = _contour.profile_by_furn_side(row.side, cache);\r\n          const other = _contour.profile_by_furn_side(\r\n            row.side + 2 <= side_count ? row.side + 2 : row.side - 2, cache);\r\n\r\n          _opening.moveTo(axis.corns(3));\r\n          _opening.lineTo(other.rays.inner.getPointAt(other.rays.inner.length / 2));\r\n          _opening.lineTo(axis.corns(4));\r\n\r\n        }\r\n      });\r\n    }\r\n\r\n    function sliding() {\r\n      const {center} = _contour.bounds;\r\n      const {_opening} = l_visualization;\r\n\r\n      if (_contour.direction == $p.enm.open_directions.Правое) {\r\n        _opening.moveTo(center.add([-100, 0]));\r\n        _opening.lineTo(center.add([100, 0]));\r\n        _opening.moveTo(center.add([30, 30]));\r\n        _opening.lineTo(center.add([100, 0]));\r\n        _opening.lineTo(center.add([30, -30]));\r\n      }\r\n      else {\r\n        _opening.moveTo(center.add([100, 0]));\r\n        _opening.lineTo(center.add([-100, 0]));\r\n        _opening.moveTo(center.add([-30, 30]));\r\n        _opening.lineTo(center.add([-100, 0]));\r\n        _opening.lineTo(center.add([-30, -30]));\r\n      }\r\n    }\r\n\r\n    if (!l_visualization._opening) {\r\n      l_visualization._opening = new paper.CompoundPath({\r\n        parent: _contour.l_visualization,\r\n        strokeColor: 'black',\r\n      });\r\n    }\r\n    else {\r\n      l_visualization._opening.removeChildren();\r\n    }\r\n\r\n    return furn.is_sliding ? sliding() : rotary_folding();\r\n\r\n  }\r\n\r\n  draw_visualization(rows) {\r\n\r\n    const {profiles, l_visualization, contours} = this;\r\n    const glasses = this.glasses(false, true).filter(({visible}) => visible);\r\n    l_visualization._by_spec.removeChildren();\r\n\r\n    if(!rows){\r\n      rows = [];\r\n      this.project.ox.specification.find_rows({dop: -1}, (row) => rows.push(row));\r\n    }\r\n\r\n    function draw (elm) {\r\n      if (this.elm === elm.elm && elm.visible) {\r\n        this.nom.visualization.draw(elm, l_visualization, this.len * 1000);\r\n        return true;\r\n      }\r\n    };\r\n\r\n    this.draw_mosquito();\r\n\r\n    this.draw_sill();\r\n\r\n    glasses.forEach(this.draw_jalousie.bind(this));\r\n\r\n    for(const row of rows){\r\n      if(!profiles.some(draw.bind(row))){\r\n        glasses.some((elm) => {\r\n          if (row.elm === elm.elm) {\r\n            row.nom.visualization.draw(elm, l_visualization, [row.len * 1000, row.width * 1000]);\r\n            return true;\r\n          }\r\n          return elm.imposts.some(draw.bind(row));\r\n        })\r\n      }\r\n    }\r\n\r\n    for(const contour of contours){\r\n      contour.draw_visualization(rows);\r\n    }\r\n\r\n  }\r\n\r\n  get hidden() {\r\n    return !!this._hidden;\r\n  }\r\n\r\n  set hidden(v) {\r\n    if (this.hidden != v) {\r\n      this._hidden = v;\r\n      const visible = !this._hidden;\r\n      this.children.forEach((elm) => {\r\n        if (elm instanceof BuilderElement) {\r\n          elm.visible = visible;\r\n        }\r\n      });\r\n      this.l_visualization.visible = visible;\r\n      this.l_dimensions.visible = visible;\r\n    }\r\n\r\n  }\r\n\r\n  hide_generatrix() {\r\n    this.profiles.forEach((elm) => {\r\n      elm.generatrix.visible = false;\r\n    });\r\n  }\r\n\r\n  get imposts() {\r\n    return this.getItems({class: Profile}).filter((elm) => {\r\n      const {b, e} = elm.rays;\r\n      return b.is_tt || e.is_tt || b.is_i || e.is_i;\r\n    });\r\n  }\r\n\r\n  get params() {\r\n    return this.project.ox.params;\r\n  }\r\n\r\n  get path() {\r\n    return this.bounds;\r\n  }\r\n\r\n  set path(attr) {\r\n    if (!Array.isArray(attr)) {\r\n      return;\r\n    }\r\n\r\n    const noti = {type: consts.move_points, profiles: [], points: []};\r\n    const {outer_nodes} = this;\r\n\r\n    let need_bind = attr.length,\r\n      available_bind = outer_nodes.length,\r\n      elm, curr;\r\n\r\n    function set_node(n) {\r\n      if (!curr[n].is_nearest(elm[n], 0)) {\r\n        elm.rays.clear(true);\r\n        elm[n] = curr[n];\r\n        if (noti.profiles.indexOf(elm) == -1) {\r\n          noti.profiles.push(elm);\r\n        }\r\n        if (!noti.points.some((point) => point.is_nearest(elm[n], 0))) {\r\n          noti.points.push(elm[n]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (need_bind) {\r\n      for (let i = 0; i < attr.length; i++) {\r\n        curr = attr[i];             \r\n        for (let j = 0; j < outer_nodes.length; j++) {\r\n          elm = outer_nodes[j];   \r\n          if (elm._attr.binded) {\r\n            continue;\r\n          }\r\n          if (curr.profile.is_nearest(elm)) {\r\n            elm._attr.binded = true;\r\n            curr.binded = true;\r\n            need_bind--;\r\n            available_bind--;\r\n\r\n            set_node('b');\r\n            set_node('e');\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (need_bind) {\r\n      for (let i = 0; i < attr.length; i++) {\r\n        curr = attr[i];\r\n        if (curr.binded)\r\n          continue;\r\n        for (let j = 0; j < outer_nodes.length; j++) {\r\n          elm = outer_nodes[j];\r\n          if (elm._attr.binded)\r\n            continue;\r\n          if (curr.b.is_nearest(elm.b, true) || curr.e.is_nearest(elm.e, true)) {\r\n            elm._attr.binded = true;\r\n            curr.binded = true;\r\n            need_bind--;\r\n            available_bind--;\r\n\r\n            set_node('b');\r\n            set_node('e');\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (need_bind && available_bind) {\r\n      for (let i = 0; i < attr.length; i++) {\r\n        curr = attr[i];\r\n        if (curr.binded)\r\n          continue;\r\n        for (let j = 0; j < outer_nodes.length; j++) {\r\n          elm = outer_nodes[j];\r\n          if (elm._attr.binded)\r\n            continue;\r\n          elm._attr.binded = true;\r\n          curr.binded = true;\r\n          need_bind--;\r\n          available_bind--;\r\n\r\n          set_node('b');\r\n          set_node('e');\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (need_bind) {\r\n      const ProfileConstructor = this instanceof ContourVirtual ? ProfileVirtual : Profile;\r\n      for (let i = 0; i < attr.length; i++) {\r\n        curr = attr[i];\r\n        if (curr.binded) {\r\n          continue;\r\n        }\r\n        elm = new ProfileConstructor({\r\n          generatrix: curr.profile.generatrix.get_subpath(curr.b, curr.e),\r\n          proto: outer_nodes.length ? outer_nodes[0] : {parent: this, clr: curr.profile.clr},\r\n          _nearest: curr.profile,\r\n        });\r\n\r\n        curr.profile = elm;\r\n        delete curr.outer;\r\n        curr.binded = true;\r\n\r\n        noti.profiles.push(elm);\r\n        noti.points.push(elm.b);\r\n        noti.points.push(elm.e);\r\n\r\n        need_bind--;\r\n      }\r\n    }\r\n\r\n    if (available_bind) {\r\n      outer_nodes.forEach((elm) => {\r\n        if (!elm._attr.binded) {\r\n          elm.rays.clear(true);\r\n          elm.remove();\r\n          available_bind--;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.profiles.forEach((p) => p.default_inset());\r\n\r\n    if (noti.points.length) {\r\n      this.profiles.forEach((p) => p._attr._rays && p._attr._rays.clear());\r\n      this.notify(noti);\r\n    }\r\n\r\n    this._attr._bounds = null;\r\n  }\r\n\r\n  get perimeter() {\r\n    const res = [];\r\n    this.outer_profiles.forEach((curr) => {\r\n      const tmp = curr.sub_path ? {\r\n        len: curr.sub_path.length,\r\n        angle: curr.e.subtract(curr.b).angle,\r\n      } : {\r\n        len: curr.elm.length,\r\n        angle: curr.elm.angle_hor,\r\n      };\r\n      res.push(tmp);\r\n      if (tmp.angle < 0) {\r\n        tmp.angle += 360;\r\n      }\r\n      tmp.angle_hor = tmp.angle;\r\n      tmp.profile = curr.profile || curr.elm;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  perimeter_inner(size) {\r\n    const {center} = this.bounds;\r\n    const res = this.outer_profiles.map((curr) => {\r\n      const profile = curr.profile || curr.elm;\r\n      const {inner, outer} = profile.rays;\r\n      const sub_path = inner.getNearestPoint(center).getDistance(center, true) < outer.getNearestPoint(center).getDistance(center, true) ?\r\n        inner.get_subpath(inner.getNearestPoint(curr.b), inner.getNearestPoint(curr.e)) : outer.get_subpath(outer.getNearestPoint(curr.b), outer.getNearestPoint(curr.e));\r\n      let angle = curr.e.subtract(curr.b).angle.round(1);\r\n      if(angle < 0) angle += 360;\r\n      return {\r\n        profile,\r\n        sub_path,\r\n        angle,\r\n        b: curr.b,\r\n        e: curr.e,\r\n      };\r\n    });\r\n    const ubound = res.length - 1;\r\n    return res.map((curr, index) => {\r\n      let sub_path = curr.sub_path.equidistant(size);\r\n      const prev = !index ? res[ubound] : res[index - 1];\r\n      const next = (index == ubound) ? res[0] : res[index + 1];\r\n      const b = sub_path.intersect_point(prev.sub_path.equidistant(size), curr.b, true);\r\n      const e = sub_path.intersect_point(next.sub_path.equidistant(size), curr.e, true);\r\n      if (b && e) {\r\n        sub_path = sub_path.get_subpath(b, e);\r\n      }\r\n      return {\r\n        profile: curr.profile,\r\n        angle: curr.angle,\r\n        len: sub_path.length,\r\n        sub_path,\r\n      };\r\n    });\r\n  }\r\n\r\n  bounds_inner(size) {\r\n    const path = new paper.Path({insert: false});\r\n    for (let curr of this.perimeter_inner(size)) {\r\n      path.addSegments(curr.sub_path.segments);\r\n    }\r\n    if (path.segments.length && !path.closed) {\r\n      path.closePath(true);\r\n    }\r\n    path.reduce();\r\n    return path.bounds;\r\n  }\r\n\r\n  get pos() {\r\n\r\n  }\r\n\r\n  get profiles() {\r\n    return this.children.filter((elm) => elm instanceof Profile);\r\n  }\r\n\r\n  get sectionals() {\r\n    return this.children.filter((elm) => elm instanceof Sectional);\r\n  }\r\n\r\n  get onlays() {\r\n    const res = [];\r\n    this.fillings.forEach((filling) => {\r\n      filling.children.forEach((elm) => elm instanceof Onlay && res.push(elm));\r\n    })\r\n    return res;\r\n  }\r\n\r\n\r\n  redraw() {\r\n\r\n    if (!this.visible) {\r\n      return;\r\n    }\r\n\r\n    this._attr._bounds = null;\r\n\r\n    const {_by_insets, _by_spec} = this.l_visualization;\r\n    _by_insets.removeChildren();\r\n    !this.project._attr._saving && _by_spec.removeChildren();\r\n\r\n\r\n    for(const elm of this.profiles) {\r\n      elm.redraw();\r\n    }\r\n\r\n    this.glass_recalc();\r\n\r\n\r\n    this.draw_opening();\r\n\r\n    for(const elm of this.contours) {\r\n      elm.redraw();\r\n    }\r\n\r\n    this.draw_cnn_errors();\r\n\r\n    for(const elm of this.sectionals) {\r\n      elm.redraw();\r\n    }\r\n\r\n    this.notify(this, 'contour_redrawed', this._attr._bounds);\r\n\r\n  }\r\n\r\n  refresh_prm_links(root) {\r\n\r\n    const cnstr = root ? 0 : this.cnstr || -9999;\r\n    let notify;\r\n\r\n    this.params.find_rows({\r\n      cnstr,\r\n      inset: $p.utils.blank.guid,\r\n    }, (prow) => {\r\n      const {param} = prow;\r\n      const links = param.params_links({grid: {selection: {cnstr}}, obj: prow});\r\n      let hide = !param.show_calculated && param.is_calculated;\r\n      if(!hide){\r\n        if(links.length) {\r\n          hide = links.some((link) => link.hide);\r\n        }\r\n        else {\r\n          hide = prow.hide;\r\n        }\r\n      };\r\n\r\n      if (links.length && param.linked_values(links, prow)) {\r\n        notify = true;\r\n      }\r\n      if (prow.hide !== hide) {\r\n        prow.hide = hide;\r\n        notify = true;\r\n      }\r\n    });\r\n\r\n    if(notify) {\r\n      this.notify(this, 'refresh_prm_links');\r\n      if(root) {\r\n        const {_dp} = this.project;\r\n        _dp._manager.emit_async('rows', _dp, {extra_fields: true});\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  save_coordinates(short) {\r\n\r\n    if (!short) {\r\n      if(!this.hidden) {\r\n        this.glasses(false, true).forEach((glass) => !glass.visible && glass.remove());\r\n      }\r\n\r\n      const {l_text, l_dimensions} = this;\r\n      for (let elm of this.children) {\r\n        if (elm.save_coordinates) {\r\n          elm.save_coordinates();\r\n        }\r\n        else if (elm === l_text || elm === l_dimensions) {\r\n          elm.children.forEach((elm) => elm.save_coordinates && elm.save_coordinates());\r\n        }\r\n      }\r\n    }\r\n\r\n    const {bounds} = this;\r\n    this._row.x = bounds ? bounds.width.round(4) : 0;\r\n    this._row.y = bounds ? bounds.height.round(4) : 0;\r\n    this._row.is_rectangular = this.is_rectangular;\r\n    if (this.parent) {\r\n      this._row.w = this.w.round(4);\r\n      this._row.h = this.h.round(4);\r\n    }\r\n    else {\r\n      this._row.w = 0;\r\n      this._row.h = 0;\r\n    }\r\n  }\r\n\r\n  sort_nodes(nodes) {\r\n    if (!nodes.length) {\r\n      return nodes;\r\n    }\r\n    let prev = nodes[0];\r\n    const res = [prev];\r\n    let couner = nodes.length + 1;\r\n\r\n    while (res.length < nodes.length && couner) {\r\n      couner--;\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        const curr = nodes[i];\r\n        if (res.indexOf(curr) != -1)\r\n          continue;\r\n        if (prev.node2 == curr.node1) {\r\n          res.push(curr);\r\n          prev = curr;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (couner) {\r\n      nodes.length = 0;\r\n      for (let i = 0; i < res.length; i++) {\r\n        nodes.push(res[i]);\r\n      }\r\n      res.length = 0;\r\n    }\r\n  }\r\n\r\n\r\n  get furn_cache() {\r\n    return {\r\n      profiles: this.outer_nodes,\r\n      bottom: this.profiles_by_side('bottom'),\r\n      ox: this.project.ox,\r\n      w: this.w,\r\n      h: this.h,\r\n    };\r\n  }\r\n\r\n  handle_line(elm) {\r\n\r\n    const {bounds, h_ruch} = this;\r\n    const by_side = this.profiles_by_side();\r\n    return (elm == by_side.top || elm == by_side.bottom) ?\r\n      new paper.Path({\r\n        insert: false,\r\n        segments: [[bounds.left + h_ruch, bounds.top - 200], [bounds.left + h_ruch, bounds.bottom + 200]],\r\n      }) :\r\n      new paper.Path({\r\n        insert: false,\r\n        segments: [[bounds.left - 200, bounds.bottom - h_ruch], [bounds.right + 200, bounds.bottom - h_ruch]],\r\n      });\r\n\r\n  }\r\n\r\n  update_handle_height(cache, from_setter) {\r\n\r\n    const {furn, _row, project} = this;\r\n    const {furn_set, handle_side} = furn;\r\n    if (!handle_side || furn_set.empty()) {\r\n      return;\r\n    }\r\n\r\n    if (!cache) {\r\n      cache = this.furn_cache;\r\n      cache.ignore_formulas = true;\r\n    }\r\n\r\n    const elm = this.profile_by_furn_side(handle_side, cache);\r\n    if (!elm) {\r\n      return;\r\n    }\r\n\r\n    const {len} = elm._row;\r\n    let handle_height;\r\n\r\n    function set_handle_height(row) {\r\n      const {handle_height_base, fix_ruch} = row;\r\n      if (handle_height_base < 0) {\r\n        if (fix_ruch || _row.fix_ruch != -3) {\r\n          _row.fix_ruch = fix_ruch ? -2 : -1;\r\n          return handle_height = (len / 2).round();\r\n        }\r\n      }\r\n      else if (handle_height_base > 0) {\r\n        if (fix_ruch || _row.fix_ruch != -3) {\r\n          _row.fix_ruch = fix_ruch ? -2 : -1\r\n          return handle_height = handle_height_base;\r\n        }\r\n      }\r\n    }\r\n\r\n    furn.furn_set.specification.find_rows({dop: 0}, (row) => {\r\n\r\n      if (!row.quantity || !row.check_restrictions(this, cache)) {\r\n        return;\r\n      }\r\n      if (set_handle_height(row)) {\r\n        return false;\r\n      }\r\n      const {nom} = row;\r\n      if (nom && row.is_set_row) {\r\n        let ok = false;\r\n        nom.get_spec(this, cache, true).each((sub_row) => {\r\n          if (set_handle_height(sub_row)) {\r\n            return !(ok = true);\r\n          }\r\n        });\r\n        if (ok) {\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n\r\n    if(handle_height && !from_setter && _row.h_ruch != handle_height){\r\n      _row.h_ruch = handle_height;\r\n      project._dp._manager.emit('update', this, {h_ruch: true});\r\n    }\r\n    return handle_height;\r\n  }\r\n\r\n  get h_ruch() {\r\n    const {layer, _row} = this;\r\n    return layer ? _row.h_ruch : 0;\r\n  }\r\n\r\n  set h_ruch(v) {\r\n    const {layer, _row, project} = this;\r\n\r\n    if (layer) {\r\n      const old_fix_ruch = _row.fix_ruch;\r\n      if (old_fix_ruch == -3) {\r\n        _row.fix_ruch = -1;\r\n      }\r\n      const h_ruch = this.update_handle_height(null, true);\r\n      if(h_ruch && (old_fix_ruch != -3 || v == 0)){\r\n        _row.h_ruch = h_ruch;\r\n      }\r\n\r\n      if (v != 0 && [0, -1, -3].indexOf(_row.fix_ruch) != -1) {\r\n        _row.h_ruch = v;\r\n        if (_row.fix_ruch == -1 && v != h_ruch) {\r\n          _row.fix_ruch = -3;\r\n        }\r\n      }\r\n      project.register_change();\r\n    }\r\n    else {\r\n      _row.h_ruch = 0;\r\n    }\r\n    project._dp._manager.emit('update', this, {h_ruch: true});\r\n  }\r\n\r\n  get side_count() {\r\n    const {Импост} = $p.enm.elm_types;\r\n    let res = 0;\r\n    this.profiles.forEach((v) => v.elm_type != Импост && res++);\r\n    return res;\r\n  }\r\n\r\n  get w() {\r\n    const {is_rectangular, bounds} = this;\r\n    const {left, right} = this.profiles_by_side();\r\n    return bounds && left && right ? bounds.width - left.nom.sizefurn - right.nom.sizefurn : 0;\r\n  }\r\n\r\n  get h() {\r\n    const {is_rectangular, bounds} = this;\r\n    const {top, bottom} = this.profiles_by_side();\r\n    return bounds && top && bottom ? bounds.height - top.nom.sizefurn - bottom.nom.sizefurn : 0;\r\n  }\r\n\r\n  get l_text() {\r\n    const {_attr} = this;\r\n    return _attr._txt || (_attr._txt = new paper.Group({parent: this}));\r\n  }\r\n\r\n  get l_visualization() {\r\n    const {_attr} = this;\r\n    if (!_attr._visl) {\r\n      _attr._visl = new paper.Group({parent: this, guide: true});\r\n      _attr._visl._by_insets = new paper.Group({parent: _attr._visl});\r\n      _attr._visl._by_spec = new paper.Group({parent: _attr._visl});\r\n    }\r\n    return _attr._visl;\r\n  }\r\n\r\n  get opacity() {\r\n    return this.children.length ? this.children[0].opacity : 1;\r\n  }\r\n\r\n  set opacity(v) {\r\n    this.children.forEach((elm) => {\r\n      if (elm instanceof BuilderElement)\r\n        elm.opacity = v;\r\n    });\r\n  }\r\n\r\n  on_remove_elm(elm) {\r\n    if (this.parent) {\r\n      this.parent.on_remove_elm(elm);\r\n    }\r\n    if (elm instanceof Profile && !this.project._attr._loading) {\r\n      this.l_dimensions.clear();\r\n    }\r\n  }\r\n\r\n  on_insert_elm(elm) {\r\n    if (this.parent) {\r\n      this.parent.on_remove_elm(elm);\r\n    }\r\n    if (elm instanceof Profile && !this.project._attr._loading) {\r\n      this.l_dimensions.clear();\r\n    }\r\n  }\r\n\r\n  on_sys_changed() {\r\n    this.profiles.forEach((elm) => elm.default_inset(true));\r\n\r\n    this.glasses().forEach((elm) => {\r\n      if (elm instanceof Contour) {\r\n        elm.on_sys_changed();\r\n      }\r\n      else {\r\n        if (elm.thickness < elm.project._dp.sys.tmin || elm.thickness > elm.project._dp.sys.tmax)\r\n          elm._row.inset = elm.project.default_inset({elm_type: [$p.enm.elm_types.Стекло, $p.enm.elm_types.Заполнение]});\r\n        elm.profiles.forEach((curr) => {\r\n          if (!curr.cnn || !curr.cnn.check_nom2(curr.profile))\r\n            curr.cnn = $p.cat.cnns.elm_cnn(elm, curr.profile, $p.enm.cnn_types.acn.ii);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nGlassSegment.fn_sort = function sort_segments(a, b) {\r\n  const da = this.getOffsetOf(a.point);\r\n  const db = this.getOffsetOf(b.point);\r\n  if (da < db) {\r\n    return -1;\r\n  }\r\n  else if (da > db) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nGlassSegment.next = function next_segments(curr, nodes, segments) {\r\n  if (!curr.anext) {\r\n    curr.anext = [];\r\n    for(const segm of segments) {\r\n      if (segm === curr || segm.profile === curr.profile){\r\n        continue;\r\n      }\r\n      if (curr.has_cnn(segm, nodes, segments)) {\r\n        const angle = curr.e.subtract(curr.b).getDirectedAngle(segm.e.subtract(segm.b));\r\n        if (segments.length < 3 || angle >= 0 || Math.abs(angle + 180) < 1)\r\n          curr.anext.push(segm);\r\n      }\r\n    }\r\n  }\r\n  return curr.anext;\r\n}\r\n\r\nEditorInvisible.Contour = Contour;\r\nEditorInvisible.GlassSegment = GlassSegment;\r\n\r\n\r\nclass ContourNested extends Contour {\r\n\r\n  constructor(attr) {\r\n    super(attr);\r\n    if(!this._row.kind) {\r\n      this._row.kind = 2;\r\n    }\r\n\r\n  }\r\n\r\n  remove() {\r\n\r\n    super.remove();\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.ContourNested = ContourNested;\r\n\r\n\r\n\r\nclass ContourVirtual extends Contour {\r\n\r\n  constructor(attr) {\r\n    super(attr);\r\n    if(!this._row.kind) {\r\n      this._row.kind = 1;\r\n    }\r\n  }\r\n\r\n  save_coordinates(short) {\r\n\r\n    if (!short) {\r\n      const {l_text, l_dimensions} = this;\r\n      for (let elm of this.children) {\r\n        if (elm === l_text || elm === l_dimensions) {\r\n          elm.children.forEach((elm) => elm.save_coordinates && elm.save_coordinates());\r\n        }\r\n        else if (elm.save_coordinates && !(elm instanceof ProfileVirtual)) {\r\n          elm.save_coordinates();\r\n        }\r\n      }\r\n    }\r\n\r\n    super.save_coordinates(true);\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.ContourVirtual = ContourVirtual;\r\n\r\n\r\nclass DimensionGroup {\r\n\r\n  clear() {\r\n    for (let key in this) {\r\n      this[key].removeChildren();\r\n      this[key].remove();\r\n      delete this[key];\r\n    }\r\n  }\r\n\r\n  has_size(size) {\r\n    for (let key in this) {\r\n      const {path} = this[key];\r\n      if(path && Math.abs(path.length - size) < 1) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass DimensionLayer extends paper.Layer {\r\n\r\n  get bounds() {\r\n    return this.project.bounds;\r\n  }\r\n\r\n  get owner_bounds() {\r\n    return this.bounds;\r\n  }\r\n\r\n  get dimension_bounds() {\r\n    return this.project.dimension_bounds;\r\n  }\r\n\r\n}\r\n\r\nclass DimensionDrawer extends paper.Group {\r\n\r\n  constructor(attr) {\r\n    super(attr);\r\n    this.bringToFront();\r\n  }\r\n\r\n  clear() {\r\n\r\n    this.ihor && this.ihor.clear();\r\n    this.ivert && this.ivert.clear();\r\n\r\n    for (let pos of ['bottom', 'top', 'right', 'left']) {\r\n      if(this[pos]) {\r\n        this[pos].removeChildren();\r\n        this[pos].remove();\r\n        this[pos] = null;\r\n      }\r\n    }\r\n\r\n    this.layer && this.layer.parent && this.layer.parent.l_dimensions.clear();\r\n  }\r\n\r\n  redraw(forse) {\r\n\r\n    const {parent, project: {builder_props}} = this;\r\n\r\n    if(forse || !builder_props.auto_lines) {\r\n      this.clear();\r\n    }\r\n\r\n    for (let chld of parent.contours) {\r\n      chld.l_dimensions.redraw();\r\n    }\r\n\r\n    if(builder_props.auto_lines && (!parent.parent || forse)) {\r\n\r\n      const {ihor, ivert, by_side} = this.imposts();\r\n      if(!Object.keys(by_side).length) {\r\n        return this.clear();\r\n      }\r\n\r\n      const profiles = new Set(parent.profiles);\r\n      parent.imposts.forEach((elm) => elm.visible && profiles.add(elm));\r\n\r\n      for (let elm of profiles) {\r\n\r\n        const our = !elm.parent || elm.parent === parent;\r\n        const eb = our ? (elm instanceof GlassSegment ? elm._sub.b : elm.b) : elm.rays.b.npoint;\r\n        const ee = our ? (elm instanceof GlassSegment ? elm._sub.e : elm.e) : elm.rays.e.npoint;\r\n\r\n        this.push_by_point({ihor, ivert, eb, ee, elm});\r\n      }\r\n\r\n      if(ihor.length > 2) {\r\n        ihor.sort((a, b) => b.point - a.point);\r\n        if(parent.is_pos('right')) {\r\n          this.by_imposts(ihor, this.ihor, 'right');\r\n        }\r\n        else if(parent.is_pos('left')) {\r\n          this.by_imposts(ihor, this.ihor, 'left');\r\n        }\r\n      }\r\n      else {\r\n        ihor.length = 0;\r\n      }\r\n\r\n      if(ivert.length > 2) {\r\n        ivert.sort((a, b) => a.point - b.point);\r\n        if(parent.is_pos('bottom')) {\r\n          this.by_imposts(ivert, this.ivert, 'bottom');\r\n        }\r\n        else if(parent.is_pos('top')) {\r\n          this.by_imposts(ivert, this.ivert, 'top');\r\n        }\r\n      }\r\n      else {\r\n        ivert.length = 0;\r\n      }\r\n\r\n      this.by_contour(ihor, ivert, forse, by_side);\r\n\r\n    }\r\n\r\n    for (let dl of this.children) {\r\n      dl.redraw && dl.redraw();\r\n    }\r\n\r\n  }\r\n\r\n  push_by_point({ihor, ivert, eb, ee, elm}) {\r\n    if(eb && ihor.every((v) => v.point != eb.y.round())) {\r\n      ihor.push({\r\n        point: eb.y.round(),\r\n        elm: elm,\r\n        p: 'b'\r\n      });\r\n    }\r\n    if(ee && ihor.every((v) => v.point != ee.y.round())) {\r\n      ihor.push({\r\n        point: ee.y.round(),\r\n        elm: elm,\r\n        p: 'e'\r\n      });\r\n    }\r\n    if(eb && ivert.every((v) => v.point != eb.x.round())) {\r\n      ivert.push({\r\n        point: eb.x.round(),\r\n        elm: elm,\r\n        p: 'b'\r\n      });\r\n    }\r\n    if(ee && ivert.every((v) => v.point != ee.x.round())) {\r\n      ivert.push({\r\n        point: ee.x.round(),\r\n        elm: elm,\r\n        p: 'e'\r\n      });\r\n    }\r\n  }\r\n\r\n  draw_by_imposts() {\r\n    const {parent} = this;\r\n    this.clear();\r\n\r\n    let index = 0;\r\n    for (let elm of parent.profiles) {\r\n\r\n      const {inner, outer} = elm.joined_imposts();\r\n      const {generatrix, angle_hor} = elm;\r\n      generatrix.visible = false;\r\n      const imposts = inner.concat(outer);\r\n      if(!imposts.length) {\r\n        continue;\r\n      }\r\n      elm.mark_direction();\r\n      let invert = angle_hor > 135 && angle_hor < 315;\r\n      for(const impost of imposts) {\r\n        const {point, profile: {rays, nom}} = impost;\r\n        const pi = generatrix.intersect_point(rays.inner, point);\r\n        const po = generatrix.intersect_point(rays.outer, point);\r\n        const dx = generatrix.getOffsetOf(point);\r\n        const dxi = generatrix.getOffsetOf(pi);\r\n        const dxo = generatrix.getOffsetOf(po);\r\n        let dx1, dx2;\r\n        if(dx > dxi) {\r\n          dx1 = dxi + nom.sizefaltz;\r\n          dx2 = dxo - nom.sizefaltz;\r\n        }\r\n        else {\r\n          dx1 = dxo + nom.sizefaltz;\r\n          dx2 = dxi - nom.sizefaltz;\r\n        }\r\n\r\n\r\n        this.ihor[`i${++index}`] = new DimensionLineImpost({\r\n          elm1: elm,\r\n          elm2: elm,\r\n          p1: invert ? dx : 'b',\r\n          p2: invert ? 'b' : dx,\r\n          dx1,\r\n          dx2,\r\n          parent: this,\r\n          offset: invert ? -150 : 150,\r\n          outer: outer.includes(impost),\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n    this.by_contour([], [], true);\r\n\r\n    for (let dl of this.children) {\r\n      dl.redraw && dl.redraw();\r\n    }\r\n\r\n  }\r\n\r\n  draw_by_falsebinding() {\r\n    const {parent} = this;\r\n    this.clear();\r\n\r\n    const {ihor, ivert, by_side} = this.imposts();\r\n\r\n    for(const filling of parent.fillings) {\r\n      if(!filling.visible) {\r\n        continue;\r\n      }\r\n      const {path} = filling;\r\n      for(const elm of filling.imposts) {\r\n        let {b: eb, e: ee} = elm;\r\n        if(path.is_nearest(eb)) {\r\n          eb = null;\r\n        }\r\n        if(path.is_nearest(ee)) {\r\n          ee = null;\r\n        }\r\n        if(eb || ee) {\r\n          this.push_by_point({ihor, ivert, eb, ee, elm});\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    this.by_contour([], [], true, by_side);\r\n\r\n    if(ihor.length > 2) {\r\n      ihor.sort((a, b) => b.point - a.point);\r\n      this.by_base(ihor, this.ihor, 'left');\r\n    }\r\n    else {\r\n      ihor.length = 0;\r\n    }\r\n\r\n    if(ivert.length > 2) {\r\n      ivert.sort((a, b) => a.point - b.point);\r\n      this.by_base(ivert, this.ivert, 'top');\r\n    }\r\n    else {\r\n      ivert.length = 0;\r\n    }\r\n\r\n    for (let dl of this.children) {\r\n      dl.redraw && dl.redraw();\r\n    }\r\n  }\r\n\r\n  by_imposts(arr, collection, pos) {\r\n    const offset = (pos == 'right' || pos == 'bottom') ? -130 : 90;\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n      if(!collection[i]) {\r\n        let shift = Math.abs(arr[i].point - arr[i + 1].point) < 60 ? 70 : 0;\r\n        if(shift && collection[i - 1] && collection[i - 1].offset !== offset) {\r\n          shift += 70;\r\n        }\r\n        collection[i] = new DimensionLine({\r\n          pos: pos,\r\n          elm1: arr[i].elm instanceof GlassSegment ? arr[i].elm._sub : arr[i].elm,\r\n          p1: arr[i].p,\r\n          elm2: arr[i + 1].elm instanceof GlassSegment ? arr[i + 1].elm._sub : arr[i + 1].elm,\r\n          p2: arr[i + 1].p,\r\n          parent: this,\r\n          offset: offset - shift,\r\n          impost: true\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  by_base(arr, collection, pos) {\r\n    let offset = (pos == 'right' || pos == 'bottom') ? -130 : 90;\r\n    for (let i = 1; i < arr.length - 1; i++) {\r\n      if(!collection[i - 1]) {\r\n        collection[i - 1] = new DimensionLine({\r\n          pos: pos,\r\n          elm1: arr[0].elm instanceof GlassSegment ? arr[0].elm._sub : arr[0].elm,\r\n          p1: arr[0].p,\r\n          elm2: arr[i].elm instanceof GlassSegment ? arr[i].elm._sub : arr[i].elm,\r\n          p2: arr[i].p,\r\n          parent: this,\r\n          offset: offset,\r\n          impost: true\r\n        });\r\n        offset += 90;\r\n      }\r\n    }\r\n  }\r\n\r\n  by_contour(ihor, ivert, forse, by_side) {\r\n\r\n    const {project, parent} = this;\r\n    const {bounds} = parent;\r\n\r\n\r\n    if(project.contours.length > 1 || forse) {\r\n\r\n      if(parent.is_pos('left') && !parent.is_pos('right') && project.bounds.height != bounds.height) {\r\n        if(!this.ihor.has_size(bounds.height)) {\r\n          if(!this.left) {\r\n            this.left = new DimensionLine({\r\n              pos: 'left',\r\n              parent: this,\r\n              offset: ihor.length > 2 ? 220 : 90,\r\n              contour: true\r\n            });\r\n          }\r\n          else {\r\n            this.left.offset = ihor.length > 2 ? 220 : 90;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        if(this.left) {\r\n          this.left.remove();\r\n          this.left = null;\r\n        }\r\n      }\r\n\r\n      if(parent.is_pos('right') && (project.bounds.height != bounds.height || forse)) {\r\n        if(!this.ihor.has_size(bounds.height)) {\r\n          if(!this.right) {\r\n            this.right = new DimensionLine({\r\n              pos: 'right',\r\n              parent: this,\r\n              offset: ihor.length > 2 ? -260 : -130,\r\n              contour: true\r\n            });\r\n          }\r\n          else {\r\n            this.right.offset = ihor.length > 2 ? -260 : -130;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        if(this.right) {\r\n          this.right.remove();\r\n          this.right = null;\r\n        }\r\n      }\r\n\r\n      if(parent.is_pos('top') && !parent.is_pos('bottom') && project.bounds.width != bounds.width) {\r\n        if(!this.ivert.has_size(bounds.width)) {\r\n          if(!this.top) {\r\n            this.top = new DimensionLine({\r\n              pos: 'top',\r\n              parent: this,\r\n              offset: ivert.length > 2 ? 220 : 90,\r\n              contour: true\r\n            });\r\n          }\r\n          else {\r\n            this.top.offset = ivert.length > 2 ? 220 : 90;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        if(this.top) {\r\n          this.top.remove();\r\n          this.top = null;\r\n        }\r\n      }\r\n\r\n      if(parent.is_pos('bottom') && (project.bounds.width != bounds.width || forse)) {\r\n        if(!this.ivert.has_size(bounds.width)) {\r\n          if(!this.bottom) {\r\n            this.bottom = new DimensionLine({\r\n              pos: 'bottom',\r\n              parent: this,\r\n              offset: ivert.length > 2 ? -260 : -130,\r\n              contour: true\r\n            });\r\n          }\r\n          else {\r\n            this.bottom.offset = ivert.length > 2 ? -260 : -130;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        if(this.bottom) {\r\n          this.bottom.remove();\r\n          this.bottom = null;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if(forse === 'faltz') {\r\n      this.by_faltz(ihor, ivert, by_side);\r\n    }\r\n  }\r\n\r\n  by_faltz(ihor, ivert, by_side) {\r\n    if (!this.left) {\r\n      this.left = new DimensionLine({\r\n        pos: 'left',\r\n        parent: this,\r\n        offset: 90,\r\n        contour: true,\r\n        faltz: (by_side.top.nom.sizefurn + by_side.bottom.nom.sizefurn) / 2,\r\n      });\r\n    }\r\n    if(!this.top) {\r\n      this.top = new DimensionLine({\r\n        pos: 'top',\r\n        parent: this,\r\n        offset: 90,\r\n        contour: true,\r\n        faltz: (by_side.left.nom.sizefurn + by_side.right.nom.sizefurn) / 2,\r\n      });\r\n    }\r\n  }\r\n\r\n  imposts() {\r\n\r\n    const {parent} = this;\r\n    const {bounds} = parent;\r\n\r\n    const by_side = parent.profiles_by_side();\r\n    if(!Object.keys(by_side).length) {\r\n      return {ihor: [], ivert: [], by_side: {}};\r\n    }\r\n\r\n    const ihor = [\r\n      {\r\n        point: bounds.top.round(),\r\n        elm: by_side.top,\r\n        p: by_side.top.b.y < by_side.top.e.y ? 'b' : 'e'\r\n      },\r\n      {\r\n        point: bounds.bottom.round(),\r\n        elm: by_side.bottom,\r\n        p: by_side.bottom.b.y > by_side.bottom.e.y ? 'b' : 'e'\r\n      }];\r\n    const ivert = [\r\n      {\r\n        point: bounds.left.round(),\r\n        elm: by_side.left,\r\n        p: by_side.left.b.x < by_side.left.e.x ? 'b' : 'e'\r\n      },\r\n      {\r\n        point: bounds.right.round(),\r\n        elm: by_side.right,\r\n        p: by_side.right.b.x > by_side.right.e.x ? 'b' : 'e'\r\n      }];\r\n\r\n    return {ihor, ivert, by_side};\r\n  }\r\n\r\n  get owner_bounds() {\r\n    return this.parent.bounds;\r\n  }\r\n\r\n  get dimension_bounds() {\r\n    return this.parent.dimension_bounds;\r\n  }\r\n\r\n  get ihor() {\r\n    return this._ihor || (this._ihor = new DimensionGroup());\r\n  }\r\n\r\n  get ivert() {\r\n    return this._ivert || (this._ivert = new DimensionGroup());\r\n  }\r\n}\r\n\r\nEditorInvisible.DimensionDrawer = DimensionDrawer;\r\nEditorInvisible.DimensionLayer = DimensionLayer;\r\n\r\n\r\n\r\nclass DimensionLine extends paper.Group {\r\n\r\n  constructor(attr) {\r\n\r\n    super({parent: attr.parent});\r\n\r\n    const _attr = this._attr = {};\r\n\r\n    this._row = attr.row;\r\n\r\n    if(this._row && this._row.path_data){\r\n      attr._mixin(JSON.parse(this._row.path_data));\r\n      if(attr.elm1){\r\n        attr.elm1 = this.project.getItem({elm: attr.elm1});\r\n      }\r\n      if(attr.elm2){\r\n        attr.elm2 = this.project.getItem({elm: attr.elm2});\r\n      }\r\n    }\r\n    if(!attr.elm2) {\r\n      attr.elm2 = attr.elm1;\r\n    }\r\n    if(!attr.p1) {\r\n      attr.p1 = 'b';\r\n    }\r\n    if(!attr.p2) {\r\n      attr.p2 = 'e';\r\n    }\r\n    Object.assign(_attr, attr);\r\n\r\n    if(attr.contour){\r\n      _attr.contour = true;\r\n    }\r\n\r\n    if(!_attr.pos && (!_attr.elm1 || !_attr.elm2)){\r\n      this.remove();\r\n      return;\r\n    }\r\n\r\n    new paper.Path({parent: this, name: 'callout1', strokeColor: 'black', guide: true});\r\n    new paper.Path({parent: this, name: 'callout2', strokeColor: 'black', guide: true});\r\n    new paper.Path({parent: this, name: 'scale', strokeColor: 'black', guide: true});\r\n    new paper.PointText({\r\n      parent: this,\r\n      name: 'text',\r\n      justification: 'center',\r\n      fillColor: 'black',\r\n      fontFamily: consts.font_family,\r\n      fontSize: this._font_size()});\r\n\r\n    !this.project._attr._from_service && this.on({\r\n      mouseenter: this._mouseenter,\r\n      click: this._click\r\n    });\r\n\r\n  }\r\n\r\n  _font_size() {\r\n    const {width, height} = this.project.bounds;\r\n    const {cutoff, font_size} = consts;\r\n    const size = Math.max(width - cutoff, height - cutoff) / 60;\r\n    return font_size + (size > 0 ? size : 0);\r\n  }\r\n\r\n  _metadata(fld) {\r\n    return $p.dp.builder_size.metadata(fld);\r\n  }\r\n\r\n  get _manager() {\r\n    return $p.dp.builder_size;\r\n  }\r\n\r\n  _mouseenter() {\r\n    this.project._scope.canvas_cursor('cursor-arrow-ruler');\r\n  }\r\n\r\n  _click(event) {\r\n    event.stop();\r\n    if(typeof EditorInvisible.RulerWnd === 'function') {\r\n      this.wnd = new EditorInvisible.RulerWnd(null, this);\r\n      this.wnd.size = this.size;\r\n    }\r\n  }\r\n\r\n  _move_points(event, xy) {\r\n\r\n    let _bounds, delta;\r\n\r\n    const {_attr} = this;\r\n\r\n    if(_attr.elm1){\r\n\r\n      _bounds = {};\r\n\r\n      const p1 = (_attr.elm1._sub || _attr.elm1)[_attr.p1];\r\n      const p2 = (_attr.elm2._sub || _attr.elm2)[_attr.p2];\r\n\r\n      if(this.pos == \"top\" || this.pos == \"bottom\"){\r\n        const size = Math.abs(p1.x - p2.x);\r\n        if(event.name == \"right\"){\r\n          delta = new paper.Point(event.size - size, 0);\r\n          _bounds[event.name] = Math.max(p1.x, p2.x);\r\n        }\r\n        else{\r\n          delta = new paper.Point(size - event.size, 0);\r\n          _bounds[event.name] = Math.min(p1.x, p2.x);\r\n        }\r\n      }\r\n      else{\r\n        const size = Math.abs(p1.y - p2.y);\r\n        if(event.name == \"bottom\"){\r\n          delta = new paper.Point(0, event.size - size);\r\n          _bounds[event.name] = Math.max(p1.y, p2.y);\r\n        }\r\n        else{\r\n          delta = new paper.Point(0, size - event.size);\r\n          _bounds[event.name] = Math.min(p1.y, p2.y);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      _bounds = this.layer.bounds;\r\n      if(this.pos == \"top\" || this.pos == \"bottom\")\r\n        if(event.name == \"right\")\r\n          delta = new paper.Point(event.size - _bounds.width, 0);\r\n        else\r\n          delta = new paper.Point(_bounds.width - event.size, 0);\r\n      else{\r\n        if(event.name == \"bottom\")\r\n          delta = new paper.Point(0, event.size - _bounds.height);\r\n        else\r\n          delta = new paper.Point(0, _bounds.height - event.size);\r\n      }\r\n    }\r\n\r\n    if(delta.length){\r\n      const {project} = this;\r\n      project.deselect_all_points();\r\n      project.getItems({class: ProfileItem})\r\n        .forEach(({b, e, generatrix, width}) => {\r\n          width /= 2;\r\n          if(Math.abs(b[xy] - _bounds[event.name]) < width && Math.abs(e[xy] - _bounds[event.name]) < width){\r\n            generatrix.segments.forEach((segm) => segm.selected = true)\r\n          }\r\n          else if(Math.abs(b[xy] - _bounds[event.name]) < width){\r\n            generatrix.firstSegment.selected = true;\r\n          }\r\n          else if(Math.abs(e[xy] - _bounds[event.name]) < width){\r\n            generatrix.lastSegment.selected = true;\r\n          }\r\n      });\r\n      project.move_points(delta, false);\r\n      project.deselect_all_points(true);\r\n      project.register_update();\r\n    }\r\n\r\n  }\r\n\r\n  sizes_wnd(event) {\r\n\r\n    if(this.wnd && event.wnd == this.wnd.wnd){\r\n\r\n      switch(event.name) {\r\n        case 'close':\r\n          if(this.children.text){\r\n            this.children.text.selected = false;\r\n          }\r\n          this.wnd = null;\r\n          break;\r\n\r\n        case 'left':\r\n        case 'right':\r\n          if(this.pos == \"top\" || this.pos == \"bottom\"){\r\n            this._move_points(event, \"x\");\r\n          }\r\n          break;\r\n\r\n        case 'top':\r\n        case 'bottom':\r\n          if(this.pos == \"left\" || this.pos == \"right\"){\r\n            this._move_points(event, \"y\");\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  redraw() {\r\n\r\n    const {children, path, align, project: {builder_props}} = this;\r\n    if(!children.length){\r\n      return;\r\n    }\r\n    if(!path){\r\n      this.visible = false;\r\n      return;\r\n    }\r\n\r\n    const length = path.length;\r\n    if(length < 1){\r\n      this.visible = false;\r\n      return;\r\n    }\r\n    this.visible = true;\r\n\r\n    const b = path.firstSegment.point;\r\n    const e = path.lastSegment.point;\r\n    const normal = path.getNormalAt(0).multiply(this.offset + path.offset);\r\n    const nl = normal.length;\r\n    const ns = nl > 30 ? normal.normalize(nl - 20) : normal;\r\n    const bs = b.add(ns);\r\n    const es = e.add(ns);\r\n\r\n    if(children.callout1.segments.length){\r\n      children.callout1.firstSegment.point = b;\r\n      children.callout1.lastSegment.point = b.add(normal);\r\n    }\r\n    else{\r\n      children.callout1.addSegments([b, b.add(normal)]);\r\n    }\r\n\r\n    if(children.callout2.segments.length){\r\n      children.callout2.firstSegment.point = e;\r\n      children.callout2.lastSegment.point = e.add(normal);\r\n    }\r\n    else{\r\n      children.callout2.addSegments([e, e.add(normal)]);\r\n    }\r\n\r\n    if(children.scale.segments.length){\r\n      children.scale.firstSegment.point = bs;\r\n      children.scale.lastSegment.point = es;\r\n    }\r\n    else{\r\n      children.scale.addSegments([bs, es]);\r\n    }\r\n\r\n    children.callout1.visible = !this.hide_c1;\r\n    children.callout2.visible = !this.hide_c2;\r\n    children.scale.visible = !this.hide_line;\r\n\r\n    children.text.content = length.round(builder_props.rounding).toString();\r\n    children.text.rotation = e.subtract(b).angle;\r\n    children.text.justification = align.ref;\r\n\r\n    const font_size = this._font_size();\r\n    const {isNode} = $p.wsql.alasql.utils;\r\n    children.text.fontSize = font_size;\r\n    if(align == $p.enm.text_aligns.left) {\r\n      children.text.position = bs\r\n        .add(path.getTangentAt(0).multiply(font_size))\r\n        .add(path.getNormalAt(0).multiply(font_size / (isNode ? 1.9 : 2)));\r\n    }\r\n    else if(align == $p.enm.text_aligns.right) {\r\n      children.text.position = es\r\n        .add(path.getTangentAt(0).multiply(-font_size))\r\n        .add(path.getNormalAt(0).multiply(font_size / (isNode ? 1.9 : 2)));\r\n    }\r\n    else {\r\n      children.text.position = bs.add(es).divide(2).add(path.getNormalAt(0).multiply(font_size / (isNode ? 1.9 : 2)));\r\n      if(length < 20) {\r\n        children.text.position = children.text.position.add(path.getTangentAt(0).multiply(font_size / 3));\r\n      }\r\n    }\r\n  }\r\n\r\n  get path() {\r\n\r\n    const {parent, children, _attr, pos} = this;\r\n    if(!children.length){\r\n      return;\r\n    }\r\n    const {owner_bounds, dimension_bounds} = parent;\r\n    let offset = 0, b, e;\r\n\r\n    if(!pos){\r\n      b = typeof _attr.p1 == \"number\" ? _attr.elm1.corns(_attr.p1) : _attr.elm1[_attr.p1];\r\n      e = typeof _attr.p2 == \"number\" ? _attr.elm2.corns(_attr.p2) : _attr.elm2[_attr.p2];\r\n    }\r\n    else if(pos == \"top\"){\r\n      b = owner_bounds.topLeft;\r\n      e = owner_bounds.topRight;\r\n      offset = owner_bounds[pos] - dimension_bounds[pos];\r\n    }\r\n    else if(pos == \"left\"){\r\n      b = owner_bounds.bottomLeft;\r\n      e = owner_bounds.topLeft;\r\n      offset = owner_bounds[pos] - dimension_bounds[pos];\r\n    }\r\n    else if(pos == \"bottom\"){\r\n      b = owner_bounds.bottomLeft;\r\n      e = owner_bounds.bottomRight;\r\n      offset = owner_bounds[pos] - dimension_bounds[pos];\r\n    }\r\n    else if(pos == \"right\"){\r\n      b = owner_bounds.bottomRight;\r\n      e = owner_bounds.topRight;\r\n      offset = owner_bounds[pos] - dimension_bounds[pos];\r\n    }\r\n\r\n    if(!b || !e){\r\n      return;\r\n    }\r\n\r\n    const path = new paper.Path({ insert: false, segments: [b, e] });\r\n\r\n    if(_attr.elm1 && pos){\r\n      b = path.getNearestPoint(_attr.elm1[_attr.p1]);\r\n      e = path.getNearestPoint(_attr.elm2[_attr.p2]);\r\n      if(path.getOffsetOf(b) > path.getOffsetOf(e)){\r\n        [b, e] = [e, b]\r\n      }\r\n      path.firstSegment.point = b;\r\n      path.lastSegment.point = e;\r\n    }\r\n    if(_attr.faltz) {\r\n      b = path.getPointAt(_attr.faltz);\r\n      e = path.getPointAt(path.length - _attr.faltz);\r\n      path.firstSegment.point = b;\r\n      path.lastSegment.point = e;\r\n    }\r\n    path.offset = offset;\r\n\r\n    return path;\r\n  }\r\n\r\n  get eve() {\r\n    return this.project._scope.eve;\r\n  }\r\n\r\n  get size() {\r\n    return (this.children.text && parseFloat(this.children.text.content)) || 0;\r\n  }\r\n  set size(v) {\r\n    this.children.text.content = parseFloat(v).round(1);\r\n  }\r\n\r\n  get pos() {\r\n    return this._attr.pos || \"\";\r\n  }\r\n  set pos(v) {\r\n    this._attr.pos = v;\r\n    this.redraw();\r\n  }\r\n\r\n  get offset() {\r\n    return this._attr.offset || 90;\r\n  }\r\n  set offset(v) {\r\n    const offset = (parseInt(v) || 90).round();\r\n    if(this._attr.offset != offset){\r\n      this._attr.offset = offset;\r\n      this.project.register_change(true);\r\n    }\r\n  }\r\n\r\n  get align() {\r\n    return (!this._attr.align || this._attr.align == '_') ? $p.enm.text_aligns.center : this._attr.align;\r\n  }\r\n  set align(v) {\r\n    this._attr.align = v;\r\n    this.redraw();\r\n  }\r\n\r\n  get hide_c1() {\r\n    return !!this._attr.hide_c1;\r\n  }\r\n  set hide_c1(v) {\r\n    const {children, _attr} = this\r\n    _attr.hide_c1 = v;\r\n    v && children.callout1.setSelection(false);\r\n    this.redraw();\r\n  }\r\n\r\n  get hide_c2() {\r\n    return !!this._attr.hide_c2;\r\n  }\r\n  set hide_c2(v) {\r\n    const {children, _attr} = this\r\n    _attr.hide_c2 = v;\r\n    v && children.callout2.setSelection(false);\r\n    this.redraw();\r\n  }\r\n\r\n  get hide_line() {\r\n    return !!this._attr.hide_line;\r\n  }\r\n  set hide_line(v) {\r\n    const {children, _attr} = this\r\n    _attr.hide_line = v;\r\n    v && children.scale.setSelection(false);\r\n    this.redraw();\r\n  }\r\n\r\n  remove() {\r\n    if(this._row){\r\n      this._row._owner.del(this._row);\r\n      this._row = null;\r\n      this.project.register_change();\r\n    }\r\n    super.remove();\r\n  }\r\n}\r\n\r\n\r\nclass DimensionLineCustom extends DimensionLine {\r\n\r\n  constructor(attr) {\r\n\r\n    if(!attr.row){\r\n      attr.row = attr.parent.project.ox.coordinates.add();\r\n    }\r\n\r\n    if(!attr.row.cnstr){\r\n      attr.row.cnstr = attr.parent.layer.cnstr;\r\n    }\r\n\r\n    if(!attr.row.elm){\r\n      attr.row.elm = attr.parent.project.ox.coordinates.aggregate([], [\"elm\"], \"max\") + 1;\r\n    }\r\n\r\n    super(attr);\r\n\r\n  }\r\n\r\n  get elm_type() {\r\n    return $p.enm.elm_types.Размер;\r\n  }\r\n\r\n  save_coordinates() {\r\n    const {_row, _attr, elm_type, pos, offset, size, align} = this;\r\n\r\n    _row.len = size;\r\n\r\n    _row.elm_type = elm_type;\r\n\r\n    const path_data = {\r\n      pos: pos,\r\n      elm1: _attr.elm1.elm,\r\n      elm2: _attr.elm2.elm,\r\n      p1: _attr.p1,\r\n      p2: _attr.p2,\r\n      offset: offset\r\n    };\r\n    if(_attr.fix_angle) {\r\n      path_data.fix_angle = true;\r\n      path_data.angle = _attr.angle;\r\n    }\r\n    if(align == $p.enm.text_aligns.left || align == $p.enm.text_aligns.right) {\r\n      path_data.align = align.ref || align;\r\n    }\r\n    if(_attr.hide_c1) {\r\n      path_data.hide_c1 = true;\r\n    }\r\n    if(_attr.hide_c2) {\r\n      path_data.hide_c2 = true;\r\n    }\r\n    if(_attr.hide_line) {\r\n      path_data.hide_line = true;\r\n    }\r\n    if(_attr.by_curve) {\r\n      path_data.by_curve = true;\r\n    }\r\n    _row.path_data = JSON.stringify(path_data);\r\n  }\r\n\r\n  get is_ruler() {\r\n    const {ToolRuler} = EditorInvisible;\r\n    return typeof ToolRuler === 'function' && this.project._scope.tool instanceof ToolRuler;\r\n  }\r\n\r\n  setSelection(selection) {\r\n    super.setSelection(selection);\r\n    const {project, children, hide_c1, hide_c2, hide_line, is_ruler} = this\r\n    const {tool} = project._scope;\r\n    if(selection) {\r\n      hide_c1 && children.callout1.setSelection(false);\r\n      hide_c2 && children.callout2.setSelection(false);\r\n      hide_line && children.scale.setSelection(false);\r\n    }\r\n    is_ruler && tool.wnd.attach(this);\r\n  }\r\n\r\n  _click(event) {\r\n    event.stop();\r\n    if(this.is_ruler){\r\n      this.selected = true;\r\n    }\r\n  }\r\n\r\n  _mouseenter() {\r\n    const {project: {_scope}, is_ruler} = this;\r\n    if(is_ruler){\r\n      _scope.canvas_cursor('cursor-arrow-ruler');\r\n    }\r\n    else{\r\n      _scope.canvas_cursor('cursor-arrow-ruler-dis');\r\n    }\r\n  }\r\n\r\n  get angle() {\r\n    if(this.fix_angle) {\r\n      return this._attr.angle || 0;\r\n    }\r\n    const {firstSegment, lastSegment} = this.path;\r\n    return lastSegment.point.subtract(firstSegment.point).angle.round(1);\r\n  }\r\n  set angle(v) {\r\n    this._attr.angle = parseFloat(v).round(1);\r\n    this.project.register_change(true);\r\n  }\r\n\r\n  get fix_angle() {\r\n    return !!this._attr.fix_angle;\r\n  }\r\n  set fix_angle(v) {\r\n    this._attr.fix_angle = v;\r\n    this.project.register_change(true);\r\n  }\r\n\r\n  get path() {\r\n    if(this.fix_angle) {\r\n\r\n      const {children, _attr} = this;\r\n      if(!children.length){\r\n        return;\r\n      }\r\n      let b = typeof _attr.p1 == \"number\" ? _attr.elm1.corns(_attr.p1) : _attr.elm1[_attr.p1];\r\n      let e = typeof _attr.p2 == \"number\" ? _attr.elm2.corns(_attr.p2) : _attr.elm2[_attr.p2];\r\n      if(!b || !e){\r\n        return;\r\n      }\r\n\r\n      const d = e.subtract(b);\r\n      const t = d.clone();\r\n      t.angle = this.angle;\r\n      const path = new paper.Path({insert: false, segments: [b, b.add(t)]});\r\n      path.lastSegment.point.add(t.multiply(10000));\r\n      path.lastSegment.point = path.getNearestPoint(e);\r\n      path.offset = 0;\r\n      return path;\r\n    }\r\n    else {\r\n      return super.path;\r\n    }\r\n  }\r\n}\r\n\r\nEditorInvisible.DimensionLine = DimensionLine;\r\nEditorInvisible.DimensionLineCustom = DimensionLineCustom;\r\n\r\n\r\n\r\nclass DimensionLineImpost extends DimensionLineCustom {\r\n\r\n  constructor(attr) {\r\n\r\n    attr.row = {\r\n      cnstr: 1,\r\n      elm: 1,\r\n      _owner: {\r\n        del() {}\r\n      }\r\n    }\r\n\r\n    super(attr);\r\n\r\n    new paper.PointText({\r\n      parent: this,\r\n      name: 'dx1',\r\n      justification: 'center',\r\n      fontFamily: consts.font_family,\r\n      fillColor: 'black',\r\n      fontSize: consts.font_size});\r\n\r\n    new paper.PointText({\r\n      parent: this,\r\n      name: 'dx2',\r\n      justification: 'center',\r\n      fontFamily: consts.font_family,\r\n      fillColor: 'black',\r\n      fontSize: consts.font_size});\r\n\r\n  }\r\n\r\n  get path() {\r\n\r\n\r\n    const {children, _attr: {elm1: {generatrix}, p1, p2, dx1, dx2}} = this;\r\n    if(!children.length){\r\n      return;\r\n    }\r\n\r\n    let b = generatrix.getPointAt(typeof p1 == 'number' ? dx2 : dx1);\r\n    let e = generatrix.getPointAt(typeof p1 == 'number' ? dx1 : dx2);\r\n    if(!b || !e){\r\n      return;\r\n    }\r\n    const path = new paper.Path({insert: false, segments: [b, e]});\r\n    path.offset = 0;\r\n    return path;\r\n  }\r\n\r\n  redraw() {\r\n\r\n    const {children, path, offset, _attr: {elm1, p1, p2, dx1, dx2, outer}} = this;\r\n    if(!children.length){\r\n      return;\r\n    }\r\n    if(!path){\r\n      this.visible = false;\r\n      return;\r\n    }\r\n\r\n    this.visible = true;\r\n\r\n    const b = path.firstSegment.point;\r\n    const e = path.lastSegment.point;\r\n    const normal = path.getNormalAt(0).multiply((outer ? -1 : 1) * (offset + path.offset));\r\n    const tangent = path.getTangentAt(0);\r\n    const ns = normal.normalize(normal.length - 20);\r\n    const bs = b.add(ns);\r\n    const es = e.add(ns);\r\n    let offsetB = 0;\r\n    const elmB = elm1.cnn_point('b').profile;\r\n    if(elmB) {\r\n      const gen = elm1.generatrix.clone({insert: false}).elongation(200);\r\n      const po = elmB.rays.outer.intersect_point(gen, elm1.b);\r\n      const pi = elmB.rays.inner.intersect_point(gen, elm1.b);\r\n      if(po && pi) {\r\n        const ob = gen.getOffsetOf(elm1.b);\r\n        const oo = gen.getOffsetOf(po);\r\n        const oi = gen.getOffsetOf(pi);\r\n        offsetB = Math.min(oo - ob, oi - ob);\r\n      }\r\n    }\r\n\r\n    if(children.callout1.segments.length){\r\n      children.callout1.firstSegment.point = b;\r\n      children.callout1.lastSegment.point = b.add(normal);\r\n    }\r\n    else{\r\n      children.callout1.addSegments([b, b.add(normal)]);\r\n    }\r\n\r\n    if(children.callout2.segments.length){\r\n      children.callout2.firstSegment.point = e;\r\n      children.callout2.lastSegment.point = e.add(normal);\r\n    }\r\n    else{\r\n      children.callout2.addSegments([e, e.add(normal)]);\r\n    }\r\n\r\n    if(children.scale.segments.length){\r\n      children.scale.firstSegment.point = bs;\r\n      children.scale.lastSegment.point = es;\r\n    }\r\n    else{\r\n      children.scale.addSegments([bs, es]);\r\n    }\r\n    children.scale.elongation(200);\r\n\r\n    children.text.rotation = children.dx1.rotation = children.dx2.rotation = 0;\r\n    children.text.content = ((typeof p1 == 'number' ? p1 : p2) - offsetB).toFixed(0);\r\n    children.dx1.content = (dx1 - offsetB).toFixed(0);\r\n    children.dx2.content = (dx2 - offsetB).toFixed(0);\r\n    const bdx1 = children.dx1.bounds;\r\n    const bdx2 = children.dx2.bounds;\r\n    if(offset > 0) {\r\n      children.dx1.justification = 'left';\r\n      children.dx2.justification = 'right';\r\n      children.dx1.position = bs\r\n        .add(tangent.normalize(-Math.sign(offset) * ((consts.font_size + bdx1.width) / 2)))\r\n        .add(normal.normalize(-consts.font_size * 0.6));\r\n      children.dx2.position = es\r\n        .add(tangent.normalize(Math.sign(offset) * ((consts.font_size + bdx1.width) / 2)))\r\n        .add(normal.normalize(-consts.font_size * 0.6));\r\n    }\r\n    else {\r\n      children.dx1.justification = 'right';\r\n      children.dx2.justification = 'left';\r\n      children.dx1.position = es\r\n        .add(tangent.normalize(-Math.sign(offset) * ((consts.font_size + bdx1.width) / 2)))\r\n        .add(normal.normalize(-consts.font_size * 0.6));\r\n      children.dx2.position = bs\r\n        .add(tangent.normalize(Math.sign(offset) * ((consts.font_size + bdx1.width) / 2)))\r\n        .add(normal.normalize(-consts.font_size * 0.6));\r\n    }\r\n    children.text.rotation = children.dx1.rotation = children.dx2.rotation = e.subtract(b).angle;\r\n\r\n    children.text.position = bs.add(es).divide(2).add(normal.normalize(consts.font_size * 0.8));\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.DimensionLineImpost = DimensionLineImpost;\r\n\r\n\r\nclass DimensionRadius extends DimensionLineCustom {\r\n\r\n  get elm_type() {\r\n    return $p.enm.elm_types.Радиус;\r\n  }\r\n\r\n  get path() {\r\n\r\n    const {children, _attr} = this;\r\n    if(!children.length){\r\n      return;\r\n    }\r\n    const {path} = _attr.elm1;\r\n    if(!path){\r\n      return;\r\n    }\r\n\r\n    let b = path.getPointAt(_attr.p1);\r\n    const n = path.getNormalAt(_attr.p1).normalize(100);\r\n    const res = new paper.Path({insert: false, segments: [b, b.add(n)]});\r\n    res.offset = 0;\r\n    return res;\r\n  }\r\n\r\n  redraw() {\r\n    const {children, _attr, path, align} = this;\r\n    if(!path){\r\n      this.visible = false;\r\n      return;\r\n    }\r\n    this.visible = true;\r\n\r\n    const b = path.firstSegment.point;\r\n    const e = path.lastSegment.point;\r\n    const c = path.getPointAt(50);\r\n    const n = path.getNormalAt(0).multiply(10);\r\n    const c1 = c.add(n);\r\n    const c2 = c.subtract(n);\r\n\r\n    if(children.callout1.segments.length){\r\n      children.callout1.firstSegment.point = b;\r\n      children.callout1.lastSegment.point = c1;\r\n    }\r\n    else{\r\n      children.callout1.addSegments([b, c1]);\r\n    }\r\n\r\n    if(children.callout2.segments.length){\r\n      children.callout2.firstSegment.point = b;\r\n      children.callout2.lastSegment.point = c2;\r\n    }\r\n    else{\r\n      children.callout2.addSegments([b, c2]);\r\n    }\r\n\r\n    if(children.scale.segments.length){\r\n      children.scale.firstSegment.point = b;\r\n      children.scale.lastSegment.point = e;\r\n    }\r\n    else{\r\n      children.scale.addSegments([b, e]);\r\n    }\r\n\r\n    children.text.rotation = e.subtract(b).angle;\r\n    children.text.justification = 'left';\r\n    if(_attr.by_curve) {\r\n      const curv = Math.abs(_attr.elm1.path.getCurvatureAt(_attr.p1));\r\n      if(curv) {\r\n        children.text.content = `R${(1 / curv).round(0)}`;\r\n      }\r\n    }\r\n    else {\r\n      const {path, _attr: {_corns}} = _attr.elm1;\r\n      const sub = _attr.p1 > _attr.elm1.length ? path.get_subpath(_corns[3], _corns[4]) : path.get_subpath(_corns[1], _corns[2])\r\n      children.text.content = `R${sub.ravg().round(0)}`;\r\n    }\r\n\r\n    children.text.position = e.add(path.getTangentAt(0).multiply(consts.font_size * 1.4));\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.DimensionRadius = DimensionRadius;\r\n\r\n\r\nclass BuilderElement extends paper.Group {\r\n\r\n  constructor(attr) {\r\n\r\n    super(attr);\r\n\r\n    if(!attr.row){\r\n      attr.row = this.project.ox.coordinates.add();\r\n    }\r\n\r\n    this._row = attr.row;\r\n\r\n    this._attr = {};\r\n\r\n    if(!this._row.elm){\r\n      this._row.elm = this.project.ox.coordinates.aggregate([], ['elm'], 'max') + 1;\r\n    }\r\n\r\n    if(attr._nearest){\r\n      this._attr._nearest = attr._nearest;\r\n      this._attr.binded = true;\r\n      this._attr.simulated = true;\r\n      this._row.elm_type = $p.enm.elm_types.Створка;\r\n    }\r\n\r\n    if(attr.proto){\r\n\r\n      if(attr.proto.inset){\r\n        this.inset = attr.proto.inset;\r\n      }\r\n\r\n      if(attr.parent){\r\n        this.parent = attr.parent;\r\n      }\r\n      else if(attr.proto.parent){\r\n        this.parent = attr.proto.parent;\r\n      }\r\n\r\n      if(attr.proto instanceof Profile){\r\n        this.insertBelow(attr.proto);\r\n      }\r\n\r\n      this.clr = attr.proto.clr;\r\n\r\n    }\r\n    else if(attr.parent){\r\n      this.parent = attr.parent;\r\n    }\r\n\r\n    if(!this._row.cnstr && this.layer.cnstr){\r\n      this._row.cnstr = this.layer.cnstr;\r\n    }\r\n\r\n    if(this._row.elm_type.empty() && !this.inset.empty()){\r\n      this._row.elm_type = this.nom.elm_type;\r\n    }\r\n\r\n    this.project.register_change();\r\n\r\n    this.on('doubleclick', this.elm_dblclick);\r\n\r\n  }\r\n\r\n\r\n  get owner() {\r\n    return this._attr.owner;\r\n  }\r\n  set owner(v) {\r\n    this._attr.owner = v;\r\n  }\r\n\r\n\r\n  get generatrix() {\r\n    return this._attr.generatrix;\r\n  }\r\n  set generatrix(attr) {\r\n\r\n    const {_attr} = this;\r\n    const {generatrix} = _attr;\r\n    generatrix.removeSegments();\r\n\r\n    this.rays && this.rays.clear();\r\n\r\n    if(attr instanceof paper.Path){\r\n      generatrix.addSegments(attr.segments);\r\n    }\r\n    if(Array.isArray(attr)){\r\n      generatrix.addSegments(attr);\r\n    }\r\n    else if(attr.proto &&  attr.p1 &&  attr.p2){\r\n\r\n      let tpath = attr.proto;\r\n      if(tpath.getDirectedAngle(attr.ipoint) < 0){\r\n        tpath.reverse();\r\n      }\r\n\r\n      let d1 = tpath.getOffsetOf(attr.p1);\r\n      let d2 = tpath.getOffsetOf(attr.p2), d3;\r\n      if(d1 > d2){\r\n        d3 = d2;\r\n        d2 = d1;\r\n        d1 = d3;\r\n      }\r\n      if(d1 > 0){\r\n        tpath = tpath.split(d1);\r\n        d2 = tpath.getOffsetOf(attr.p2);\r\n      }\r\n      if(d2 < tpath.length){\r\n        tpath.split(d2);\r\n      }\r\n\r\n      generatrix.remove();\r\n      _attr.generatrix = tpath;\r\n      _attr.generatrix.parent = this;\r\n\r\n      if(this.layer.parent){\r\n        _attr.generatrix.guide = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  get path() {\r\n    return this._attr.path;\r\n  }\r\n  set path(attr) {\r\n    if(attr instanceof paper.Path){\r\n      const {_attr} = this;\r\n      _attr.path.removeSegments();\r\n      _attr.path.addSegments(attr.segments);\r\n      if(!_attr.path.closed){\r\n        _attr.path.closePath(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  get _metadata() {\r\n    const {fields, tabular_sections} = this.project.ox._metadata();\r\n    const t = this,\r\n      _xfields = tabular_sections.coordinates.fields, \r\n      inset = Object.assign({}, _xfields.inset),\r\n      arc_h = Object.assign({}, _xfields.r, {synonym: \"Высота дуги\"}),\r\n      info = Object.assign({}, fields.note, {synonym: \"Элемент\"}),\r\n      cnn1 = Object.assign({}, tabular_sections.cnn_elmnts.fields.cnn),\r\n      cnn2 = Object.assign({}, cnn1),\r\n      cnn3 = Object.assign({}, cnn1);\r\n\r\n    const {iface, utils, cat: {inserts, cnns, clrs}, enm, cch} = $p;\r\n\r\n    function cnn_choice_links(o, cnn_point){\r\n\r\n      const nom_cnns = cnns.nom_cnn(t, cnn_point.profile, cnn_point.cnn_types);\r\n\r\n      if(!iface || utils.is_data_obj(o)){\r\n        return nom_cnns.some((cnn) => o.ref == cnn);\r\n      }\r\n      else{\r\n        let refs = \"\";\r\n        nom_cnns.forEach((cnn) => {\r\n          if(refs){\r\n            refs += \", \";\r\n          }\r\n          refs += \"'\" + cnn.ref + \"'\";\r\n        });\r\n        return \"_t_.ref in (\" + refs + \")\";\r\n      }\r\n    }\r\n\r\n\r\n    const {_inserts_types_filling} = inserts;\r\n\r\n\r\n    inset.choice_links = [{\r\n      name: ['selection', 'ref'],\r\n      path: [(o, f) => {\r\n        const {sys} = this.project._dp;\r\n\r\n          let selection;\r\n\r\n          if(this instanceof Filling){\r\n            if(!iface || utils.is_data_obj(o)){\r\n              const {thickness, insert_type, insert_glass_type} = inserts.get(o);\r\n              return _inserts_types_filling.indexOf(insert_type) != -1 &&\r\n                thickness >= sys.tmin && thickness <= sys.tmax &&\r\n                (insert_glass_type.empty() || insert_glass_type == enm.inserts_glass_types.Заполнение);\r\n            }\r\n            else{\r\n              let refs = \"\";\r\n              inserts.by_thickness(sys.tmin, sys.tmax).forEach((o) => {\r\n                if(o.insert_glass_type.empty() || o.insert_glass_type == enm.inserts_glass_types.Заполнение){\r\n                  if(refs){\r\n                    refs += \", \";\r\n                  }\r\n                  refs += \"'\" + o.ref + \"'\";\r\n                }\r\n              });\r\n              return \"_t_.ref in (\" + refs + \")\";\r\n            }\r\n          }\r\n          else if(this instanceof Profile){\r\n            if(this.nearest()){\r\n              selection = {elm_type: {in: [enm.elm_types.Створка, enm.elm_types.Добор]}};\r\n            }\r\n            else{\r\n              selection = {elm_type: {in: [enm.elm_types.Рама, enm.elm_types.Импост, enm.elm_types.Добор]}};\r\n            }\r\n          }\r\n          else{\r\n            selection = {elm_type: this.nom.elm_type};\r\n          }\r\n\r\n          if(!iface || utils.is_data_obj(o)){\r\n            let ok = false;\r\n            selection.nom = inserts.get(o);\r\n            sys.elmnts.find_rows(selection, (row) => {\r\n              ok = true;\r\n              return false;\r\n            });\r\n            return ok;\r\n          }\r\n          else{\r\n            let refs = \"\";\r\n            sys.elmnts.find_rows(selection, (row) => {\r\n              if(refs){\r\n                refs += \", \";\r\n              }\r\n              refs += \"'\" + row.nom.ref + \"'\";\r\n            });\r\n            return \"_t_.ref in (\" + refs + \")\";\r\n          }\r\n        }]}\r\n    ];\r\n\r\n    cnn1.choice_links = [{\r\n      name: ['selection', 'ref'],\r\n      path: [(o, f) => cnn_choice_links(o, this.rays.b)]\r\n    }];\r\n\r\n    cnn2.choice_links = [{\r\n      name: ['selection', 'ref'],\r\n      path: [(o, f) => cnn_choice_links(o, this.rays.e)]\r\n    }];\r\n\r\n    cnn3.choice_links = [{\r\n      name: ['selection', 'ref'],\r\n      path: [(o) => {\r\n        const cnn_ii = this.selected_cnn_ii();\r\n        let nom_cnns = [utils.blank.guid];\r\n\r\n        if(cnn_ii){\r\n          if (cnn_ii.elm instanceof Filling) {\r\n            nom_cnns = cnns.nom_cnn(cnn_ii.elm, this, enm.cnn_types.acn.ii);\r\n          }\r\n          else if (cnn_ii.elm.elm_type == enm.elm_types.Створка && this.elm_type != enm.elm_types.Створка) {\r\n            nom_cnns = cnns.nom_cnn(cnn_ii.elm, this, enm.cnn_types.acn.ii);\r\n          }\r\n          else {\r\n            nom_cnns = cnns.nom_cnn(this, cnn_ii.elm, enm.cnn_types.acn.ii);\r\n          }\r\n        }\r\n\r\n        if (!iface || utils.is_data_obj(o)) {\r\n          return nom_cnns.some((cnn) => o.ref == cnn);\r\n        }\r\n        else {\r\n          let refs = \"\";\r\n          nom_cnns.forEach((cnn) => {\r\n            if (refs) {\r\n              refs += \", \";\r\n            }\r\n            refs += \"'\" + cnn.ref + \"'\";\r\n          });\r\n          return \"_t_.ref in (\" + refs + \")\";\r\n        }\r\n      }]\r\n    }];\r\n\r\n    clrs.selection_exclude_service(_xfields.clr, this);\r\n\r\n    const mfields = {\r\n      info: info,\r\n      inset: inset,\r\n      clr: _xfields.clr,\r\n      x1: _xfields.x1,\r\n      x2: _xfields.x2,\r\n      y1: _xfields.y1,\r\n      y2: _xfields.y2,\r\n      cnn1: cnn1,\r\n      cnn2: cnn2,\r\n      cnn3: cnn3,\r\n      arc_h: arc_h,\r\n      r: _xfields.r,\r\n      arc_ccw: _xfields.arc_ccw,\r\n      a1: Object.assign({}, _xfields.x1, {synonym: \"Угол1\"}),\r\n      a2: Object.assign({}, _xfields.x1, {synonym: \"Угол2\"}),\r\n      offset: Object.assign({}, _xfields.x1, {synonym: \"Смещение\"}),\r\n      region: _xfields.region,\r\n    };\r\n\r\n    return {\r\n      fields: new Proxy(mfields, {\r\n        get(target, prop) {\r\n          if(target[prop]) {\r\n            return target[prop];\r\n          }\r\n          const param = cch.properties.get(prop);\r\n          if(param) {\r\n            const mf = {\r\n              type: param.type,\r\n              synonym: param.name,\r\n            };\r\n            if(param.type.types.includes('cat.property_values')) {\r\n              mf.choice_params = [{\r\n                name: 'owner',\r\n                path: param.ref,\r\n              }];\r\n            }\r\n            return mf;\r\n          }\r\n        }\r\n      }),\r\n    };\r\n  }\r\n\r\n  get _manager() {\r\n    return this.project._dp._manager;\r\n  }\r\n\r\n\r\n  get nom() {\r\n    return this.inset.nom(this);\r\n  }\r\n\r\n  get elm() {\r\n    return (this._row && this._row._obj.elm) || 0;\r\n  }\r\n\r\n  get info() {\r\n    return \"№\" + this.elm;\r\n  }\r\n\r\n  get ref() {\r\n    const {nom} = this;\r\n    return nom && !nom.empty() ? nom.ref : this.inset.ref;\r\n  }\r\n\r\n  get width() {\r\n    return this.inset.width(this);\r\n  }\r\n\r\n  get thickness() {\r\n    return this.inset.thickness;\r\n  }\r\n\r\n  get sizeb() {\r\n    return this.inset.sizeb || 0;\r\n  }\r\n\r\n  get sizefurn() {\r\n    return this.nom.sizefurn || 20;\r\n  }\r\n\r\n\r\n  get cnn3(){\r\n    const cnn_ii = this.selected_cnn_ii();\r\n    return cnn_ii ? cnn_ii.row.cnn : $p.cat.cnns.get();\r\n  }\r\n  set cnn3(v) {\r\n    const cnn_ii = this.selected_cnn_ii();\r\n    if(cnn_ii && cnn_ii.row.cnn != v){\r\n      cnn_ii.row.cnn = v;\r\n      if(this._attr._nearest_cnn){\r\n        this._attr._nearest_cnn = cnn_ii.row.cnn;\r\n      }\r\n      if(this.rays){\r\n        this.rays.clear();\r\n      }\r\n      this.project.register_change();\r\n    }\r\n  }\r\n\r\n  get inset() {\r\n    return $p.cat.inserts.get(this._row && this._row._obj.inset);\r\n  }\r\n  set inset(v) {\r\n    this.set_inset(v);\r\n  }\r\n\r\n  get clr() {\r\n    return this._row.clr;\r\n  }\r\n  set clr(v) {\r\n    this.set_clr(v);\r\n  }\r\n\r\n\r\n  set_inset(v, ignore_select) {\r\n    const {_row, _attr, project} = this;\r\n    if(_row.inset != v){\r\n      _row.inset = v;\r\n      if(_attr && _attr._rays){\r\n        _attr._rays.clear(true);\r\n      }\r\n      project.register_change();\r\n    }\r\n  }\r\n\r\n\r\n  set_clr(v, ignore_select) {\r\n    if(this._row.clr != v) {\r\n      this._row.clr = v;\r\n      this.project.register_change();\r\n    }\r\n    if(this.path instanceof paper.Path){\r\n      this.path.fillColor = BuilderElement.clr_by_clr.call(this, this._row.clr, false);\r\n    }\r\n  }\r\n\r\n\r\n  t_parent(be) {\r\n    return this;\r\n  }\r\n\r\n\r\n  selected_cnn_ii() {\r\n    const {project, elm} = this;\r\n    const sel = project.getSelectedItems();\r\n    const {cnns} = project;\r\n    const items = [];\r\n    let res;\r\n\r\n    sel.forEach((item) => {\r\n      if(item.parent instanceof ProfileItem || item.parent instanceof Filling)\r\n        items.push(item.parent);\r\n      else if(item instanceof Filling)\r\n        items.push(item);\r\n    });\r\n\r\n    if(items.length > 1 &&\r\n      items.some((item) => item == this) &&\r\n      items.some((item) => {\r\n        if(item != this){\r\n          cnns.forEach((row) => {\r\n            if(!row.node1 && !row.node2 &&\r\n              ((row.elm1 == elm && row.elm2 == item.elm) || (row.elm1 == item.elm && row.elm2 == elm))){\r\n              res = {elm: item, row: row};\r\n              return false;\r\n            }\r\n          });\r\n          if(res){\r\n            return true;\r\n          }\r\n        }\r\n      })){\r\n      return res;\r\n    }\r\n  }\r\n\r\n\r\n  remove() {\r\n    this.detache_wnd && this.detache_wnd();\r\n\r\n    const {parent, project, observer, _row} = this;\r\n\r\n    parent && parent.on_remove_elm && parent.on_remove_elm(this);\r\n\r\n    if (observer){\r\n      project._scope.eve.off(consts.move_points, observer);\r\n      delete this.observer;\r\n    }\r\n\r\n    if(_row && _row._owner && project.ox === _row._owner._owner){\r\n      _row._owner.del(_row);\r\n    }\r\n\r\n    project.register_change();\r\n\r\n    super.remove();\r\n  }\r\n\r\n\r\n  err_spec_row(nom, text) {\r\n    if(!nom){\r\n      nom = $p.job_prm.nom.info_error;\r\n    }\r\n    const {ox} = this.project;\r\n    if(!ox.specification.find_rows({elm: this.elm, nom}).length){\r\n      $p.ProductsBuilding.new_spec_row({\r\n        elm: this,\r\n        row_base: {clr: $p.cat.clrs.get(), nom},\r\n        spec: ox.specification,\r\n        ox,\r\n      });\r\n    }\r\n    if(text){\r\n\r\n    }\r\n  }\r\n\r\n  elm_dblclick(event) {\r\n    this.project._scope.eve.emit('elm_dblclick', this, event);\r\n  }\r\n\r\n  static clr_by_clr(clr, view_out) {\r\n    let {clr_str, clr_in, clr_out} = clr;\r\n\r\n    if(!view_out){\r\n      if(!clr_in.empty() && clr_in.clr_str)\r\n        clr_str = clr_in.clr_str;\r\n    }else{\r\n      if(!clr_out.empty() && clr_out.clr_str)\r\n        clr_str = clr_out.clr_str;\r\n    }\r\n\r\n    if(!clr_str){\r\n      clr_str = this.default_clr_str ? this.default_clr_str : \"fff\";\r\n    }\r\n\r\n    if(clr_str){\r\n      clr = clr_str.split(\",\");\r\n      if(clr.length == 1){\r\n        if(clr_str[0] != \"#\")\r\n          clr_str = \"#\" + clr_str;\r\n        clr = new paper.Color(clr_str);\r\n        clr.alpha = 0.96;\r\n      }\r\n      else if(clr.length == 4){\r\n        clr = new paper.Color(clr[0], clr[1], clr[2], clr[3]);\r\n      }\r\n      else if(clr.length == 3){\r\n        if(this.path && this.path.bounds)\r\n          clr = new paper.Color({\r\n            stops: [clr[0], clr[1], clr[2]],\r\n            origin: this.path.bounds.bottomLeft,\r\n            destination: this.path.bounds.topRight\r\n          });\r\n        else\r\n          clr = new paper.Color(clr[0]);\r\n      }\r\n      return clr;\r\n    }\r\n  }\r\n}\r\n\r\nEditorInvisible.BuilderElement = BuilderElement;\r\n\r\n\r\n\r\nclass Filling extends AbstractFilling(BuilderElement) {\r\n\r\n  constructor(attr) {\r\n\r\n    const {path} = attr;\r\n    if(path){\r\n      delete attr.path;\r\n    }\r\n\r\n    super(attr);\r\n\r\n    if(path){\r\n      attr.path = path;\r\n    }\r\n\r\n    this.initialize(attr);\r\n\r\n  }\r\n\r\n  initialize(attr) {\r\n\r\n    const _row = attr.row;\r\n    const {_attr, project} = this;\r\n    const h = project.bounds.height + project.bounds.y;\r\n\r\n    if(_row.path_data){\r\n      _attr.path = new paper.Path(_row.path_data);\r\n    }\r\n\r\n    else if(attr.path){\r\n      _attr.path = new paper.Path();\r\n      this.path = attr.path;\r\n    }\r\n    else{\r\n      _attr.path = new paper.Path([\r\n        [_row.x1, h - _row.y1],\r\n        [_row.x1, h - _row.y2],\r\n        [_row.x2, h - _row.y2],\r\n        [_row.x2, h - _row.y1]\r\n      ]);\r\n    }\r\n\r\n    _attr.path.closePath(true);\r\n    _attr.path.reduce();\r\n    _attr.path.strokeWidth = 0;\r\n\r\n    if(_row.inset.empty()){\r\n      _row.inset = project.default_inset({elm_type: [$p.enm.elm_types.Стекло, $p.enm.elm_types.Заполнение]});\r\n    }\r\n\r\n    if(_row.clr.empty()){\r\n      project._dp.sys.elmnts.find_rows({nom: _row.inset}, (row) => {\r\n        _row.clr = row.clr;\r\n        return false;\r\n      });\r\n    }\r\n    if(_row.clr.empty()){\r\n      project._dp.sys.elmnts.find_rows({elm_type: {in: [$p.enm.elm_types.Стекло, $p.enm.elm_types.Заполнение]}}, (row) => {\r\n        _row.clr = row.clr;\r\n        return false;\r\n      });\r\n    }\r\n    this.clr = _row.clr;\r\n\r\n    if(_row.elm_type.empty()){\r\n      _row.elm_type = $p.enm.elm_types.Стекло;\r\n    }\r\n\r\n    _attr.path.visible = false;\r\n\r\n    this.addChild(_attr.path);\r\n\r\n    project.ox.coordinates.find_rows({\r\n      cnstr: this.layer.cnstr,\r\n      parent: this.elm,\r\n      elm_type: $p.enm.elm_types.Раскладка\r\n    }, (row) => new Onlay({row, parent: this}));\r\n\r\n    if (attr.proto) {\r\n      const tmp = [];\r\n      project.ox.glass_specification.find_rows({elm: attr.proto.elm}, (row) => {\r\n        tmp.push({\r\n          clr: row.clr,\r\n          elm: this.elm,\r\n          gno: row.gno,\r\n          inset: row.inset\r\n        });\r\n      });\r\n      tmp.forEach((row) => project.ox.glass_specification.add(row));\r\n    }\r\n\r\n  }\r\n\r\n\r\n  save_coordinates() {\r\n\r\n    const {_row, project, profiles, bounds, imposts, nom} = this;\r\n    const h = project.bounds.height + project.bounds.y;\r\n    const {cnns} = project;\r\n    const {length} = profiles;\r\n\r\n    project.ox.glasses.add({\r\n      elm: _row.elm,\r\n      nom: nom,\r\n      formula: this.formula(),\r\n      width: bounds.width,\r\n      height: bounds.height,\r\n      s: this.area,\r\n      is_rectangular: this.is_rectangular,\r\n      is_sandwich: nom.elm_type == $p.enm.elm_types.Заполнение,\r\n      thickness: this.thickness,\r\n    });\r\n\r\n    let curr, prev,\tnext\r\n\r\n    _row.x1 = (bounds.bottomLeft.x - project.bounds.x).round(3);\r\n    _row.y1 = (h - bounds.bottomLeft.y).round(3);\r\n    _row.x2 = (bounds.topRight.x - project.bounds.x).round(3);\r\n    _row.y2 = (h - bounds.topRight.y).round(3);\r\n    _row.path_data = this.path.pathData;\r\n\r\n    for(let i=0; i<length; i++ ){\r\n\r\n      curr = profiles[i];\r\n\r\n      if(!curr.profile || !curr.profile._row || !curr.cnn){\r\n        if($p.job_prm.debug) {\r\n          throw new ReferenceError('Не найдено ребро заполнения');\r\n        }\r\n        else {\r\n          return;\r\n        }\r\n      }\r\n\r\n      curr.aperture_path = curr.profile.generatrix.get_subpath(curr.b, curr.e)._reversed ?\r\n        curr.profile.rays.outer : curr.profile.rays.inner;\r\n    }\r\n\r\n    for(let i=0; i<length; i++ ){\r\n\r\n      prev = i === 0 ? profiles[length-1] : profiles[i-1];\r\n      curr = profiles[i];\r\n      next = i === length-1 ? profiles[0] : profiles[i+1];\r\n\r\n      const pb = curr.aperture_path.intersect_point(prev.aperture_path, curr.b, true);\r\n      const pe = curr.aperture_path.intersect_point(next.aperture_path, curr.e, true);\r\n\r\n      if(!pb || !pe) {\r\n        if($p.job_prm.debug) {\r\n          throw 'Filling:path';\r\n        }\r\n        else {\r\n          return;\r\n        }\r\n      }\r\n\r\n      cnns.add({\r\n        elm1: _row.elm,\r\n        elm2: curr.profile._row.elm,\r\n        node1: '',\r\n        node2: '',\r\n        cnn: curr.cnn.ref,\r\n        aperture_len: curr.aperture_path.get_subpath(pb, pe).length.round(1)\r\n      });\r\n\r\n    }\r\n\r\n    for(let i=0; i<length; i++ ){\r\n      delete profiles[i].aperture_path;\r\n    }\r\n\r\n    imposts.forEach((curr) => curr.save_coordinates());\r\n  }\r\n\r\n\r\n  create_leaf(furn, direction) {\r\n\r\n    const {project, _row} = this;\r\n\r\n    project.cnns.clear({elm1: this.elm});\r\n\r\n    const Constructor = furn === 'virtual' ? ContourVirtual : (furn === 'nested' ? ContourNested : Contour);\r\n    const contour = new Constructor({parent: this.parent});\r\n\r\n    contour.path = this.profiles;\r\n\r\n    if(furn === 'nested') {\r\n      this.remove();\r\n    }\r\n    else {\r\n      this.parent = contour;\r\n      _row.cnstr = contour.cnstr;\r\n    }\r\n\r\n    if(direction) {\r\n      contour.direction = direction;\r\n    }\r\n    if(typeof furn !== 'string') {\r\n      contour.furn = furn || project.default_furn;\r\n    }\r\n\r\n    project.notify(contour, 'rows', {constructions: true});\r\n\r\n    contour.activate();\r\n    return contour;\r\n  }\r\n\r\n\r\n  cnn_side() {\r\n    return $p.enm.cnn_sides.Изнутри;\r\n  }\r\n\r\n\r\n  nearest() {\r\n    return null;\r\n  }\r\n\r\n  select_node(v) {\r\n    let point, segm, delta = Infinity;\r\n    if(v === \"b\"){\r\n      point = this.bounds.bottomLeft;\r\n    }else{\r\n      point = this.bounds.topRight;\r\n    }\r\n    this._attr.path.segments.forEach((curr) => {\r\n      curr.selected = false;\r\n      if(point.getDistance(curr.point) < delta){\r\n        delta = point.getDistance(curr.point);\r\n        segm = curr;\r\n      }\r\n    });\r\n    if(segm){\r\n      segm.selected = true;\r\n      this.view.update();\r\n    }\r\n  }\r\n\r\n  setSelection(selection) {\r\n    super.setSelection(selection);\r\n    if(selection){\r\n      const {path} = this;\r\n      for(let elm of this.children){\r\n        if(elm != path){\r\n          elm.selected = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  redraw() {\r\n\r\n    this.sendToBack();\r\n\r\n    const {path, imposts, _attr, is_rectangular} = this;\r\n    const {elm_font_size, font_family} = consts;\r\n    const fontSize = elm_font_size * (2 / 3);\r\n    const maxTextWidth = 600;\r\n    path.visible = true;\r\n    imposts.forEach((elm) => elm.redraw());\r\n\r\n    this.purge_paths();\r\n\r\n    if(!_attr._text){\r\n      _attr._text = new paper.PointText({\r\n        parent: this,\r\n        fillColor: 'black',\r\n        fontFamily: font_family,\r\n        fontSize,\r\n        guide: true,\r\n        visible: true,\r\n      });\r\n    }\r\n\r\n    const {bounds} = path;\r\n    _attr._text.content = this.formula();\r\n\r\n    const textBounds = bounds.scale(0.88);\r\n    textBounds.width = textBounds.width > maxTextWidth ? maxTextWidth : textBounds.width;\r\n    textBounds.height = textBounds.height > maxTextWidth ? maxTextWidth : textBounds.height;\r\n\r\n    if(is_rectangular){\r\n      const turn = textBounds.width * 1.5 < textBounds.height;\r\n      if(turn){\r\n        textBounds.width = elm_font_size;\r\n        _attr._text.rotation = 270;\r\n      }\r\n      else{\r\n        textBounds.height = elm_font_size;\r\n        _attr._text.rotation = 0;\r\n      }\r\n      _attr._text.fitBounds(textBounds);\r\n      _attr._text.point = turn\r\n        ? bounds.bottomRight.add([-fontSize, -fontSize * 0.6])\r\n        : bounds.bottomLeft.add([fontSize * 0.6, -fontSize]);\r\n    }\r\n    else{\r\n      textBounds.height = elm_font_size;\r\n      _attr._text.rotation = 0;\r\n      _attr._text.fitBounds(textBounds);\r\n      const maxCurve = path.curves.reduce((curv, item) => item.length > curv.length ? item : curv, path.curves[0]);\r\n      const {angle, angleInRadians} = maxCurve.line.vector;\r\n      const {PI} = Math;\r\n      _attr._text.rotation = angle;\r\n      const biasPoint = new paper.Point(Math.cos(angleInRadians + PI / 4), Math.sin(angleInRadians + PI / 4)).multiply(3 * elm_font_size);\r\n      _attr._text.point = maxCurve.point1.add(biasPoint);\r\n      if(Math.abs(angle) >= 85 && Math.abs(angle) <= 185){\r\n        _attr._text.point = _attr._text.bounds.rightCenter;\r\n        _attr._text.rotation += 180;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  draw_fragment() {\r\n    const {l_dimensions, layer, path} = this;\r\n    this.visible = true;\r\n    path.set({\r\n      strokeColor: 'black',\r\n      strokeWidth: 1,\r\n      strokeScaling: false,\r\n      opacity: 0.6,\r\n    });\r\n    l_dimensions.redraw(true);\r\n    layer.draw_visualization();\r\n    const {l_visualization: lv} = layer;\r\n    lv._by_insets && lv._by_insets.removeChildren();\r\n    lv._cnn && lv._cnn.removeChildren();\r\n    lv._opening && lv._opening.removeChildren();\r\n    lv.visible = true;\r\n    layer.zoom_fit();\r\n  }\r\n\r\n\r\n  set_inset(v, ignore_select) {\r\n\r\n    const inset = $p.cat.inserts.get(v);\r\n\r\n    if(!ignore_select){\r\n      const {project, elm} = this;\r\n      const {glass_specification} = project.ox;\r\n\r\n      inset.clr_group.default_clr(this);\r\n\r\n      glass_specification.clear({elm});\r\n\r\n      project.selected_glasses().forEach((selm) => {\r\n        if(selm !== this){\r\n          selm.set_inset(inset, true);\r\n          glass_specification.clear({elm: selm.elm});\r\n          selm.clr = this.clr;\r\n        }\r\n      });\r\n    }\r\n\r\n    super.set_inset(inset);\r\n  }\r\n\r\n\r\n  set_clr(v, ignore_select) {\r\n    if(!ignore_select && this.project.selectedItems.length > 1){\r\n      this.project.selected_glasses().forEach((elm) => {\r\n        if(elm !== this){\r\n          elm.set_clr(v, true);\r\n        }\r\n      });\r\n    }\r\n    super.set_clr(v);\r\n  }\r\n\r\n\r\n  purge_paths() {\r\n    const paths = this.children.filter((child) => child instanceof paper.Path);\r\n    const {path} = this;\r\n    paths.forEach((p) => p !== path && p.remove());\r\n  }\r\n\r\n  fill_error() {\r\n    const {path} = this;\r\n    path.fillColor = new paper.Color({\r\n      stops: [\"#fee\", \"#fcc\", \"#fdd\"],\r\n      origin: path.bounds.bottomLeft,\r\n      destination: path.bounds.topRight\r\n    });\r\n  }\r\n\r\n\r\n  formula(by_art) {\r\n    let res;\r\n    this.project.ox.glass_specification.find_rows({elm: this.elm, inset: {not: $p.utils.blank.guid}}, ({inset}) => {\r\n      let {name, article} = inset;\r\n      const aname = name.split(' ');\r\n      if(by_art && article){\r\n        name = article;\r\n      }\r\n      else if(aname.length){\r\n        name = aname[0];\r\n      }\r\n      if(!res){\r\n        res = name;\r\n      }\r\n      else{\r\n        res += (by_art ? '*' : 'x') + name;\r\n      }\r\n    });\r\n    return res || (by_art ? this.inset.article || this.inset.name : this.inset.name);\r\n  }\r\n\r\n\r\n  deselect_onlay_points() {\r\n    for(const {generatrix} of this.imposts) {\r\n      generatrix.segments.forEach((segm) => {\r\n        if(segm.selected) {\r\n          segm.selected = false;\r\n        }\r\n      });\r\n      if(generatrix.selected) {\r\n        generatrix.selected = false;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  get imposts() {\r\n    return this.getItems({class: Onlay});\r\n  }\r\n\r\n  get profiles() {\r\n    return this._attr._profiles || [];\r\n  }\r\n\r\n\r\n  remove_onlays() {\r\n    for(let onlay of this.imposts){\r\n      onlay.remove();\r\n    }\r\n  }\r\n\r\n\r\n  remove() {\r\n    this.remove_onlays();\r\n\r\n    super.remove();\r\n  }\r\n\r\n\r\n\r\n  get area() {\r\n    return (this.bounds.area / 1e6).round(5);\r\n  }\r\n\r\n\r\n  get form_area() {\r\n    return (this.path.area/1e6).round(5);\r\n  }\r\n\r\n\r\n  interiorPoint() {\r\n    return this.path.interiorPoint;\r\n  }\r\n\r\n\r\n  get is_rectangular() {\r\n    const {profiles, path} = this;\r\n    return profiles.length === 4 && !path.hasHandles() && !profiles.some(({profile}) => !(Math.abs(profile.angle_hor % 90) < 0.2));\r\n  }\r\n\r\n  get generatrix() {\r\n    return this.path;\r\n  }\r\n\r\n\r\n  get path() {\r\n    return this._attr.path;\r\n  }\r\n  set path(attr) {\r\n    let {_attr, path} = this;\r\n\r\n    if(path){\r\n      path.removeSegments();\r\n    }\r\n    else{\r\n      path = _attr.path = new paper.Path({parent: this});\r\n    }\r\n\r\n    if(Array.isArray(_attr._profiles)){\r\n      _attr._profiles.length = 0;\r\n    }\r\n    else{\r\n      _attr._profiles = [];\r\n    }\r\n\r\n    if(attr instanceof paper.Path){\r\n      path.addSegments(attr.segments);\r\n    }\r\n    else if(Array.isArray(attr)){\r\n      let {length} = attr;\r\n      let prev, curr, next, sub_path;\r\n      for(let i=0; i<length; i++ ){\r\n        curr = attr[i];\r\n        next = i === length-1 ? attr[0] : attr[i+1];\r\n        sub_path = curr.profile.generatrix.get_subpath(curr.b, curr.e);\r\n\r\n        curr.cnn = $p.cat.cnns.elm_cnn(this, curr.profile, $p.enm.cnn_types.acn.ii,\r\n          curr.cnn || this.project.elm_cnn(this, curr.profile), false, curr.outer);\r\n\r\n        curr.sub_path = sub_path.equidistant(\r\n          (sub_path._reversed ? -curr.profile.d1 : curr.profile.d2) + (curr.cnn ? curr.cnn.size(this) : 20), consts.sticking);\r\n\r\n      }\r\n      for (let i = 0; i < length; i++) {\r\n        prev = i === 0 ? attr[length-1] : attr[i-1];\r\n        curr = attr[i];\r\n        next = i === length-1 ? attr[0] : attr[i+1];\r\n        if(!curr.pb)\r\n          curr.pb = prev.pe = curr.sub_path.intersect_point(prev.sub_path, curr.b, true);\r\n        if(!curr.pe)\r\n          curr.pe = next.pb = curr.sub_path.intersect_point(next.sub_path, curr.e, true);\r\n        if(!curr.pb || !curr.pe){\r\n          if($p.job_prm.debug)\r\n            throw \"Filling:path\";\r\n          else\r\n            continue;\r\n        }\r\n        curr.sub_path = curr.sub_path.get_subpath(curr.pb, curr.pe);\r\n      }\r\n\r\n      const remove = [];\r\n      for (let i = 0; i < length; i++) {\r\n        prev = i === 0 ? attr[length-1] : attr[i-1];\r\n        next = i === length-1 ? attr[0] : attr[i+1];\r\n        const crossings =  prev.sub_path.getCrossings(next.sub_path);\r\n        if(crossings.length){\r\n          if((prev.e.getDistance(crossings[0].point) < prev.profile.width * 2) ||  (next.b.getDistance(crossings[0].point) < next.profile.width * 2)) {\r\n            remove.push(attr[i]);\r\n            prev.sub_path.splitAt(crossings[0]);\r\n            const nloc = next.sub_path.getLocationOf(crossings[0].point);\r\n            next.sub_path = next.sub_path.splitAt(nloc);\r\n          }\r\n        }\r\n      }\r\n      for(const segm of remove) {\r\n        attr.splice(attr.indexOf(segm), 1);\r\n        length--;\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        curr = attr[i];\r\n        path.addSegments(curr.sub_path.segments);\r\n        [\"anext\",\"pb\",\"pe\"].forEach((prop) => { delete curr[prop] });\r\n        _attr._profiles.push(curr);\r\n      }\r\n    }\r\n\r\n    if(path.segments.length && !path.closed){\r\n      path.closePath(true);\r\n    }\r\n\r\n    const intersections = path.self_intersections();\r\n    if(intersections.length) {\r\n\r\n      const {curves, segments} = path;\r\n      const purge = new Set();\r\n      for(const {point} of intersections) {\r\n        for(const rib of attr) {\r\n          rib._sub.b.is_nearest(point, true) && rib._sub.e.is_nearest(point, true) && purge.add(rib);\r\n        }\r\n      }\r\n      if(purge.size) {\r\n        purge.forEach((rib) => {\r\n          const ind = attr.indexOf(rib);\r\n          attr.splice(ind, 1);\r\n        });\r\n\r\n        return this.path = attr;\r\n      }\r\n    }\r\n    path.reduce();\r\n\r\n  }\r\n\r\n  get nodes() {\r\n    let res = this.profiles.map((curr) => curr.b);\r\n    if(!res.length){\r\n      const {path, parent} = this;\r\n      if(path){\r\n        res = parent.glass_nodes(path);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n\r\n  get outer_profiles() {\r\n    return this.profiles;\r\n  }\r\n\r\n\r\n  get perimeter() {\r\n    const res = [];\r\n    this.profiles.forEach((curr) => {\r\n      const tmp = {\r\n        len: curr.sub_path.length,\r\n        angle: curr.e.subtract(curr.b).angle,\r\n        profile: curr.profile\r\n      }\r\n      res.push(tmp);\r\n      if(tmp.angle < 0){\r\n        tmp.angle += 360;\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  get bounds() {\r\n    const {path} = this;\r\n    return path ? path.bounds : new paper.Rectangle();\r\n  }\r\n\r\n\r\n  perimeter_inner(size = 0) {\r\n    const {center} = this.bounds;\r\n    const res = this.outer_profiles.map((curr) => {\r\n      const profile = curr.profile || curr.elm;\r\n      const {inner, outer} = profile.rays;\r\n      const sub_path = inner.getNearestPoint(center).getDistance(center, true) < outer.getNearestPoint(center).getDistance(center, true) ?\r\n        inner.get_subpath(inner.getNearestPoint(curr.b), inner.getNearestPoint(curr.e)) :\r\n        outer.get_subpath(outer.getNearestPoint(curr.b), outer.getNearestPoint(curr.e));\r\n      let angle = curr.e.subtract(curr.b).angle.round(1);\r\n      if(angle < 0) angle += 360;\r\n      return {\r\n        profile,\r\n        sub_path,\r\n        angle,\r\n        b: curr.b,\r\n        e: curr.e,\r\n      };\r\n    });\r\n    const ubound = res.length - 1;\r\n    return res.map((curr, index) => {\r\n      let sub_path = curr.sub_path.equidistant(size);\r\n      const prev = !index ? res[ubound] : res[index - 1];\r\n      const next = (index == ubound) ? res[0] : res[index + 1];\r\n      const b = sub_path.intersect_point(prev.sub_path.equidistant(size), curr.b, true);\r\n      const e = sub_path.intersect_point(next.sub_path.equidistant(size), curr.e, true);\r\n      if (b && e) {\r\n        sub_path = sub_path.get_subpath(b, e);\r\n      }\r\n      return {\r\n        profile: curr.profile,\r\n        angle: curr.angle,\r\n        len: sub_path.length,\r\n        sub_path,\r\n      };\r\n    });\r\n  }\r\n\r\n\r\n  bounds_light(size = 0) {\r\n    const path = new paper.Path({insert: false});\r\n    for (const {sub_path} of this.perimeter_inner(size)) {\r\n      path.addSegments(sub_path.segments);\r\n    }\r\n    if (path.segments.length && !path.closed) {\r\n      path.closePath(true);\r\n    }\r\n    path.reduce();\r\n    return path.bounds;\r\n  }\r\n\r\n\r\n  get x1() {\r\n    return (this.bounds.left - this.project.bounds.x).round(1);\r\n  }\r\n\r\n\r\n  get x2() {\r\n    return (this.bounds.right - this.project.bounds.x).round(1);\r\n  }\r\n\r\n\r\n  get y1() {\r\n    return (this.project.bounds.height + this.project.bounds.y - this.bounds.bottom).round(1);\r\n  }\r\n\r\n\r\n  get y2() {\r\n    return (this.project.bounds.height + this.project.bounds.y - this.bounds.top).round(1);\r\n  }\r\n\r\n\r\n  get info() {\r\n    const {elm, bounds, thickness} = this;\r\n    return \"№\" + elm + \" w:\" + bounds.width.toFixed(0) + \" h:\" + bounds.height.toFixed(0) + \" z:\" + thickness.toFixed(0);\r\n  }\r\n\r\n\r\n  get oxml() {\r\n    const oxml = {\r\n      \" \": [\r\n        {id: \"info\", path: \"o.info\", type: \"ro\"},\r\n        \"inset\",\r\n        \"clr\"\r\n      ],\r\n      \"Начало\": [\r\n        {id: \"x1\", path: \"o.x1\", synonym: \"X1\", type: \"ro\"},\r\n        {id: \"y1\", path: \"o.y1\", synonym: \"Y1\", type: \"ro\"}\r\n      ],\r\n      \"Конец\": [\r\n        {id: \"x2\", path: \"o.x2\", synonym: \"X2\", type: \"ro\"},\r\n        {id: \"y2\", path: \"o.y2\", synonym: \"Y2\", type: \"ro\"}\r\n      ]\r\n    };\r\n    if(this.selected_cnn_ii()){\r\n      oxml[\"Примыкание\"] = [\"cnn3\"];\r\n    }\r\n    return oxml;\r\n  }\r\n\r\n  get default_clr_str() {\r\n    return \"#def,#d0ddff,#eff\";\r\n  }\r\n\r\n  get ref() {\r\n    return this.thickness.toFixed();\r\n  }\r\n\r\n  get inset() {\r\n    const {_attr, _row} = this;\r\n    if(!_attr._ins_proxy || _attr._ins_proxy.ref != _row.inset){\r\n      _attr._ins_proxy = new Proxy(_row.inset, {\r\n        get: (target, prop) => {\r\n          switch (prop){\r\n            case 'presentation':\r\n              return this.formula();\r\n\r\n            case 'thickness':\r\n              let res = 0;\r\n              this.project.ox.glass_specification.find_rows({elm: this.elm}, (row) => {\r\n                res += row.inset.thickness;\r\n              });\r\n              return res || _row.inset.thickness;\r\n\r\n            default:\r\n              return target[prop];\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return _attr._ins_proxy;\r\n  }\r\n  set inset(v) {\r\n    this.set_inset(v);\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.Filling = Filling;\r\n\r\n\r\nclass FreeText extends paper.PointText {\r\n\r\n  constructor(attr) {\r\n\r\n    if(!attr.fontSize){\r\n      attr.fontSize = consts.font_size;\r\n      if(attr.parent) {\r\n        const {width, height} = attr.parent.project.bounds;\r\n        const {cutoff, font_size} = consts;\r\n        const size = Math.max(width - cutoff, height - cutoff) / 60;\r\n        attr.fontSize += (size > 0 ? size : 0).round();\r\n      }\r\n    }\r\n    attr.fontFamily = consts.font_family;\r\n\r\n    super(attr);\r\n\r\n    if(attr.row){\r\n      this._row = attr.row;\r\n    }\r\n    else{\r\n      this._row = attr.row = this.project.ox.coordinates.add();\r\n    }\r\n\r\n    const {_row} = this;\r\n\r\n    if(!_row.cnstr){\r\n      _row.cnstr = attr.parent.layer.cnstr;\r\n    }\r\n\r\n    if(!_row.elm){\r\n      _row.elm = this.project.ox.coordinates.aggregate([], [\"elm\"], \"max\") + 1;\r\n    }\r\n\r\n    if(attr.point){\r\n      if(attr.point instanceof paper.Point)\r\n        this.point = attr.point;\r\n      else\r\n        this.point = new paper.Point(attr.point);\r\n    }\r\n    else{\r\n\r\n      this.clr = _row.clr;\r\n      this.angle = _row.angle_hor;\r\n\r\n      if(_row.path_data){\r\n        var path_data = JSON.parse(_row.path_data);\r\n        this.x = _row.x1 + path_data.bounds_x || 0;\r\n        this.y = _row.y1 - path_data.bounds_y || 0;\r\n        this._mixin(path_data, null, [\"bounds_x\",\"bounds_y\"]);\r\n      }else{\r\n        this.x = _row.x1;\r\n        this.y = _row.y1;\r\n      }\r\n    }\r\n\r\n    this.bringToFront();\r\n\r\n  }\r\n\r\n  remove() {\r\n    this._row._owner.del(this._row);\r\n    this._row = null;\r\n    paper.PointText.prototype.remove.call(this);\r\n  }\r\n\r\n  save_coordinates() {\r\n    const {_row} = this;\r\n\r\n    _row.x1 = this.x;\r\n    _row.y1 = this.y;\r\n    _row.angle_hor = this.angle;\r\n\r\n    _row.elm_type = this.elm_type;\r\n\r\n    _row.path_data = JSON.stringify({\r\n      text: this.text,\r\n      font_family: this.font_family,\r\n      font_size: this.font_size,\r\n      bold: this.bold,\r\n      align: this.align.ref,\r\n      bounds_x: this.project.bounds.x,\r\n      bounds_y: this.project.bounds.y\r\n    });\r\n  }\r\n\r\n  move_points(point) {\r\n    this.point = point;\r\n    this.project.notify(this, 'update', {x: true, y: true});\r\n  }\r\n\r\n  get elm_type() {\r\n    return $p.enm.elm_types.Текст;\r\n  }\r\n\r\n  _metadata(fld) {\r\n    return $p.dp.builder_text.metadata(fld);\r\n  }\r\n\r\n  get _manager() {\r\n    return $p.dp.builder_text;\r\n  }\r\n\r\n  get clr() {\r\n    return this._row ? this._row.clr : $p.cat.clrs.get();\r\n  }\r\n  set clr(v) {\r\n    this._row.clr = v;\r\n    if(this._row.clr.clr_str.length == 6)\r\n      this.fillColor = \"#\" + this._row.clr.clr_str;\r\n    this.project.register_update();\r\n  }\r\n\r\n  get font_family() {\r\n    return this.fontFamily || \"\";\r\n  }\r\n  set font_family(v) {\r\n    this.fontFamily = v;\r\n    this.project.register_update();\r\n  }\r\n\r\n  get font_size() {\r\n    return this.fontSize || consts.font_size;\r\n  }\r\n  set font_size(v) {\r\n    this.fontSize = v;\r\n    this.project.register_update();\r\n  }\r\n\r\n  get bold() {\r\n    return this.fontWeight != 'normal';\r\n  }\r\n  set bold(v) {\r\n    this.fontWeight = v ? 'bold' : 'normal';\r\n  }\r\n\r\n  get x() {\r\n    return (this.point.x - this.project.bounds.x).round(1);\r\n  }\r\n  set x(v) {\r\n    this.point.x = parseFloat(v) + this.project.bounds.x;\r\n    this.project.register_update();\r\n  }\r\n\r\n  get y() {\r\n    const {bounds} = this.project;\r\n    return (bounds.height + bounds.y - this.point.y).round(1);\r\n  }\r\n  set y(v) {\r\n    const {bounds} = this.project;\r\n    this.point.y = bounds.height + bounds.y - parseFloat(v);\r\n  }\r\n\r\n  get text() {\r\n    return this.content;\r\n  }\r\n  set text(v) {\r\n    const {project} = this;\r\n    if(v){\r\n      this.content = v;\r\n      project.register_update();\r\n    }\r\n    else{\r\n      project.notify(this, 'unload');\r\n      setTimeout(this.remove.bind(this), 50);\r\n    }\r\n  }\r\n\r\n  get angle() {\r\n    return Math.round(this.rotation);\r\n  }\r\n  set angle(v) {\r\n    this.rotation = v;\r\n    this.project.register_update();\r\n  }\r\n\r\n  get align() {\r\n    return $p.enm.text_aligns.get(this.justification);\r\n  }\r\n  set align(v) {\r\n    this.justification = $p.utils.is_data_obj(v) ? v.ref : v;\r\n    this.project.register_update();\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.FreeText = FreeText;\r\n\r\n\r\nclass GeneratrixElement extends BuilderElement {\r\n\r\n  constructor(attr = {}) {\r\n    const {generatrix} = attr;\r\n    if (generatrix) {\r\n      delete attr.generatrix;\r\n    }\r\n    super(attr);\r\n    if (generatrix) {\r\n      attr.generatrix = generatrix;\r\n    }\r\n    this.initialize(attr);\r\n  }\r\n\r\n  get b() {\r\n    const {generatrix} = this._attr;\r\n    return generatrix && generatrix.firstSegment.point;\r\n  }\r\n  set b(v) {\r\n    const {_rays, generatrix} = this._attr;\r\n    _rays.clear();\r\n    if(generatrix) generatrix.firstSegment.point = v;\r\n  }\r\n\r\n  get e() {\r\n    const {generatrix} = this._attr;\r\n    return generatrix && generatrix.lastSegment.point;\r\n  }\r\n  set e(v) {\r\n    const {_rays, generatrix} = this._attr;\r\n    _rays.clear();\r\n    if(generatrix) generatrix.lastSegment.point = v;\r\n  }\r\n\r\n  get x1() {\r\n    const {bounds} = this.project;\r\n    return bounds ? (this.b.x - bounds.x).round(1) : 0;\r\n  }\r\n  set x1(v) {\r\n    const {bounds} = this.project;\r\n    if(bounds && (v = parseFloat(v) + bounds.x - this.b.x)){\r\n      this.select_node(\"b\");\r\n      this.move_points(new paper.Point(v, 0));\r\n    }\r\n  }\r\n\r\n  get y1() {\r\n    const {bounds} = this.project;\r\n    return bounds ? (bounds.height + bounds.y - this.b.y).round(1) : 0;\r\n  }\r\n  set y1(v) {\r\n    const {bounds} = this.project;\r\n    if(bounds && (v = bounds.height + bounds.y - parseFloat(v) - this.b.y)){\r\n      this.select_node(\"b\");\r\n      this.move_points(new paper.Point(0, v));\r\n    }\r\n  }\r\n\r\n  get x2() {\r\n    const {bounds} = this.project;\r\n    return bounds ? (this.e.x - bounds.x).round(1) : 0;\r\n  }\r\n  set x2(v) {\r\n    const {bounds} = this.project;\r\n    if(bounds && (v = parseFloat(v) + bounds.x - this.e.x)){\r\n      this.select_node(\"e\");\r\n      this.move_points(new paper.Point(v, 0));\r\n    }\r\n  }\r\n\r\n  get y2() {\r\n    const {bounds} = this.project;\r\n    return bounds ? (bounds.height + bounds.y - this.e.y).round(1) : 0;\r\n  }\r\n  set y2(v) {\r\n    const {bounds} = this.project;\r\n    if(bounds && (v = bounds.height + bounds.y - parseFloat(v) - this.e.y)){\r\n      this.select_node(\"e\");\r\n      this.move_points(new paper.Point(0, v));\r\n    }\r\n  }\r\n\r\n  select_node(node) {\r\n    const {generatrix, project, _attr, view} = this;\r\n    project.deselect_all_points();\r\n    if(_attr.path){\r\n      _attr.path.selected = false;\r\n    }\r\n    if(node == \"b\"){\r\n      generatrix.firstSegment.selected = true;\r\n    }\r\n    else{\r\n      generatrix.lastSegment.selected = true;\r\n    }\r\n    view.update();\r\n  }\r\n\r\n  move_points(delta, all_points, start_point) {\r\n\r\n    if(!delta.length){\r\n      return;\r\n    }\r\n\r\n    const\tother = [];\r\n    const noti = {type: consts.move_points, profiles: [this], points: []};\r\n\r\n    let changed;\r\n\r\n    if(!all_points){\r\n      all_points = !this.generatrix.segments.some((segm) => {\r\n        if (segm.selected)\r\n          return true;\r\n      });\r\n    }\r\n\r\n    const imposts = this.joined_imposts ? this.joined_imposts() : {inner: [], outer: []};\r\n    const isegments = [];\r\n    imposts.inner.concat(imposts.outer).forEach(({profile}) => {\r\n      const {b, e} = profile.rays;\r\n      if(b.profile === this) {\r\n        isegments.push({profile, node: 'b'});\r\n      }\r\n      if(e.profile === this) {\r\n        isegments.push({profile, node: 'e'});\r\n      }\r\n    });\r\n\r\n    this.generatrix.segments.forEach((segm) => {\r\n\r\n      let cnn_point;\r\n\r\n      if (segm.selected || all_points){\r\n\r\n        const noti_points = {old: segm.point.clone(), delta: delta};\r\n\r\n        const free_point = segm.point.add(delta);\r\n\r\n        if(segm.point == this.b){\r\n          cnn_point = this.rays.b;\r\n          if(!cnn_point.profile_point || paper.Key.isDown('control')){\r\n            cnn_point = this.cnn_point(\"b\", free_point);\r\n          }\r\n        }\r\n        else if(segm.point == this.e){\r\n          cnn_point = this.rays.e;\r\n          if(!cnn_point.profile_point || paper.Key.isDown('control')){\r\n            cnn_point = this.cnn_point(\"e\", free_point);\r\n          }\r\n        }\r\n\r\n        let {profile, profile_point} = cnn_point || {};\r\n\r\n        if(cnn_point && cnn_point.cnn_types == $p.enm.cnn_types.acn.t && (segm.point == this.b || segm.point == this.e)){\r\n          if(cnn_point.point.is_nearest(free_point, 0)){\r\n            segm.point = cnn_point.point;\r\n          }\r\n          else{\r\n            const ppath = (profile.nearest(true) ? profile.rays.outer : profile.generatrix).clone({insert: false});\r\n            const {bounds} = ppath;\r\n            if(Math.abs(delta.y) < consts.epsilon){\r\n              const ray = new paper.Path({\r\n                insert: false,\r\n                segments: [[free_point.x, bounds.top], [free_point.x, bounds.bottom]]\r\n              });\r\n              segm.point = ppath.intersect_point(ray, free_point, true) || free_point;\r\n            }\r\n            else if(Math.abs(delta.x) < consts.epsilon){\r\n              const ray = new paper.Path({\r\n                insert: false,\r\n                segments: [[bounds.left, free_point.y], [bounds.right, free_point.y]]\r\n              });\r\n              segm.point = ppath.intersect_point(ray, free_point, true) || free_point;\r\n            }\r\n            else {\r\n              segm.point = free_point;\r\n            }\r\n          }\r\n        }\r\n        else{\r\n          segm.point = free_point;\r\n          if(cnn_point && !paper.Key.isDown('control')){\r\n\r\n            if(profile && profile_point && !profile[profile_point].is_nearest(free_point)){\r\n              if(this instanceof Onlay){\r\n                this.move_nodes(noti_points.old, free_point);\r\n              }\r\n              else{\r\n                other.push(profile_point == 'b' ? profile.generatrix.firstSegment : profile.generatrix.lastSegment);\r\n                noti.profiles.push(profile);\r\n                if(cnn_point.is_cut) {\r\n                  this.layer.profiles.some((p) => {\r\n                    if(p !== profile && p !== this) {\r\n                      if(profile[profile_point].is_nearest(p.b)) {\r\n                        p.b = free_point;\r\n                        other.push(p.generatrix.firstSegment);\r\n                        noti.profiles.push(p);\r\n                        return true;\r\n                      }\r\n                      else if(profile[profile_point].is_nearest(p.e)) {\r\n                        p.e = free_point;\r\n                        other.push(p.generatrix.lastSegment);\r\n                        noti.profiles.push(p);\r\n                        return true;\r\n                      }\r\n                    }\r\n                  });\r\n                }\r\n                profile[profile_point] = free_point;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        noti_points.new = segm.point;\r\n        if(start_point){\r\n          noti_points.start = start_point;\r\n        }\r\n        noti.points.push(noti_points);\r\n\r\n        changed = true;\r\n      }\r\n\r\n    });\r\n\r\n\r\n    if(changed){\r\n      const {_attr: {_rays}, layer, project} = this;\r\n\r\n      _rays.clear();\r\n      isegments.forEach(({profile, node}) => {\r\n        profile.do_sub_bind(this, node);\r\n        profile.rays.clear();\r\n        other.push(profile.generatrix[node === 'b' ? 'firstSegment' : 'lastSegment']);\r\n        !noti.profiles.includes(profile) && noti.profiles.push(profile);\r\n      });\r\n      _rays.clear();\r\n\r\n      layer && layer.notify && layer.notify(noti);\r\n      project.notify(this, 'update', {x1: true, x2: true, y1: true, y2: true});\r\n    }\r\n\r\n    return other;\r\n  }\r\n\r\n  do_sub_bind(profile, node) {\r\n    const ppath = (profile.nearest(true) ? profile.rays.outer : profile.generatrix).clone({insert: false});\r\n    let mpoint = ppath.getNearestPoint(this[node]);\r\n    if(!mpoint.is_nearest(this[node], 0)) {\r\n      const gen = this.generatrix.clone({insert: false}).elongation(3000);\r\n      mpoint = ppath.intersect_point(gen, mpoint, true);\r\n      this[node] = mpoint;\r\n      return true;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.GeneratrixElement = GeneratrixElement;\r\n\r\n\r\nclass GridCoordinates extends paper.Group {\r\n\r\n  constructor(attr) {\r\n    super();\r\n    this.parent = this.project.l_dimensions;\r\n\r\n    const points_color = new paper.Color(0, 0.7, 0, 0.8);\r\n    const sel_color = new paper.Color(0.1, 0.4, 0, 0.9);\r\n    const lines_color = new paper.Color(0, 0, 0.7, 0.8);\r\n\r\n    this._attr = {\r\n      lines_color,\r\n      points_color,\r\n      sel_color,\r\n      step: attr.step,\r\n      offset: attr.offset,\r\n      angle: attr.angle,\r\n      bind: attr.bind,\r\n      line: new paper.Path({\r\n        parent: this,\r\n        strokeColor: new paper.Color(0, 0, 0.7),\r\n        strokeWidth: 2,\r\n        strokeScaling: false,\r\n      }),\r\n      point: new paper.Path.Circle({\r\n        parent: this,\r\n        guide: true,\r\n        radius: 22,\r\n        fillColor: points_color,\r\n      }),\r\n      lines: new paper.Group({\r\n        parent: this,\r\n        guide: true,\r\n        strokeColor: lines_color,\r\n        strokeScaling: false\r\n      }),\r\n    };\r\n\r\n  }\r\n\r\n  get path() {\r\n    return this._attr.path;\r\n  }\r\n  set path(v) {\r\n    this._attr.path = v;\r\n    this._attr.angle = 0;\r\n    this.set_bind();\r\n    this.set_line();\r\n  }\r\n\r\n  set_line() {\r\n    const {bind, offset, path, line, angle} = this._attr;\r\n    let {firstSegment: {point: b}, lastSegment: {point: e}} = path;\r\n    if(bind === 'e') {\r\n      [b, e] = [e, b];\r\n    }\r\n    if(line.segments.length) {\r\n      line.segments[0].point = b;\r\n      line.segments[1].point = e;\r\n    }\r\n    else {\r\n      line.addSegments([b, e]);\r\n    }\r\n\r\n    const langle = e.subtract(b).angle.round(2);\r\n    let dangle = Infinity;\r\n    if(angle) {\r\n      for(const a of [angle, angle - 180, angle + 180]) {\r\n        if(Math.abs(a - langle) < Math.abs(dangle)) {\r\n          dangle = a - langle;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      for(let a = -180; a <= 180; a += 45) {\r\n        if(Math.abs(a - langle) < Math.abs(dangle)) {\r\n          dangle = a - langle;\r\n        }\r\n      }\r\n    }\r\n    if(dangle) {\r\n      line.rotate(dangle);\r\n      line.elongation(3000);\r\n      line.firstSegment.point = line.getNearestPoint(b);\r\n      line.lastSegment.point = line.getNearestPoint(e);\r\n    }\r\n\r\n    const n0 = line.getNormalAt(0).multiply(offset);\r\n    line.firstSegment.point = line.firstSegment.point.subtract(n0);\r\n    line.lastSegment.point = line.lastSegment.point.subtract(n0);\r\n  }\r\n\r\n  set_bind() {\r\n    const {point, path, bind} = this._attr;\r\n    switch (bind) {\r\n    case 'b':\r\n      point.position = path.firstSegment.point;\r\n      break;\r\n    case 'e':\r\n      point.position = path.lastSegment.point;\r\n      break;\r\n    case 'product':\r\n      point.position = this.project.bounds.bottomLeft;\r\n      break;\r\n    case 'contour':\r\n      point.position = path.layer.bounds.bottomLeft;\r\n      break;\r\n    }\r\n  }\r\n\r\n  get bind() {\r\n    return this._attr.bind;\r\n  }\r\n  set bind(v) {\r\n    this._attr.bind = v;\r\n    this.set_bind();\r\n    this.set_line();\r\n  }\r\n\r\n  get step() {\r\n    return this._attr.step;\r\n  }\r\n  set step(v) {\r\n    this._attr.step = v;\r\n    this.set_line();\r\n  }\r\n\r\n  get angle() {\r\n    return this._attr.angle;\r\n  }\r\n  set angle(v) {\r\n    if(this._attr.angle !== v) {\r\n      this._attr.angle = v;\r\n      this.set_line();\r\n    }\r\n  }\r\n\r\n  get offset() {\r\n    return this._attr.offset;\r\n  }\r\n  set offset(v) {\r\n    this._attr.offset = v;\r\n    this.set_line();\r\n  }\r\n\r\n  grid_points(sel_x) {\r\n    const {path, line, lines, lines_color, sel_color, step, bind, point: {position}} = this._attr;\r\n    const res = [];\r\n    const n0 = line.getNormalAt(0).multiply(10000);\r\n    let do_break;\r\n    let prev;\r\n\r\n    function add(tpath, x, tpoint, point) {\r\n\r\n      let pt;\r\n\r\n      if(position.getDistance(point) > 20) {\r\n        pt = new paper.Path.Circle({\r\n          parent: lines,\r\n          guide: true,\r\n          radius: 22,\r\n          center: point,\r\n          fillColor: lines_color,\r\n        });\r\n      }\r\n\r\n      const pth = new paper.Path({\r\n        parent: lines,\r\n        guide: true,\r\n        strokeColor: lines_color,\r\n        strokeScaling: false,\r\n        segments: [tpoint, point],\r\n      })\r\n\r\n      const d1 = tpath.getOffsetOf(tpoint);\r\n      const d2 = tpath.getOffsetOf(point);\r\n      res.push({x: x.round(1), y: (d2 - d1).round(1)});\r\n\r\n      if(Math.abs(x - sel_x) < 10) {\r\n        if(pt) {\r\n          pt.fillColor = sel_color;\r\n        }\r\n        pth.strokeColor = sel_color;\r\n      }\r\n    }\r\n\r\n    lines.removeChildren();\r\n\r\n    for (let x = 0; x < line.length + step; x += step) {\r\n      if(x >= line.length) {\r\n        if(do_break) {\r\n          break;\r\n        }\r\n        do_break = true;\r\n        x = line.length;\r\n      }\r\n      if(prev && (x - prev) < (step / 4)) {\r\n        break;\r\n      }\r\n      prev = x;\r\n      const tpoint = x < line.length ? line.getPointAt(x) : line.lastSegment.point;\r\n      const tpath = new paper.Path({\r\n        segments: [tpoint.subtract(n0), tpoint.add(n0)],\r\n        insert: false\r\n      });\r\n      const intersections = path.getIntersections(tpath);\r\n      if(intersections.length) {\r\n        add(tpath, x, tpoint, intersections[0].point);\r\n      }\r\n      else if(x < step / 2) {\r\n        add(tpath, x, tpoint, bind === 'e' ? path.lastSegment.point : path.firstSegment.point);\r\n      }\r\n      else if(x > line.length - step / 2) {\r\n        add(tpath, x, tpoint, bind === 'e' ? path.firstSegment.point : path.lastSegment.point);\r\n      }\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.GridCoordinates = GridCoordinates;\r\n\r\n\r\nObject.defineProperties(paper.Path.prototype, {\r\n\r\n  getDirectedAngle: {\r\n    value: function getDirectedAngle(point) {\r\n      if(!point) {\r\n        point = this.interiorPoint;\r\n      }\r\n      const np = this.getNearestPoint(point);\r\n      const offset = this.getOffsetOf(np);\r\n      return this.getTangentAt(offset).getDirectedAngle(point.add(np.negate()));\r\n    }\r\n  },\r\n\r\n  self_intersections: {\r\n    value: function self_intersections(first) {\r\n      const {curves} = this;\r\n      const res = [];\r\n      curves.some((crv1, i1) => {\r\n        return curves.some((crv2, i2) => {\r\n          if(i2 <= i1) {\r\n            return;\r\n          }\r\n          const intersections = crv1.getIntersections(crv2);\r\n          if(intersections.length) {\r\n            const {point} = intersections[0];\r\n            if(intersections.length > 1) {\r\n              res.push({crv1, crv2, point});\r\n              if(first) {\r\n                return true;\r\n              }\r\n            }\r\n            if(crv2.point1.is_nearest(crv1.point2, 0) && point.is_nearest(crv1.point2, 0)) {\r\n              return;\r\n            }\r\n            if(crv1.point1.is_nearest(crv2.point2, 0) && point.is_nearest(crv1.point1, 0)) {\r\n              return;\r\n            }\r\n            res.push({crv1, crv2, point});\r\n            if(first) {\r\n              return true;\r\n            }\r\n          }\r\n        });\r\n      });\r\n      return res;\r\n    }\r\n  },\r\n\r\n  is_self_intersected: {\r\n    value: function is_self_intersected() {\r\n      return this.self_intersections(true).length > 0;\r\n    }\r\n  },\r\n\r\n  angle_to: {\r\n      value : function angle_to(other, point, interior, round){\r\n        const p1 = this.getNearestPoint(point),\r\n          p2 = other.getNearestPoint(point),\r\n          t1 = this.getTangentAt(this.getOffsetOf(p1)),\r\n          t2 = other.getTangentAt(other.getOffsetOf(p2));\r\n        let res = t2.angle - t1.angle;\r\n        if(res < 0){\r\n          res += 360;\r\n        }\r\n        if(interior && res > 180){\r\n          res = 180 - (res - 180);\r\n        }\r\n        return round ? res.round(round) : res.round(1);\r\n      }\r\n    },\r\n\r\n  is_linear: {\r\n    value: function is_linear() {\r\n      const {curves, firstCurve} = this;\r\n      if(curves.length === 1 && (!firstCurve.hasHandles() || firstCurve.isLinear())) {\r\n        return true;\r\n      }\r\n      else if(this.hasHandles()) {\r\n        return false;\r\n      }\r\n      else {\r\n        const da = firstCurve.point1.getDirectedAngle(firstCurve.point2);\r\n        for (let i = 1; i < curves.length; i++) {\r\n          const dc = curves[i].point1.getDirectedAngle(curves[i].point2);\r\n          if(Math.abs(dc - da) > consts.epsilon) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  },\r\n\r\n  is_nearest: {\r\n    value: function is_nearest(point, sticking) {\r\n      return point.is_nearest(this.getNearestPoint(point), sticking);\r\n    }\r\n  },\r\n\r\n  get_subpath: {\r\n      value: function get_subpath(point1, point2) {\r\n        let tmp;\r\n\r\n        if(!this.length || !point1 || !point2 || (point1.is_nearest(this.firstSegment.point) && point2.is_nearest(this.lastSegment.point))){\r\n          tmp = this.clone(false);\r\n        }\r\n        else if(point2.is_nearest(this.firstSegment.point) && point1.is_nearest(this.lastSegment.point)){\r\n          tmp = this.clone(false);\r\n          tmp.reverse();\r\n          tmp._reversed = true;\r\n        }\r\n        else{\r\n          const loc1 = this.getLocationOf(point1) || this.getNearestLocation(point1);\r\n          const loc2 = this.getLocationOf(point2) || this.getNearestLocation(point2);\r\n          const offset1 = loc1.offset;\r\n          const offset2 = loc2.offset;\r\n\r\n          if(this.is_linear()){\r\n            tmp = new paper.Path({\r\n              segments: [loc1.point, loc2.point],\r\n              insert: false\r\n            });\r\n          }\r\n          else{\r\n            const step = (offset2 - offset1) * 0.02;\r\n\r\n            tmp = new paper.Path({\r\n              segments: [loc1.point],\r\n              insert: false\r\n            });\r\n\r\n            if(step < 0){\r\n              tmp._reversed = true;\r\n              for(let i = offset1 + step; i > offset2; i+= step){\r\n                tmp.add(this.getPointAt(i));\r\n              }\r\n            }\r\n            else if(step > 0){\r\n              for(let i = offset1 + step; i < offset2; i+= step){\r\n                tmp.add(this.getPointAt(i));\r\n              }\r\n            }\r\n            tmp.add(loc2.point);\r\n            tmp.simplify(0.8);\r\n          }\r\n\r\n          if(offset1 > offset2){\r\n            tmp._reversed = true;\r\n          }\r\n        }\r\n\r\n        return tmp;\r\n      }\r\n    },\r\n\r\n  equidistant: {\r\n      value: function equidistant(delta, elong) {\r\n\r\n        let normal = this.getNormalAt(0);\r\n        const res = new paper.Path({\r\n            segments: [this.firstSegment.point.add(normal.multiply(delta))],\r\n            insert: false\r\n          });\r\n\r\n        if(this.is_linear()) {\r\n          res.add(this.lastSegment.point.add(normal.multiply(delta)));\r\n        }\r\n        else{\r\n\r\n          if(this.firstSegment.handleIn.length){\r\n            res.firstSegment.handleIn = this.firstSegment.handleIn.clone();\r\n          }\r\n          if(this.firstSegment.handleOut.length){\r\n            res.firstSegment.handleOut = this.firstSegment.handleOut.clone();\r\n          }\r\n\r\n          let len = this.length, step = len * 0.02, point;\r\n\r\n          for(let i = step; i < len; i += step) {\r\n            point = this.getPointAt(i);\r\n            if(!point)\r\n              continue;\r\n            normal = this.getNormalAt(i);\r\n            res.add(point.add(normal.multiply(delta)));\r\n          }\r\n\r\n          normal = this.getNormalAt(len);\r\n          res.add(this.lastSegment.point.add(normal.multiply(delta)));\r\n\r\n          if(this.lastSegment.handleIn.length){\r\n            res.lastSegment.handleIn = this.lastSegment.handleIn.clone();\r\n          }\r\n          if(this.lastSegment.handleOut.length){\r\n            res.lastSegment.handleOut = this.lastSegment.handleOut.clone();\r\n          }\r\n\r\n          res.simplify(0.8);\r\n        }\r\n\r\n        return res.elongation(elong);\r\n      }\r\n    },\r\n\r\n  elongation: {\r\n      value: function elongation(delta) {\r\n\r\n        if(delta){\r\n          if(this.is_linear()) {\r\n            let tangent = this.getTangentAt(0);\r\n            this.firstSegment.point = this.firstSegment.point.add(tangent.multiply(-delta));\r\n            this.lastSegment.point = this.lastSegment.point.add(tangent.multiply(delta));\r\n          }else{\r\n            const {length} = this;\r\n            let tangent = this.getTangentAt(length * 0.01);\r\n            this.insert(0, this.firstSegment.point.add(tangent.multiply(-delta)));\r\n            tangent = this.getTangentAt(length * 0.99);\r\n            this.add(this.lastSegment.point.add(tangent.multiply(delta)));\r\n          }\r\n        }\r\n        return this;\r\n      }\r\n    },\r\n\r\n  intersect_point: {\r\n      value: function intersect_point(path, point, elongate, other_point) {\r\n        const intersections = this.getIntersections(path);\r\n        let delta = Infinity, tdelta, tpoint;\r\n\r\n        if(intersections.length === 1){\r\n          return intersections[0].point;\r\n        }\r\n        else if(intersections.length > 1){\r\n\r\n          if(typeof point === 'string' && this.parent) {\r\n            point = this.parent[point];\r\n          }\r\n\r\n          if(!point){\r\n            point = this.getPointAt(this.length /2);\r\n          }\r\n\r\n          intersections.forEach((o) => {\r\n            tdelta = o.point.getDistance(point, true);\r\n            if(other_point) {\r\n              const d2 = o.point.getDistance(other_point, true);\r\n              if(d2 < tdelta) {\r\n                return;\r\n              }\r\n            }\r\n            if(tdelta < delta){\r\n              delta = tdelta;\r\n              tpoint = o.point;\r\n            }\r\n          });\r\n          return tpoint;\r\n        }\r\n        else if(elongate == \"nearest\"){\r\n\r\n          return this.getNearestPoint(path.getNearestPoint(point));\r\n\r\n        }\r\n        else if(elongate){\r\n\r\n          let p1 = this.getNearestPoint(point),\r\n            p2 = path.getNearestPoint(point),\r\n            p1last = this.firstSegment.point.getDistance(p1, true) > this.lastSegment.point.getDistance(p1, true),\r\n            p2last = path.firstSegment.point.getDistance(p2, true) > path.lastSegment.point.getDistance(p2, true),\r\n            tg;\r\n\r\n          if(!this.closed) {\r\n            tg = (p1last ? this.getTangentAt(this.length) : this.getTangentAt(0).negate()).multiply(typeof elongate === 'number' ? elongate : 100);\r\n            if(this.is_linear){\r\n              if(p1last) {\r\n                this.lastSegment.point = this.lastSegment.point.add(tg);\r\n              }\r\n              else {\r\n                this.firstSegment.point = this.firstSegment.point.add(tg);\r\n              }\r\n            }\r\n          }\r\n\r\n          if(!path.closed) {\r\n            tg = (p2last ? path.getTangentAt(path.length) : path.getTangentAt(0).negate()).multiply(typeof elongate === 'number' ? elongate : 100);\r\n            if(path.is_linear){\r\n              if(p2last) {\r\n                path.lastSegment.point = path.lastSegment.point.add(tg);\r\n              }\r\n              else {\r\n                path.firstSegment.point = path.firstSegment.point.add(tg);\r\n              }\r\n            }\r\n          }\r\n\r\n          return this.intersect_point(path, point, false, other_point);\r\n\r\n        }\r\n      }\r\n    },\r\n\r\n  point_pos: {\r\n    value: function point_pos(point, interior) {\r\n      const np = this.getNearestPoint(interior);\r\n      const offset = this.getOffsetOf(np);\r\n      const line = new paper.Line(np, np.add(this.getTangentAt(offset)));\r\n      return line.getSide(point, true);\r\n    }\r\n  },\r\n\r\n  rmin: {\r\n    value() {\r\n      if(!this.hasHandles()){\r\n        return 0;\r\n      }\r\n      const {length} = this;\r\n      const step = length / 9;\r\n      let max = 0;\r\n      for(let pos = 0; pos < length; pos += step){\r\n        const curv = Math.abs(this.getCurvatureAt(pos));\r\n        if(curv > max){\r\n          max = curv;\r\n        }\r\n      }\r\n      return max === 0 ? 0 : 1 / max;\r\n    }\r\n  },\r\n\r\n  rmax: {\r\n    value() {\r\n      if(!this.hasHandles()){\r\n        return 0;\r\n      }\r\n      const {length} = this;\r\n      const step = length / 9;\r\n      let min = Infinity;\r\n      for(let pos = 0; pos < length; pos += step){\r\n        const curv = Math.abs(this.getCurvatureAt(pos));\r\n        if(curv < min){\r\n          min = curv;\r\n        }\r\n      }\r\n      return min === 0 ? 0 : 1 / min;\r\n    }\r\n  },\r\n\r\n  ravg: {\r\n    value() {\r\n      if(!this.hasHandles()){\r\n        return 0;\r\n      }\r\n      const b = this.firstSegment.point;\r\n      const e = this.lastSegment.point;\r\n      const ph0 = b.add(e).divide(2);\r\n      const ph1 = this.getPointAt(this.length / 2);\r\n      return ph0.arc_r(b.x, b.y, e.x, e.y, ph0.getDistance(ph1));\r\n    }\r\n  }\r\n\r\n});\r\n\r\n\r\nObject.defineProperties(paper.Point.prototype, {\r\n\r\n\tis_nearest: {\r\n\t\tvalue: function is_nearest(point, sticking) {\r\n\t\t  if(sticking === 0){\r\n        return Math.abs(this.x - point.x) < consts.epsilon && Math.abs(this.y - point.y) < consts.epsilon;\r\n      }\r\n\t\t\treturn this.getDistance(point, true) < (sticking ? consts.sticking2 : 16);\r\n\t\t}\r\n\t},\r\n\r\n\tpoint_pos: {\r\n\t\tvalue: function point_pos(x1,y1, x2,y2){\r\n\t\t\tif (Math.abs(x1-x2) < 0.2){\r\n\t\t\t\treturn (this.x-x1)*(y1-y2);\r\n\t\t\t}\r\n\t\t\tif (Math.abs(y1-y2) < 0.2){\r\n\t\t\t\treturn (this.y-y1)*(x2-x1);\r\n\t\t\t}\r\n\t\t\treturn (this.y-y1)*(x2-x1)-(y2-y1)*(this.x-x1);\r\n\t\t}\r\n\t},\r\n\r\n\tarc_cntr: {\r\n    value(x1, y1, x2, y2, r0, ccw) {\r\n      let a, b, p, r, q, yy1, xx1, yy2, xx2;\r\n      if(ccw) {\r\n        const tmpx = x1, tmpy = y1;\r\n        x1 = x2;\r\n        y1 = y2;\r\n        x2 = tmpx;\r\n        y2 = tmpy;\r\n      }\r\n      if(x1 != x2) {\r\n        a = (x1 * x1 - x2 * x2 - y2 * y2 + y1 * y1) / (2 * (x1 - x2));\r\n        b = ((y2 - y1) / (x1 - x2));\r\n        p = b * b + 1;\r\n        r = -2 * ((x1 - a) * b + y1);\r\n        q = (x1 - a) * (x1 - a) - r0 * r0 + y1 * y1;\r\n        yy1 = (-r + Math.sqrt(r * r - 4 * p * q)) / (2 * p);\r\n        xx1 = a + b * yy1;\r\n        yy2 = (-r - Math.sqrt(r * r - 4 * p * q)) / (2 * p);\r\n        xx2 = a + b * yy2;\r\n      }\r\n      else {\r\n        a = (y1 * y1 - y2 * y2 - x2 * x2 + x1 * x1) / (2 * (y1 - y2));\r\n        b = ((x2 - x1) / (y1 - y2));\r\n        p = b * b + 1;\r\n        r = -2 * ((y1 - a) * b + x1);\r\n        q = (y1 - a) * (y1 - a) - r0 * r0 + x1 * x1;\r\n        xx1 = (-r - Math.sqrt(r * r - 4 * p * q)) / (2 * p);\r\n        yy1 = a + b * xx1;\r\n        xx2 = (-r + Math.sqrt(r * r - 4 * p * q)) / (2 * p);\r\n        yy2 = a + b * xx2;\r\n      }\r\n\r\n      if(new paper.Point(xx1, yy1).point_pos(x1, y1, x2, y2) > 0) {\r\n        return {x: xx1, y: yy1};\r\n      }\r\n      else {\r\n        return {x: xx2, y: yy2};\r\n      }\r\n    }\r\n  },\r\n\r\n\tarc_point: {\r\n    value(x1, y1, x2, y2, r, arc_ccw, more_180) {\r\n      const point = {x: (x1 + x2) / 2, y: (y1 + y2) / 2};\r\n      if(r > 0) {\r\n        let dx = x1 - x2, dy = y1 - y2, dr = r * r - (dx * dx + dy * dy) / 4, l, h;\r\n        if(dr >= 0) {\r\n          const centr = this.arc_cntr(x1, y1, x2, y2, r, arc_ccw);\r\n          dx = point.x - centr.x;\r\n          dy = point.y - centr.y;\t\r\n          l = Math.sqrt(dx * dx + dy * dy);\r\n\r\n          if(more_180) {\r\n            h = r + Math.sqrt(dr);\r\n          }\r\n          else {\r\n            h = r - Math.sqrt(dr);\r\n          }\r\n\r\n          point.x += dx * h / l;\r\n          point.y += dy * h / l;\r\n        }\r\n      }\r\n      return point;\r\n    }\r\n\t},\r\n\r\n  arc_r: {\r\n    value(x1, y1, x2, y2, h) {\r\n      if(!h) {\r\n        return 0;\r\n      }\r\n      const [dx, dy] = [(x1 - x2), (y1 - y2)];\r\n      return (h / 2 + (dx * dx + dy * dy) / (8 * h)).round(3);\r\n    }\r\n  },\r\n\r\n\tsnap_to_angle: {\r\n\t\tvalue: function snap_to_angle(snapAngle) {\r\n\r\n\t\t\tif(!snapAngle){\r\n        snapAngle = Math.PI*2/8;\r\n      }\r\n\r\n\t\t\tlet angle = Math.atan2(this.y, this.x);\r\n\t\t\tangle = Math.round(angle/snapAngle) * snapAngle;\r\n\r\n\t\t\tconst dirx = Math.cos(angle),\r\n\t\t\t\tdiry = Math.sin(angle),\r\n\t\t\t\td = dirx*this.x + diry*this.y;\r\n\r\n\t\t\treturn new paper.Point((dirx*d / 10).round() * 10, (diry*d / 10).round() * 10);\r\n\t\t}\r\n\t},\r\n\r\n  bind_to_nodes: {\r\n\t  value: function bind_to_nodes(sticking, {activeLayer}) {\r\n      return activeLayer && activeLayer.nodes.some((point) => {\r\n        if(point.is_nearest(this, sticking)){\r\n          this.x = point.x;\r\n          this.y = point.y;\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CnnPoint {\r\n\r\n  constructor(parent, node) {\r\n\r\n    this._parent = parent;\r\n\r\n    this.node = node;\r\n\r\n    this.initialize();\r\n  }\r\n\r\n  get is_t() {\r\n    const {cnn, parent, profile, profile_point} = this;\r\n    const {cnn_types, orientations} = $p.enm;\r\n\r\n    if(profile && !profile_point) {\r\n      return true;\r\n    }\r\n\r\n    if(!cnn || cnn.cnn_type == cnn_types.ad) {\r\n      return false;\r\n    }\r\n\r\n    if(cnn.cnn_type == cnn_types.t) {\r\n      return true;\r\n    }\r\n\r\n    if(cnn.cnn_type == cnn_types.av && parent.orientation != orientations.vert) {\r\n      return true;\r\n    }\r\n    if(cnn.cnn_type == cnn_types.ah && parent.orientation != orientations.hor) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  get is_tt() {\r\n    return !(this.is_i || this.profile_point == 'b' || this.profile_point == 'e' || this.profile == this.parent);\r\n  }\r\n\r\n  get is_l() {\r\n    const {cnn} = this;\r\n    const {cnn_types} = $p.enm;\r\n    return this.is_t || !!(cnn && (cnn.cnn_type === cnn_types.av || cnn.cnn_type === cnn_types.ah));\r\n  }\r\n\r\n  get is_i() {\r\n    return !this.profile && !this.is_cut;\r\n  }\r\n\r\n  get is_x() {\r\n    const {cnn} = this;\r\n    return cnn && cnn.cnn_type === $p.enm.cnn_types.xx;\r\n  }\r\n\r\n  get parent() {\r\n    return this._parent;\r\n  }\r\n\r\n  clear() {\r\n    if(this.profile_point) {\r\n      this.profile_point = '';\r\n    }\r\n    if(this.is_cut) {\r\n      this.is_cut = false;\r\n    }\r\n    this.profile = null;\r\n    this.err = null;\r\n    this.distance = Infinity;\r\n    this.cnn_types = $p.enm.cnn_types.acn.i;\r\n    if(this.cnn && this.cnn.cnn_type != $p.enm.cnn_types.i) {\r\n      this.cnn = null;\r\n    }\r\n    const {_corns} = this._parent._attr;\r\n    if(_corns.length > 5) {\r\n      _corns.length = 5;\r\n    };\r\n  }\r\n\r\n  get err() {\r\n    return this._err;\r\n  }\r\n\r\n  set err(v) {\r\n    if(!v) {\r\n      this._err.length = 0;\r\n    }\r\n    else if(this._err.indexOf(v) == -1) {\r\n      this._err.push(v);\r\n    }\r\n  }\r\n\r\n  check_err(style) {\r\n    const {node, _parent} = this;\r\n    const {_corns, _rays} = _parent._attr;\r\n    const len = node == 'b' ? _corns[1].getDistance(_corns[4]) : _corns[2].getDistance(_corns[3]);\r\n    const angle = _parent.angle_at(node);\r\n    const {cnn} = this;\r\n    if(!cnn ||\r\n      (cnn.lmin && cnn.lmin > len) ||\r\n      (cnn.lmax && cnn.lmax < len) ||\r\n      (cnn.amin && cnn.amin > angle) ||\r\n      (cnn.amax && cnn.amax < angle)\r\n    ) {\r\n      if(style) {\r\n        Object.assign(new paper.Path.Circle({\r\n          center: node == 'b' ? _corns[4].add(_corns[1]).divide(2) : _corns[2].add(_corns[3]).divide(2),\r\n          radius: style.radius || 70,\r\n        }), style);\r\n      }\r\n      else {\r\n        _parent.err_spec_row($p.job_prm.nom.critical_error, cnn ? $p.msg.err_seam_len : $p.msg.err_no_cnn);\r\n      }\r\n    }\r\n  }\r\n\r\n  get profile() {\r\n    if(this._profile === undefined && this._row && this._row.elm2) {\r\n      this._profile = this.parent.layer.getItem({elm: this._row.elm2});\r\n      delete this._row;\r\n    }\r\n    return this._profile;\r\n  }\r\n\r\n  set profile(v) {\r\n    this._profile = v;\r\n  }\r\n\r\n  get npoint() {\r\n    const point = this.point || this.parent[this.node];\r\n    if(!this.is_tt) {\r\n      return point;\r\n    }\r\n    const {profile} = this;\r\n    if(!profile || !profile.nearest(true)) {\r\n      return point;\r\n    }\r\n    return profile.nearest(true).generatrix.getNearestPoint(point) || point;\r\n  }\r\n\r\n  len_angl() {\r\n    const {is_t, cnn} = this;\r\n    const invert = cnn && cnn.cnn_type === $p.enm.cnn_types.av;\r\n    return {\r\n      angle: 90,\r\n      art1: invert ? !is_t : is_t,\r\n      art2: invert ? is_t : !is_t,\r\n    };\r\n  }\r\n\r\n  initialize() {\r\n\r\n    const {_parent, node} = this;\r\n\r\n    this._err = [];\r\n\r\n    this._row = _parent.project.cnns.find({elm1: _parent.elm, node1: node});\r\n\r\n    this._profile;\r\n\r\n    if(this._row) {\r\n\r\n      this.cnn = this._row.cnn;\r\n\r\n      if($p.enm.cnn_types.acn.a.indexOf(this.cnn.cnn_type) != -1) {\r\n        this.cnn_types = $p.enm.cnn_types.acn.a;\r\n      }\r\n      else if($p.enm.cnn_types.acn.t.indexOf(this.cnn.cnn_type) != -1) {\r\n        this.cnn_types = $p.enm.cnn_types.acn.t;\r\n      }\r\n      else {\r\n        this.cnn_types = $p.enm.cnn_types.acn.i;\r\n      }\r\n    }\r\n    else {\r\n      this.cnn = null;\r\n      this.cnn_types = $p.enm.cnn_types.acn.i;\r\n    }\r\n\r\n    this.distance = Infinity;\r\n\r\n    this.point = null;\r\n\r\n    this.profile_point = '';\r\n\r\n  }\r\n}\r\n\r\nclass ProfileRays {\r\n\r\n  constructor(parent) {\r\n    this.parent = parent;\r\n    this.b = new CnnPoint(this.parent, 'b');\r\n    this.e = new CnnPoint(this.parent, 'e');\r\n    this.inner = new paper.Path({insert: false});\r\n    this.outer = new paper.Path({insert: false});\r\n  }\r\n\r\n  clear_segments() {\r\n    if(this.inner.segments.length) {\r\n      this.inner.removeSegments();\r\n    }\r\n    if(this.outer.segments.length) {\r\n      this.outer.removeSegments();\r\n    }\r\n  }\r\n\r\n  clear(with_cnn) {\r\n    this.clear_segments();\r\n    if(with_cnn) {\r\n      this.b.clear();\r\n      this.e.clear();\r\n    }\r\n  }\r\n\r\n  recalc() {\r\n\r\n    const {parent} = this;\r\n    const gen = parent.generatrix;\r\n    const len = gen.length;\r\n\r\n    this.clear();\r\n\r\n    if(!len) {\r\n      return;\r\n    }\r\n\r\n    const {d1, d2, width} = parent;\r\n    const ds = 3 * width;\r\n    const step = len * 0.02;\r\n\r\n    let point_b = gen.firstSegment.point,\r\n      tangent_b = gen.getTangentAt(0),\r\n      normal_b = gen.getNormalAt(0),\r\n      point_e = gen.lastSegment.point,\r\n      tangent_e, normal_e;\r\n\r\n    this.outer.add(point_b.add(normal_b.multiply(d1)).add(tangent_b.multiply(-ds)));\r\n    this.inner.add(point_b.add(normal_b.multiply(d2)).add(tangent_b.multiply(-ds)));\r\n\r\n    if(gen.is_linear()) {\r\n      this.outer.add(point_e.add(normal_b.multiply(d1)).add(tangent_b.multiply(ds)));\r\n      this.inner.add(point_e.add(normal_b.multiply(d2)).add(tangent_b.multiply(ds)));\r\n    }\r\n    else {\r\n\r\n      this.outer.add(point_b.add(normal_b.multiply(d1)));\r\n      this.inner.add(point_b.add(normal_b.multiply(d2)));\r\n\r\n      for (let i = step; i < len; i += step) {\r\n        point_b = gen.getPointAt(i);\r\n        normal_b = gen.getNormalAt(i);\r\n        this.outer.add(point_b.add(normal_b.normalize(d1)));\r\n        this.inner.add(point_b.add(normal_b.normalize(d2)));\r\n      }\r\n\r\n      normal_e = gen.getNormalAt(len);\r\n      this.outer.add(point_e.add(normal_e.multiply(d1)));\r\n      this.inner.add(point_e.add(normal_e.multiply(d2)));\r\n\r\n      tangent_e = gen.getTangentAt(len);\r\n      this.outer.add(point_e.add(normal_e.multiply(d1)).add(tangent_e.multiply(ds)));\r\n      this.inner.add(point_e.add(normal_e.multiply(d2)).add(tangent_e.multiply(ds)));\r\n\r\n    }\r\n\r\n    this.inner.reverse();\r\n  }\r\n\r\n}\r\n\r\n\r\nclass ProfileItem extends GeneratrixElement {\r\n\r\n  get d1() {\r\n    return -(this.d0 - this.sizeb);\r\n  }\r\n\r\n  get d2() {\r\n    return this.d1 - this.width;\r\n  }\r\n\r\n  get offset() {\r\n    const {_row} = this;\r\n    return (_row && _row.offset) || 0;\r\n  }\r\n\r\n  set offset(v) {\r\n    const {_row, _attr, selected} = this;\r\n    v = parseFloat(v) || 0;\r\n    if(_row && _row.offset !== v) {\r\n      _row.offset = v;\r\n      if(selected) {\r\n        this.selected = false;\r\n      }\r\n      const nearests = this.joined_nearests ? this.joined_nearests() : [];\r\n      if(this.joined_imposts) {\r\n        const imposts = this.joined_imposts();\r\n        nearests.push.apply(nearests, imposts.inner.map((v) => v.profile).concat(imposts.outer.map((v) => v.profile)));\r\n      }\r\n      for(const profile of nearests) {\r\n        profile._attr._rays && profile._attr._rays.clear();\r\n      }\r\n      _attr._rays && _attr._rays.clear();\r\n      this.project.register_change(true);\r\n      if(selected) {\r\n        this.selected = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  hhpoint(side) {\r\n    const {layer, rays} = this;\r\n    const {h_ruch, furn} = layer;\r\n    const {furn_set, handle_side} = furn;\r\n    if(!h_ruch || !handle_side || furn_set.empty()) {\r\n      return;\r\n    }\r\n    if(layer.profile_by_furn_side(handle_side) == this) {\r\n      return rays[side].intersect_point(layer.handle_line(this));\r\n    }\r\n  }\r\n\r\n  get hhi() {\r\n    return this.hhpoint('inner');\r\n  }\r\n\r\n  get hho() {\r\n    return this.hhpoint('outer');\r\n  }\r\n\r\n  get cnn1() {\r\n    return this.getcnnn('b');\r\n  }\r\n\r\n  set cnn1(v) {\r\n    this.setcnnn(v, 'b');\r\n  }\r\n\r\n  get cnn2() {\r\n    return this.getcnnn('e');\r\n  }\r\n\r\n  set cnn2(v) {\r\n    this.setcnnn(v, 'e');\r\n  }\r\n\r\n  getcnnn(n) {\r\n    return this.cnn_point(n).cnn || $p.cat.cnns.get();\r\n  }\r\n\r\n  setcnnn(v, n) {\r\n    const {rays} = this;\r\n    const cnn = $p.cat.cnns.get(v);\r\n    if(rays[n].cnn != cnn) {\r\n      rays[n].cnn = cnn;\r\n      this.project.register_change();\r\n    }\r\n  }\r\n\r\n  get gb() {\r\n    return this.gn('b');\r\n  }\r\n\r\n  get ge() {\r\n    return this.gn('e');\r\n  }\r\n\r\n  gn(n) {\r\n    if(this.layer.layer) {\r\n      const {profile, is_t} = this.cnn_point(n);\r\n      if(is_t && profile) {\r\n        return profile.generatrix.getNearestPoint(this[n]);\r\n      }\r\n    }\r\n    return this[n];\r\n  }\r\n\r\n  angle_at(p) {\r\n    const {profile, point} = this.cnn_point(p);\r\n    if(!profile || !point) {\r\n      return 90;\r\n    }\r\n    const g1 = this.generatrix;\r\n    const g2 = profile.generatrix;\r\n    let offset1 = g1.getOffsetOf(g1.getNearestPoint(point)),\r\n      offset2 = g2.getOffsetOf(g2.getNearestPoint(point));\r\n    if(offset1 < 10){\r\n      offset1 = 10;\r\n    }\r\n    else if(Math.abs(offset1 - g1.length) < 10){\r\n      offset1 = g1.length - 10;\r\n    }\r\n    if(offset2 < 10){\r\n      offset2 = 10;\r\n    }\r\n    else if(Math.abs(offset2 - g2.length) < 10){\r\n      offset2 = g2.length - 10;\r\n    }\r\n    const t1 = g1.getTangentAt(offset1) || new paper.Point();\r\n    const t2 = g2.getTangentAt(offset2) || new paper.Point();\r\n    const a = t2.negate().getDirectedAngle(t1).round(1);\r\n    return a > 180 ? a - 180 : (a < 0 ? -a : a);\r\n  }\r\n\r\n  get a1() {\r\n    return this.angle_at('b');\r\n  }\r\n\r\n  get a2() {\r\n    return this.angle_at('e');\r\n  }\r\n\r\n  get info() {\r\n    return '№' + this.elm + ' α:' + this.angle_hor.toFixed(0) + '° l:' + this.length.toFixed(0);\r\n  }\r\n\r\n  get r() {\r\n    return this._row.r;\r\n  }\r\n\r\n  set r(v) {\r\n    const {_row, _attr} = this;\r\n    if(_row.r != v) {\r\n      _attr._rays.clear();\r\n      _row.r = v;\r\n      this.set_generatrix_radius();\r\n      this.project.notify(this, 'update', {r: true, arc_h: true, arc_ccw: true});\r\n    }\r\n  }\r\n\r\n  get rmin() {\r\n    return this.generatrix.rmin();\r\n  }\r\n\r\n  get rmax() {\r\n    return this.generatrix.rmax();\r\n  }\r\n\r\n  get ravg() {\r\n    return this.generatrix.ravg();\r\n  }\r\n\r\n  get arc_ccw() {\r\n    return this._row.arc_ccw;\r\n  }\r\n\r\n  set arc_ccw(v) {\r\n    const {_row, _attr} = this;\r\n    if(_row.arc_ccw != v) {\r\n      _attr._rays.clear();\r\n      _row.arc_ccw = v;\r\n      this.set_generatrix_radius();\r\n      this.project.notify(this, 'update', {r: true, arc_h: true, arc_ccw: true});\r\n    }\r\n  }\r\n\r\n  get arc_h() {\r\n    const {_row, b, e, generatrix} = this;\r\n    if(_row.r) {\r\n      const p = generatrix.getPointAt(generatrix.length / 2);\r\n      return paper.Line.getSignedDistance(b.x, b.y, e.x, e.y, p.x, p.y).round(1);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  set arc_h(v) {\r\n    const {_row, _attr, b, e, arc_h} = this;\r\n    v = parseFloat(v);\r\n    if(arc_h != v) {\r\n      _attr._rays.clear();\r\n      if(v < 0) {\r\n        v = -v;\r\n        _row.arc_ccw = true;\r\n      }\r\n      else {\r\n        _row.arc_ccw = false;\r\n      }\r\n      _row.r = b.arc_r(b.x, b.y, e.x, e.y, v);\r\n      this.set_generatrix_radius(v);\r\n      this.project.notify(this, 'update', {r: true, arc_h: true, arc_ccw: true});\r\n    }\r\n  }\r\n\r\n  get angle_hor() {\r\n    const {b, e} = this;\r\n    const res = (new paper.Point(e.x - b.x, b.y - e.y)).angle.round(2);\r\n    return res < 0 ? res + 360 : res;\r\n  }\r\n\r\n  get length() {\r\n    const {b, e, outer} = this.rays;\r\n    const gen = this.elm_type == $p.enm.elm_types.Импост ? this.generatrix : outer;\r\n    const ppoints = {};\r\n\r\n    for (let i = 1; i <= 4; i++) {\r\n      ppoints[i] = gen.getNearestPoint(this.corns(i));\r\n    }\r\n\r\n    ppoints.b = gen.getOffsetOf(ppoints[1]) < gen.getOffsetOf(ppoints[4]) ? ppoints[1] : ppoints[4];\r\n    ppoints.e = gen.getOffsetOf(ppoints[2]) > gen.getOffsetOf(ppoints[3]) ? ppoints[2] : ppoints[3];\r\n\r\n    const sub_gen = gen.get_subpath(ppoints.b, ppoints.e);\r\n    const res = sub_gen.length + (b.cnn ? b.cnn.size(this) : 0) + (e.cnn ? e.cnn.size(this) : 0);\r\n    sub_gen.remove();\r\n\r\n    return res;\r\n  }\r\n\r\n  get orientation() {\r\n    let {angle_hor} = this;\r\n    if(angle_hor > 180) {\r\n      angle_hor -= 180;\r\n    }\r\n    if((angle_hor > -consts.orientation_delta && angle_hor < consts.orientation_delta) ||\r\n      (angle_hor > 180 - consts.orientation_delta && angle_hor < 180 + consts.orientation_delta)) {\r\n      return $p.enm.orientations.hor;\r\n    }\r\n    if((angle_hor > 90 - consts.orientation_delta && angle_hor < 90 + consts.orientation_delta) ||\r\n      (angle_hor > 270 - consts.orientation_delta && angle_hor < 270 + consts.orientation_delta)) {\r\n      return $p.enm.orientations.vert;\r\n    }\r\n    return $p.enm.orientations.incline;\r\n  }\r\n\r\n  get rays() {\r\n    const {_rays} = this._attr;\r\n    if(!_rays.inner.segments.length || !_rays.outer.segments.length) {\r\n      _rays.recalc();\r\n    }\r\n    return _rays;\r\n  }\r\n\r\n  get addls() {\r\n    return this.children.filter((elm) => elm instanceof ProfileAddl);\r\n  }\r\n\r\n  elm_props() {\r\n    const {_attr, _row, project} = this;\r\n    const {blank} = $p.utils;\r\n    const props = [];\r\n    project._dp.sys.product_params.find_rows({elm: true}, ({param}) => {\r\n      props.push(param);\r\n    });\r\n    _attr.props && _attr.props.forEach((prop) => {\r\n      if(!props.includes(prop)) {\r\n        delete this[prop.ref];\r\n      }\r\n    });\r\n    _attr.props = props;\r\n    props.forEach((prop) => {\r\n      if(!this.hasOwnProperty(prop.ref)) {\r\n        Object.defineProperty(this, prop.ref, {\r\n          get() {\r\n            let prow;\r\n            project.ox.params.find_rows({\r\n              param: prop,\r\n              cnstr: {in: [0, -_row.row]},\r\n              inset: blank.guid\r\n            }, (row) => {\r\n              if(!prow || row.cnstr) {\r\n                prow = row;\r\n              }\r\n            });\r\n            return prow && prow.value;\r\n          },\r\n          set(v) {\r\n            let prow, prow0;\r\n            project.ox.params.find_rows({\r\n              param: prop,\r\n              cnstr: {in: [0, -_row.row]},\r\n              inset: blank.guid\r\n            }, (row) => {\r\n              if(row.cnstr) {\r\n                prow = row;\r\n              }\r\n              else {\r\n                prow0 = row;\r\n              }\r\n            });\r\n            if(prow0 && prow0.value == v) {\r\n              prow && prow._owner.del(prow);\r\n            }\r\n            else if(prow) {\r\n              prow.value = v;\r\n            }\r\n            else {\r\n              project.ox.params.add({\r\n                param: prop,\r\n                cnstr: -_row.row,\r\n                inset: blank.guid,\r\n                value: v,\r\n              });\r\n            }\r\n          },\r\n          configurable: true,\r\n        });\r\n      }\r\n    });\r\n\r\n    return props;\r\n  }\r\n\r\n  get oxml() {\r\n    const oxml = {\r\n      ' ': [\r\n        {id: 'info', path: 'o.info', type: 'ro'},\r\n        'inset',\r\n        'clr',\r\n        this instanceof Onlay ? 'region' : 'offset',\r\n      ],\r\n      'Начало': ['x1','y1','a1','cnn1'],\r\n      'Конец': ['x2','y2','a2','cnn2']\r\n    };\r\n    if(this.selected_cnn_ii()) {\r\n      oxml.Примыкание = ['cnn3'];\r\n    }\r\n    const props = this.elm_props();\r\n    if(props.length) {\r\n      oxml.Свойства = props.map(({ref}) => ref);\r\n    }\r\n    return oxml;\r\n  }\r\n\r\n  get default_clr_str() {\r\n    return 'FEFEFE';\r\n  }\r\n\r\n  get opacity() {\r\n    return this.path ? this.path.opacity : 1;\r\n  }\r\n\r\n  set opacity(v) {\r\n    this.path && (this.path.opacity = v);\r\n  }\r\n\r\n  get dx0() {\r\n    const {cnn} = this.rays.b;\r\n    const main_row = cnn && cnn.main_row(this);\r\n    return main_row && main_row.angle_calc_method == $p.enm.angle_calculating_ways.СварнойШов ? -main_row.sz : 0;\r\n  }\r\n\r\n  setSelection(selection) {\r\n    super.setSelection(selection);\r\n\r\n    const {generatrix, path} = this._attr;\r\n\r\n    generatrix.setSelection(selection);\r\n    this.ruler_line_select(false);\r\n\r\n    if(selection) {\r\n\r\n      const {inner, outer} = this.rays;\r\n\r\n      if(this._hatching) {\r\n        this._hatching.removeChildren();\r\n      }\r\n      else {\r\n        this._hatching = new paper.CompoundPath({\r\n          parent: this,\r\n          guide: true,\r\n          strokeColor: 'grey',\r\n          strokeScaling: false\r\n        });\r\n      }\r\n\r\n      path.setSelection(0);\r\n\r\n      for (let t = 0; t < inner.length; t += 50) {\r\n        const ip = inner.getPointAt(t);\r\n        const np = inner.getNormalAt(t).multiply(400).rotate(-35).negate();\r\n        const fp = new paper.Path({\r\n          insert: false,\r\n          segments: [ip, ip.add(np)]\r\n        });\r\n        const op = fp.intersect_point(outer, ip);\r\n\r\n        if(ip && op) {\r\n          const cip = path.getNearestPoint(ip);\r\n          const cop = path.getNearestPoint(op);\r\n          const nip = cip.is_nearest(ip);\r\n          const nop = cop.is_nearest(op);\r\n          if(nip && nop) {\r\n            this._hatching.moveTo(cip);\r\n            this._hatching.lineTo(cop);\r\n          }\r\n          else if(nip && !nop) {\r\n            const pp = fp.intersect_point(path, op);\r\n            if(pp) {\r\n              this._hatching.moveTo(cip);\r\n              this._hatching.lineTo(pp);\r\n            }\r\n          }\r\n          else if(!nip && nop) {\r\n            const pp = fp.intersect_point(path, ip);\r\n            if(pp) {\r\n              this._hatching.moveTo(pp);\r\n              this._hatching.lineTo(cop);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n    else {\r\n      if(this._hatching) {\r\n        this._hatching.remove();\r\n        this._hatching = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  ruler_line_select(mode) {\r\n\r\n    const {_attr} = this;\r\n\r\n    if(_attr.ruler_line_path) {\r\n      _attr.ruler_line_path.remove();\r\n      delete _attr.ruler_line_path;\r\n    }\r\n\r\n    if(mode) {\r\n      switch (_attr.ruler_line = mode) {\r\n\r\n      case 'inner':\r\n        _attr.ruler_line_path = this.path.get_subpath(this.corns(3), this.corns(4));\r\n        _attr.ruler_line_path.parent = this;\r\n        _attr.ruler_line_path.selected = true;\r\n        break;\r\n\r\n      case 'outer':\r\n        _attr.ruler_line_path = this.path.get_subpath(this.corns(1), this.corns(2));\r\n        _attr.ruler_line_path.parent = this;\r\n        _attr.ruler_line_path.selected = true;\r\n        break;\r\n\r\n      default:\r\n        this.generatrix.selected = true;\r\n        break;\r\n      }\r\n    }\r\n    else if(_attr.ruler_line) {\r\n      delete _attr.ruler_line;\r\n    }\r\n  }\r\n\r\n  ruler_line_coordin(xy) {\r\n    switch (this._attr.ruler_line) {\r\n    case 'inner':\r\n      return (this.corns(3)[xy] + this.corns(4)[xy]) / 2;\r\n    case 'outer':\r\n      return (this.corns(1)[xy] + this.corns(2)[xy]) / 2;\r\n    default:\r\n      return (this.b[xy] + this.e[xy]) / 2;\r\n    }\r\n  }\r\n\r\n  save_coordinates() {\r\n\r\n    const {_attr, _row, rays, generatrix, project: {cnns}} = this;\r\n\r\n    if(!generatrix) {\r\n      return;\r\n    }\r\n\r\n    const b = rays.b;\r\n    const e = rays.e;\r\n    const row_b = cnns.add({\r\n      elm1: _row.elm,\r\n      node1: 'b',\r\n      cnn: b.cnn,\r\n      aperture_len: this.corns(1).getDistance(this.corns(4)).round(1)\r\n    });\r\n    const row_e = cnns.add({\r\n      elm1: _row.elm,\r\n      node1: 'e',\r\n      cnn: e.cnn,\r\n      aperture_len: this.corns(2).getDistance(this.corns(3)).round(1)\r\n    });\r\n\r\n    _row.x1 = this.x1;\r\n    _row.y1 = this.y1;\r\n    _row.x2 = this.x2;\r\n    _row.y2 = this.y2;\r\n    _row.path_data = generatrix.pathData;\r\n    _row.nom = this.nom;\r\n\r\n    if(generatrix.is_linear()) {\r\n      _row.r = 0;\r\n    }\r\n    else {\r\n      const {path} = this;\r\n      const r1 = path.get_subpath(_attr._corns[1], _attr._corns[2]).ravg();\r\n      const r2 = path.get_subpath(_attr._corns[3], _attr._corns[4]).ravg();\r\n      _row.r = Math.max(r1, r2);\r\n    }\r\n\r\n    _row.len = this.length.round(1);\r\n\r\n    if(b.profile) {\r\n      row_b.elm2 = b.profile.elm;\r\n      if(b.profile.e.is_nearest(b.point)) {\r\n        row_b.node2 = 'e';\r\n      }\r\n      else if(b.profile.b.is_nearest(b.point)) {\r\n        row_b.node2 = 'b';\r\n      }\r\n      else {\r\n        row_b.node2 = 't';\r\n      }\r\n    }\r\n    if(e.profile) {\r\n      row_e.elm2 = e.profile.elm;\r\n      if(e.profile.b.is_nearest(e.point)) {\r\n        row_e.node2 = 'b';\r\n      }\r\n      else if(e.profile.e.is_nearest(e.point)) {\r\n        row_e.node2 = 'b';\r\n      }\r\n      else {\r\n        row_e.node2 = 't';\r\n      }\r\n    }\r\n\r\n    const nrst = this.nearest();\r\n    if(nrst) {\r\n      cnns.add({\r\n        elm1: _row.elm,\r\n        elm2: nrst.elm,\r\n        cnn: _attr._nearest_cnn,\r\n        aperture_len: _row.len\r\n      });\r\n    }\r\n\r\n    _row.angle_hor = this.angle_hor;\r\n\r\n    _row.alp1 = Math.round((this.corns(4).subtract(this.corns(1)).angle - generatrix.getTangentAt(0).angle) * 10) / 10;\r\n    if(_row.alp1 < 0) {\r\n      _row.alp1 = _row.alp1 + 360;\r\n    }\r\n\r\n    _row.alp2 = Math.round((generatrix.getTangentAt(generatrix.length).angle - this.corns(2).subtract(this.corns(3)).angle) * 10) / 10;\r\n    if(_row.alp2 < 0) {\r\n      _row.alp2 = _row.alp2 + 360;\r\n    }\r\n\r\n    _row.elm_type = this.elm_type;\r\n\r\n    _row.orientation = this.orientation;\r\n    _row.pos = this.pos;\r\n\r\n    this.addls.forEach((addl) => addl.save_coordinates());\r\n  }\r\n\r\n  initialize(attr) {\r\n\r\n    const {project, _attr, _row} = this;\r\n    const h = project.bounds.height + project.bounds.y;\r\n    const {job_prm, utils} = $p;\r\n\r\n    if(attr.r) {\r\n      _row.r = attr.r;\r\n    }\r\n\r\n    if(attr.generatrix) {\r\n      _attr.generatrix = attr.generatrix;\r\n      if(_attr.generatrix._reversed) {\r\n        delete _attr.generatrix._reversed;\r\n      }\r\n    }\r\n    else {\r\n      if(_row.path_data) {\r\n        _attr.generatrix = new paper.Path(_row.path_data);\r\n      }\r\n      else {\r\n        const first_point = new paper.Point([_row.x1, h - _row.y1]);\r\n        _attr.generatrix = new paper.Path(first_point);\r\n        if(_row.r) {\r\n          _attr.generatrix.arcTo(\r\n            first_point.arc_point(_row.x1, h - _row.y1, _row.x2, h - _row.y2, _row.r + 0.001, _row.arc_ccw, false), [_row.x2, h - _row.y2]);\r\n        }\r\n        else {\r\n          _attr.generatrix.lineTo([_row.x2, h - _row.y2]);\r\n        }\r\n      }\r\n    }\r\n\r\n    _attr._corns = [];\r\n\r\n    _attr._rays = new ProfileRays(this);\r\n\r\n    _attr.generatrix.strokeColor = 'gray';\r\n\r\n    _attr.path = new paper.Path();\r\n    _attr.path.strokeColor = 'black';\r\n    _attr.path.strokeWidth = 1;\r\n    _attr.path.strokeScaling = false;\r\n    this.clr = _row.clr.empty() ? job_prm.builder.base_clr : _row.clr;\r\n\r\n    this.addChild(_attr.path);\r\n    this.addChild(_attr.generatrix);\r\n\r\n  }\r\n\r\n  observer(an) {\r\n    const {profiles} = an;\r\n    if(profiles) {\r\n      let binded;\r\n      if(!profiles.includes(this)) {\r\n        for(const profile of profiles) {\r\n          if(profile instanceof Onlay && !(this instanceof Onlay)) {\r\n            continue;\r\n          }\r\n          binded = true;\r\n          this.do_bind(profile, this.cnn_point('b'), this.cnn_point('e'), an);\r\n        }\r\n        binded && profiles.push(this);\r\n      }\r\n    }\r\n    else if(an instanceof Profile || an instanceof ProfileConnective) {\r\n      this.do_bind(an, this.cnn_point('b'), this.cnn_point('e'));\r\n    }\r\n  }\r\n\r\n  do_bind(profile, bcnn, ecnn, moved) {\r\n\r\n    const {acn, ad} = $p.enm.cnn_types;\r\n    let moved_fact;\r\n\r\n    if(profile instanceof ProfileConnective) {\r\n      const gen = profile.generatrix.clone({insert: false}).elongation(3000);\r\n      this._attr._rays.clear();\r\n      const b = gen.getNearestPoint(this.b);\r\n      const e = gen.getNearestPoint(this.e);\r\n      const db = b.subtract(this.b);\r\n      const de = e.subtract(this.e);\r\n      if(db.length || de.length) {\r\n        const selected = this.project.deselect_all_points(true);\r\n        if(db.subtract(de).length < consts.epsilon) {\r\n          this.move_points(de, true);\r\n        }\r\n        else {\r\n          this.select_node('b');\r\n          this.move_points(db);\r\n          this.project.deselectAll();\r\n          this.select_node('e');\r\n          this.move_points(de);\r\n        }\r\n        this.project.deselectAll();\r\n        for(const el of selected) {\r\n          el.selected = true;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if(bcnn.cnn && bcnn.profile == profile) {\r\n        if(bcnn.profile_point && !bcnn.is_x) {\r\n          const pp = profile[bcnn.profile_point];\r\n          if(!this.b.is_nearest(pp, 0)) {\r\n            if(bcnn.is_t || bcnn.cnn.cnn_type == ad) {\r\n              if(paper.Key.isDown('control')) {\r\n                console.log('control');\r\n              }\r\n              else {\r\n                if(this.b.getDistance(pp, true) < consts.sticking2) {\r\n                  this.b = pp;\r\n                }\r\n                moved_fact = true;\r\n              }\r\n            }\r\n            else {\r\n              bcnn.clear();\r\n              this._attr._rays.clear();\r\n            }\r\n          }\r\n        }\r\n        else if(acn.t.indexOf(bcnn.cnn.cnn_type) != -1 && this.do_sub_bind(profile, 'b')) {\r\n          moved_fact = true;\r\n        }\r\n      }\r\n\r\n      if(ecnn.cnn && ecnn.profile == profile) {\r\n        if(ecnn.profile_point && !ecnn.is_x) {\r\n          const pp = profile[ecnn.profile_point];\r\n          if(!this.e.is_nearest(pp, 0)) {\r\n            if(ecnn.is_t || ecnn.cnn.cnn_type == ad) {\r\n              if(paper.Key.isDown('control')) {\r\n                console.log('control');\r\n              }\r\n              else {\r\n                if(this.e.getDistance(pp, true) < consts.sticking2) {\r\n                  this.e = pp;\r\n                }\r\n                moved_fact = true;\r\n              }\r\n            }\r\n            else {\r\n              ecnn.clear();\r\n              this._attr._rays.clear();\r\n            }\r\n          }\r\n        }\r\n        else if(acn.t.indexOf(ecnn.cnn.cnn_type) != -1 && this.do_sub_bind(profile, 'e')) {\r\n          moved_fact = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(moved && moved_fact) {\r\n      const imposts = this.joined_imposts();\r\n      imposts.inner.concat(imposts.outer).forEach((impost) => {\r\n        if(moved.profiles.indexOf(impost) == -1) {\r\n          impost.profile.observer(this);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  cnn_side(profile, interior, rays) {\r\n    if(!interior) {\r\n      interior = profile.interiorPoint();\r\n    }\r\n    if(!rays) {\r\n      rays = this.rays;\r\n    }\r\n    const {Изнутри, Снаружи} = $p.enm.cnn_sides;\r\n    if(!rays || !interior || !rays.inner.length || ! rays.outer.length) {\r\n      return Изнутри;\r\n    }\r\n    return rays.inner.getNearestPoint(interior).getDistance(interior, true) <\r\n      rays.outer.getNearestPoint(interior).getDistance(interior, true) ? Изнутри : Снаружи;\r\n  }\r\n\r\n  set_generatrix_radius(height) {\r\n    const {generatrix, _row, layer, selected} = this;\r\n    const b = generatrix.firstSegment.point.clone();\r\n    const e = generatrix.lastSegment.point.clone();\r\n    const min_radius = b.getDistance(e) / 2;\r\n\r\n    generatrix.removeSegments(1);\r\n    generatrix.firstSegment.handleIn = null;\r\n    generatrix.firstSegment.handleOut = null;\r\n\r\n    let full;\r\n    if(_row.r && _row.r <= min_radius) {\r\n      _row.r = min_radius + 0.0001;\r\n      full = true;\r\n    }\r\n\r\n    if(selected) {\r\n      this.selected = false;\r\n    }\r\n\r\n    if(_row.r) {\r\n      let p = new paper.Point(b.arc_point(b.x, b.y, e.x, e.y, _row.r, _row.arc_ccw, false));\r\n      if(p.point_pos(b.x, b.y, e.x, e.y) > 0 && !_row.arc_ccw || p.point_pos(b.x, b.y, e.x, e.y) < 0 && _row.arc_ccw) {\r\n        p = new paper.Point(b.arc_point(b.x, b.y, e.x, e.y, _row.r, !_row.arc_ccw, false));\r\n      }\r\n      if(full || height) {\r\n        const start = b.add(e).divide(2);\r\n        const vector = p.subtract(start);\r\n        vector.length = (height || min_radius);\r\n        p = start.add(vector);\r\n      }\r\n      generatrix.arcTo(p, e);\r\n    }\r\n    else {\r\n      generatrix.lineTo(e);\r\n    }\r\n\r\n    layer.notify({\r\n      type: consts.move_points,\r\n      profiles: [this],\r\n      points: []\r\n    });\r\n\r\n    if(selected) {\r\n      setTimeout(() => this.selected = selected, 100);\r\n    }\r\n  }\r\n\r\n  set_inset(v, ignore_select) {\r\n\r\n    const {_row, _attr, project} = this;\r\n\r\n    if(!ignore_select && project.selectedItems.length > 1) {\r\n      project.selected_profiles(true).forEach((elm) => {\r\n        if(elm != this && elm.elm_type == this.elm_type) {\r\n          elm.set_inset(v, true);\r\n        }\r\n      });\r\n    }\r\n\r\n    if(_row.inset != v) {\r\n\r\n      _row.inset = v;\r\n\r\n      if(_attr && _attr._rays) {\r\n\r\n        _attr._rays.clear(true);\r\n        delete _attr.d0;\r\n\r\n        const b = this.cnn_point('b');\r\n        const e = this.cnn_point('e');\r\n        const {cnns} = project;\r\n\r\n        if(b.profile && b.profile_point == 'e') {\r\n          const {_rays} = b.profile._attr;\r\n          if(_rays) {\r\n            _rays.clear();\r\n            _rays.e.cnn = null;\r\n          }\r\n        }\r\n        if(e.profile && e.profile_point == 'b') {\r\n          const {_rays} = e.profile._attr;\r\n          if(_rays) {\r\n            _rays.clear();\r\n            _rays.b.cnn = null;\r\n          }\r\n        }\r\n\r\n        const {inner, outer} = this.joined_imposts();\r\n        const elm2 = this.elm;\r\n        for (const {profile} of inner.concat(outer)) {\r\n          const {b, e} = profile.rays;\r\n          b.profile == this && b.clear(true);\r\n          e.profile == this && e.clear(true);\r\n        }\r\n\r\n        for (const {_attr, elm} of this.joined_nearests()) {\r\n          _attr._rays && _attr._rays.clear(true);\r\n          _attr._nearest_cnn = null;\r\n          cnns.clear({elm1: elm, elm2});\r\n        }\r\n\r\n        this.layer.glasses(false, true).forEach((glass) => {\r\n          cnns.clear({elm1: glass.elm, elm2});\r\n        });\r\n      }\r\n\r\n      project.register_change();\r\n    }\r\n  }\r\n\r\n  set_clr(v, ignore_select) {\r\n    if(!ignore_select && this.project.selectedItems.length > 1) {\r\n      this.project.selected_profiles(true).forEach((elm) => {\r\n        if(elm != this) {\r\n          elm.set_clr(v, true);\r\n        }\r\n      });\r\n    }\r\n    BuilderElement.prototype.set_clr.call(this, v);\r\n  }\r\n\r\n  postcalc_cnn(node) {\r\n    const cnn_point = this.cnn_point(node);\r\n\r\n    cnn_point.cnn = $p.cat.cnns.elm_cnn(this, cnn_point.profile, cnn_point.cnn_types, cnn_point.cnn);\r\n\r\n    if(!cnn_point.point) {\r\n      cnn_point.point = this[node];\r\n    }\r\n\r\n    return cnn_point;\r\n  }\r\n\r\n  postcalc_inset() {\r\n    this.set_inset(this.project.check_inset({elm: this}), true);\r\n    return this;\r\n  }\r\n\r\n  default_inset(all) {\r\n    const {orientation, project, _attr, elm_type} = this;\r\n    const nearest = this.nearest(true);\r\n\r\n    if(nearest || all) {\r\n      let pos = nearest && project._dp.sys.flap_pos_by_impost && elm_type == $p.enm.elm_types.Створка ? nearest.pos : this.pos;\r\n      if(pos == $p.enm.positions.Центр) {\r\n        if(orientation == $p.enm.orientations.vert) {\r\n          pos = [pos, $p.enm.positions.ЦентрВертикаль];\r\n        }\r\n        if(orientation == $p.enm.orientations.hor) {\r\n          pos = [pos, $p.enm.positions.ЦентрГоризонталь];\r\n        }\r\n      }\r\n      this.set_inset(this.project.default_inset({\r\n        elm_type: elm_type,\r\n        pos: pos,\r\n        inset: this.inset\r\n      }), true);\r\n    }\r\n    if(nearest) {\r\n      _attr._nearest_cnn = $p.cat.cnns.elm_cnn(this, _attr._nearest, $p.enm.cnn_types.acn.ii, _attr._nearest_cnn);\r\n    }\r\n  }\r\n\r\n  path_points(cnn_point, profile_point) {\r\n\r\n    const {_attr, rays, generatrix} = this;\r\n    if(!generatrix.curves.length) {\r\n      return cnn_point;\r\n    }\r\n    const _profile = this;\r\n    const {_corns} = _attr;\r\n\r\n\r\n    function intersect_point(path1, path2, index, ipoint = cnn_point.point) {\r\n      const intersections = path1.getIntersections(path2);\r\n      let delta = Infinity, tdelta, point, tpoint;\r\n\r\n      if(intersections.length == 1) {\r\n        if(index) {\r\n          _corns[index] = intersections[0].point;\r\n        }\r\n        else {\r\n          return intersections[0].point.getDistance(ipoint, true);\r\n        }\r\n      }\r\n      else if(intersections.length > 1) {\r\n        intersections.forEach((o) => {\r\n          tdelta = o.point.getDistance(ipoint, true);\r\n          if(tdelta < delta) {\r\n            delta = tdelta;\r\n            point = o.point;\r\n          }\r\n        });\r\n        if(index) {\r\n          _corns[index] = point;\r\n        }\r\n        else {\r\n          return delta;\r\n        }\r\n      }\r\n    }\r\n\r\n    const prays = cnn_point.profile instanceof ProfileItem ?\r\n      cnn_point.profile.rays :\r\n      (cnn_point.profile instanceof Filling ? {inner: cnn_point.profile.path, outer: cnn_point.profile.path} : undefined);\r\n\r\n    const {cnn_type} = cnn_point.cnn || {};\r\n    const {cnn_types} = $p.enm;\r\n    if(cnn_point.is_t || (cnn_type == cnn_types.xx && !cnn_point.profile_point)) {\r\n\r\n      if(!cnn_point.profile.path.segments.length) {\r\n        const {_attr, row} = cnn_point.profile;\r\n        if(_attr.force_redraw) {\r\n          if(cnn_point.profile.generatrix && cnn_point.profile.generatrix.segments.length) {\r\n            cnn_point.profile.path.addSegments(cnn_point.profile.generatrix.segments);\r\n            _attr.force_redraw = false;\r\n          }\r\n          else if(cnn_point.profile.row && cnn_point.profile.row.path_data) {\r\n            cnn_point.profile.path.pathData = cnn_point.profile.row.path_data;\r\n            _attr.force_redraw = false;\r\n          }\r\n          else {\r\n            throw new Error('cycle redraw');\r\n          }\r\n        }\r\n        else {\r\n          _attr.force_redraw = true;\r\n          cnn_point.profile.redraw();\r\n          _attr.force_redraw = false;\r\n        }\r\n      }\r\n\r\n      const nodes = new Set();\r\n      let profile2;\r\n      cnn_point.point && !(this instanceof Onlay) && this.layer.profiles.forEach((profile) => {\r\n        if(profile !== this){\r\n          if(cnn_point.point.is_nearest(profile.b, true)) {\r\n            const cp = profile.rays.b.profile;\r\n            if(cp !== this) {\r\n              if(cp !== cnn_point.profile || cnn_point.profile.cnn_side(this) === cnn_point.profile.cnn_side(profile)) {\r\n                nodes.add(profile);\r\n              }\r\n            }\r\n          }\r\n          else if(cnn_point.point.is_nearest(profile.e, true)) {\r\n            const cp = profile.rays.e.profile;\r\n            if(cp !== this) {\r\n              if(cp !== cnn_point.profile || cnn_point.profile.cnn_side(this) === cnn_point.profile.cnn_side(profile)) {\r\n                nodes.add(profile);\r\n              }\r\n            }\r\n          }\r\n          else if(profile.generatrix.is_nearest(cnn_point.point, true)) {\r\n            nodes.add(profile);\r\n          }\r\n        }\r\n      });\r\n      nodes.forEach((p2) => {\r\n        if(p2 !== cnn_point.profile) {\r\n          profile2 = p2;\r\n        }\r\n      });\r\n\r\n      const side = cnn_point.profile.cnn_side(this, null, prays) === $p.enm.cnn_sides.Снаружи ? 'outer' : 'inner';\r\n\r\n      if(profile2) {\r\n        const interior = generatrix.getPointAt(generatrix.length/2)\r\n        const prays2 = profile2 && profile2.rays;\r\n        const side2 = profile2.cnn_side(this, null, prays2) === $p.enm.cnn_sides.Снаружи ? 'outer' : 'inner';\r\n        const pt1 = intersect_point(prays[side], rays.outer, 0, interior);\r\n        const pt2 = intersect_point(prays[side], rays.inner, 0, interior);\r\n        const pt3 = intersect_point(prays2[side2], rays.outer, 0, interior);\r\n        const pt4 = intersect_point(prays2[side2], rays.inner, 0, interior);\r\n\r\n        if(profile_point == 'b') {\r\n          pt1 < pt3 ? intersect_point(prays[side], rays.outer, 1) : intersect_point(prays2[side2], rays.outer, 1);\r\n          pt2 < pt4 ? intersect_point(prays[side], rays.inner, 4) : intersect_point(prays2[side2], rays.inner, 4);\r\n          intersect_point(prays2[side2], prays[side], 5);\r\n          if(rays.inner.point_pos(_corns[5]) >= 0 || rays.outer.point_pos(_corns[5]) >= 0) {\r\n            delete _corns[5];\r\n          }\r\n        }\r\n        else if(profile_point == 'e') {\r\n          pt1 < pt3 ? intersect_point(prays[side], rays.outer, 2) : intersect_point(prays2[side2], rays.outer, 2);\r\n          pt2 < pt4 ? intersect_point(prays[side], rays.inner, 3) : intersect_point(prays2[side2], rays.inner, 3);\r\n          intersect_point(prays2[side2], prays[side], 6);\r\n          if(rays.inner.point_pos(_corns[6]) >= 0 || rays.outer.point_pos(_corns[6]) >= 0) {\r\n            delete _corns[6];\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        if(profile_point == 'b') {\r\n          intersect_point(prays[side], rays.outer, 1);\r\n          intersect_point(prays[side], rays.inner, 4);\r\n          delete _corns[5];\r\n        }\r\n        else if(profile_point == 'e') {\r\n          intersect_point(prays[side], rays.outer, 2);\r\n          intersect_point(prays[side], rays.inner, 3);\r\n          delete _corns[6];\r\n        }\r\n      }\r\n\r\n    }\r\n    else if(cnn_type == cnn_types.xx) {\r\n\r\n      if(cnn_point.profile instanceof Onlay) {\r\n        const width = this.width * 0.7;\r\n        const l = profile_point == 'b' ? width : generatrix.length - width;\r\n        const p = generatrix.getPointAt(l);\r\n        const n = generatrix.getNormalAt(l).normalize(width);\r\n        const np = new paper.Path({\r\n          insert: false,\r\n          segments: [p.subtract(n), p.add(n)],\r\n        });\r\n        if(profile_point == 'b') {\r\n          intersect_point(np, rays.outer, 1);\r\n          intersect_point(np, rays.inner, 4);\r\n        }\r\n        else if(profile_point == 'e') {\r\n          intersect_point(np, rays.outer, 2);\r\n          intersect_point(np, rays.inner, 3);\r\n        }\r\n      }\r\n      else {\r\n        const cnn_point2 = cnn_point.profile.cnn_point(cnn_point.profile_point);\r\n        const profile2 = cnn_point2 && cnn_point2.profile;\r\n        if(profile2) {\r\n          const prays2 = profile2 && profile2.rays;\r\n          const pt1 = intersect_point(prays.inner, rays.outer);\r\n          const pt2 = intersect_point(prays.inner, rays.inner);\r\n          const pt3 = intersect_point(prays2.inner, rays.outer);\r\n          const pt4 = intersect_point(prays2.inner, rays.inner);\r\n\r\n          if(profile_point == 'b') {\r\n            intersect_point(prays2.inner, prays.inner, 5);\r\n            pt1 > pt3 ? intersect_point(prays.inner, rays.outer, 1) : intersect_point(prays2.inner, rays.outer, 1);\r\n            pt2 > pt4 ? intersect_point(prays.inner, rays.inner, 4) : intersect_point(prays2.inner, rays.inner, 4);\r\n          }\r\n          else if(profile_point == 'e') {\r\n            pt1 > pt3 ? intersect_point(prays.inner, rays.outer, 2) : intersect_point(prays2.inner, rays.outer, 2);\r\n            pt2 > pt4 ? intersect_point(prays.inner, rays.inner, 3) : intersect_point(prays2.inner, rays.inner, 3);\r\n            intersect_point(prays2.inner, prays.inner, 6);\r\n          }\r\n        }\r\n        else{\r\n          if(profile_point == 'b') {\r\n            delete _corns[1];\r\n            delete _corns[4];\r\n          }\r\n          else if(profile_point == 'e') {\r\n            delete _corns[2];\r\n            delete _corns[3];\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n    else if(!cnn_point.profile_point || !cnn_point.cnn || cnn_type == cnn_types.i) {\r\n      if(profile_point == 'b') {\r\n        delete _corns[1];\r\n        delete _corns[4];\r\n      }\r\n      else if(profile_point == 'e') {\r\n        delete _corns[2];\r\n        delete _corns[3];\r\n      }\r\n    }\r\n    else if(cnn_type == cnn_types.ad) {\r\n      if(profile_point == 'b') {\r\n        intersect_point(prays.outer, rays.outer, 1);\r\n        intersect_point(prays.inner, rays.inner, 4);\r\n      }\r\n      else if(profile_point == 'e') {\r\n        intersect_point(prays.outer, rays.outer, 2);\r\n        intersect_point(prays.inner, rays.inner, 3);\r\n      }\r\n\r\n    }\r\n    else if(cnn_type == cnn_types.av) {\r\n      if(this.orientation == $p.enm.orientations.vert) {\r\n        if(profile_point == 'b') {\r\n          intersect_point(prays.outer, rays.outer, 1);\r\n          intersect_point(prays.outer, rays.inner, 4);\r\n        }\r\n        else if(profile_point == 'e') {\r\n          intersect_point(prays.outer, rays.outer, 2);\r\n          intersect_point(prays.outer, rays.inner, 3);\r\n        }\r\n      }\r\n      else if(this.orientation == $p.enm.orientations.hor) {\r\n        if(profile_point == 'b') {\r\n          intersect_point(prays.inner, rays.outer, 1);\r\n          intersect_point(prays.inner, rays.inner, 4);\r\n        }\r\n        else if(profile_point == 'e') {\r\n          intersect_point(prays.inner, rays.outer, 2);\r\n          intersect_point(prays.inner, rays.inner, 3);\r\n        }\r\n      }\r\n      else {\r\n        cnn_point.err = 'orientation';\r\n      }\r\n    }\r\n    else if(cnn_type == cnn_types.ah) {\r\n      if(this.orientation == $p.enm.orientations.vert) {\r\n        if(profile_point == 'b') {\r\n          intersect_point(prays.inner, rays.outer, 1);\r\n          intersect_point(prays.inner, rays.inner, 4);\r\n        }\r\n        else if(profile_point == 'e') {\r\n          intersect_point(prays.inner, rays.outer, 2);\r\n          intersect_point(prays.inner, rays.inner, 3);\r\n        }\r\n      }\r\n      else if(this.orientation == $p.enm.orientations.hor) {\r\n        if(profile_point == 'b') {\r\n          intersect_point(prays.outer, rays.outer, 1);\r\n          intersect_point(prays.outer, rays.inner, 4);\r\n        }\r\n        else if(profile_point == 'e') {\r\n          intersect_point(prays.outer, rays.outer, 2);\r\n          intersect_point(prays.outer, rays.inner, 3);\r\n        }\r\n      }\r\n      else {\r\n        cnn_point.err = 'orientation';\r\n      }\r\n    }\r\n\r\n    if(profile_point == 'b') {\r\n      if(!_corns[1]) {\r\n        _corns[1] = this.b.add(this.generatrix.firstCurve.getNormalAt(0, true).normalize(this.d1));\r\n      }\r\n      if(!_corns[4]) {\r\n        _corns[4] = this.b.add(this.generatrix.firstCurve.getNormalAt(0, true).normalize(this.d2));\r\n      }\r\n    }\r\n    else if(profile_point == 'e') {\r\n      if(!_corns[2]) {\r\n        _corns[2] = this.e.add(this.generatrix.lastCurve.getNormalAt(1, true).normalize(this.d1));\r\n      }\r\n      if(!_corns[3]) {\r\n        _corns[3] = this.e.add(this.generatrix.lastCurve.getNormalAt(1, true).normalize(this.d2));\r\n      }\r\n    }\r\n\r\n    return cnn_point;\r\n  }\r\n\r\n  interiorPoint() {\r\n    const {generatrix, d1, d2} = this;\r\n    const igen = generatrix.curves.length == 1 ? generatrix.firstCurve.getPointAt(0.5, true) : (\r\n      generatrix.curves.length == 2 ? generatrix.firstCurve.point2 : generatrix.curves[1].point2\r\n    );\r\n    const normal = generatrix.getNormalAt(generatrix.getOffsetOf(igen));\r\n    return igen.add(normal.multiply(d1).add(normal.multiply(d2)).divide(2));\r\n  }\r\n\r\n\r\n  select_corn(point) {\r\n\r\n    const res = this.corns(point);\r\n\r\n    this.path.segments.forEach((segm) => {\r\n      if(segm.point.is_nearest(res.point)) {\r\n        res.segm = segm;\r\n      }\r\n    });\r\n\r\n    if(!res.segm && res.point == this.b) {\r\n      res.segm = this.generatrix.firstSegment;\r\n    }\r\n\r\n    if(!res.segm && res.point == this.e) {\r\n      res.segm = this.generatrix.lastSegment;\r\n    }\r\n\r\n    if(res.segm && res.dist < consts.sticking0) {\r\n      this.project.deselectAll();\r\n      res.segm.selected = true;\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  is_linear() {\r\n    return this.generatrix.is_linear();\r\n  }\r\n\r\n  is_nearest(p) {\r\n    return (this.b.is_nearest(p.b, true) || this.generatrix.is_nearest(p.b)) &&\r\n      (this.e.is_nearest(p.e, true) || this.generatrix.is_nearest(p.e));\r\n  }\r\n\r\n  is_collinear(p) {\r\n    let angl = p.e.subtract(p.b).getDirectedAngle(this.e.subtract(this.b));\r\n    if(angl < -180) {\r\n      angl += 180;\r\n    }\r\n    return Math.abs(angl) < consts.orientation_delta;\r\n  }\r\n\r\n  joined_nearests() {\r\n    return [];\r\n  }\r\n\r\n  redraw() {\r\n    const bcnn = this.postcalc_cnn('b');\r\n    const ecnn = this.postcalc_cnn('e');\r\n    const {path, generatrix, rays} = this;\r\n\r\n    this.path_points(bcnn, 'b');\r\n    this.path_points(ecnn, 'e');\r\n\r\n    path.removeSegments();\r\n\r\n    this.corns(5) && path.add(this.corns(5));\r\n    path.add(this.corns(1));\r\n\r\n    if(generatrix.is_linear()) {\r\n      path.add(this.corns(2));\r\n      this.corns(6) && path.add(this.corns(6));\r\n      path.add(this.corns(3));\r\n    }\r\n    else {\r\n\r\n      let tpath = new paper.Path({insert: false});\r\n      let offset1 = rays.outer.getNearestLocation(this.corns(1)).offset;\r\n      let offset2 = rays.outer.getNearestLocation(this.corns(2)).offset;\r\n      let step = (offset2 - offset1) / 50;\r\n\r\n      for (let i = offset1 + step; i < offset2; i += step) {\r\n        tpath.add(rays.outer.getPointAt(i));\r\n      }\r\n      tpath.simplify(0.8);\r\n      path.join(tpath);\r\n      path.add(this.corns(2));\r\n      this.corns(6) && path.add(this.corns(6));\r\n      path.add(this.corns(3));\r\n\r\n      tpath = new paper.Path({insert: false});\r\n      offset1 = rays.inner.getNearestLocation(this.corns(3)).offset;\r\n      offset2 = rays.inner.getNearestLocation(this.corns(4)).offset;\r\n      step = (offset2 - offset1) / 50;\r\n      for (let i = offset1 + step; i < offset2; i += step) {\r\n        tpath.add(rays.inner.getPointAt(i));\r\n      }\r\n      tpath.simplify(0.8);\r\n      path.join(tpath);\r\n\r\n    }\r\n\r\n    path.add(this.corns(4));\r\n    path.closePath();\r\n    path.reduce();\r\n\r\n    this.children.forEach((elm) => {\r\n      if(elm instanceof ProfileAddl) {\r\n        elm.observer(elm.parent);\r\n        elm.redraw();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  mark_direction() {\r\n    const {generatrix, rays: {inner, outer}} = this;\r\n    const gb = generatrix.getPointAt(130);\r\n    const ge = generatrix.getPointAt(230);\r\n    const ib = inner.getNearestPoint(gb);\r\n    const ie = inner.getNearestPoint(ge);\r\n    const ob = outer.getNearestPoint(gb);\r\n    const oe = outer.getNearestPoint(ge);\r\n\r\n    const b = ib.add(ob).divide(2);\r\n    const e = ie.add(oe).divide(2);\r\n    const c = b.add(e).divide(2);\r\n    const n = e.subtract(b).rotate(90).normalize(10);\r\n    const c1 = c.add(n);\r\n    const c2 = c.subtract(n);\r\n\r\n    const path = new paper.Path({\r\n      parent: this,\r\n      segments: [b, e, c1, c2, e],\r\n      strokeColor: 'darkblue',\r\n      strokeCap: 'round',\r\n      strokeWidth: 2,\r\n      strokeScaling: false,\r\n    })\r\n  }\r\n\r\n  corns(corn) {\r\n    const {_corns} = this._attr;\r\n    if(typeof corn == 'number') {\r\n      return corn < 10 ? _corns[corn] : this.generatrix.getPointAt(corn);\r\n    }\r\n    else if(corn instanceof paper.Point) {\r\n\r\n      const res = {dist: Infinity, profile: this};\r\n      let dist;\r\n\r\n      for (let i = 1; i < 5; i++) {\r\n        dist = _corns[i].getDistance(corn);\r\n        if(dist < res.dist) {\r\n          res.dist = dist;\r\n          res.point = _corns[i];\r\n          res.point_name = i;\r\n        }\r\n      }\r\n\r\n      const {hhi} = this;\r\n      if(hhi) {\r\n        dist = hhi.getDistance(corn);\r\n        if(dist <= res.dist) {\r\n          res.dist = hhi.getDistance(corn);\r\n          res.point = hhi;\r\n          res.point_name = 'hhi';\r\n        }\r\n        const {hho} = this;\r\n        dist = hho.getDistance(corn);\r\n        if(dist <= res.dist) {\r\n          res.dist = hho.getDistance(corn);\r\n          res.point = hho;\r\n          res.point_name = 'hho';\r\n        }\r\n      }\r\n\r\n      dist = this.b.getDistance(corn);\r\n      if(dist <= res.dist) {\r\n        res.dist = this.b.getDistance(corn);\r\n        res.point = this.b;\r\n        res.point_name = 'b';\r\n      }\r\n      else {\r\n        dist = this.e.getDistance(corn);\r\n        if(dist <= res.dist) {\r\n          res.dist = this.e.getDistance(corn);\r\n          res.point = this.e;\r\n          res.point_name = 'e';\r\n        }\r\n      }\r\n\r\n      return res;\r\n    }\r\n    else {\r\n      const index = corn.substr(corn.length - 1, 1);\r\n      const axis = corn.substr(corn.length - 2, 1);\r\n      return _corns[index][axis];\r\n    }\r\n  }\r\n\r\n  has_cnn(profile, point) {\r\n\r\n    let t = this;\r\n    while (t.parent instanceof ProfileItem) {\r\n      t = t.parent;\r\n    }\r\n    while (profile.parent instanceof ProfileItem) {\r\n      profile = profile.parent;\r\n    }\r\n\r\n    if(\r\n      (t.b.is_nearest(point, true) && t.cnn_point('b').profile == profile) ||\r\n      (t.e.is_nearest(point, true) && t.cnn_point('e').profile == profile) ||\r\n      (profile.b.is_nearest(point, true) && profile.cnn_point('b').profile == t) ||\r\n      (profile.e.is_nearest(point, true) && profile.cnn_point('e').profile == t)\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  check_distance(element, res, point, check_only) {\r\n    return this.project.check_distance(element, this, res, point, check_only);\r\n  }\r\n\r\n  max_right_angle(ares) {\r\n    const {generatrix} = this;\r\n    let has_a = true;\r\n    ares.forEach((res) => {\r\n      res._angle = generatrix.angle_to(res.profile.generatrix, res.point);\r\n      if(res._angle > 180) {\r\n        res._angle = 360 - res._angle;\r\n      }\r\n    });\r\n    ares.sort((a, b) => {\r\n      const aa = Math.abs(a._angle - 90);\r\n      const ab = Math.abs(b._angle - 90);\r\n      return aa - ab;\r\n    });\r\n    return has_a;\r\n  }\r\n\r\n  show_number(show = true) {\r\n    let {elm_number} = this.children;\r\n    if(!show) {\r\n      return elm_number && elm_number.remove();\r\n    }\r\n    if(elm_number) {\r\n      elm_number.position = this.path.interiorPoint;\r\n    }\r\n    else {\r\n      elm_number = new paper.PointText({\r\n        parent: this,\r\n        guide: true,\r\n        name: 'elm_number',\r\n        justification: 'center',\r\n        fillColor: 'darkblue',\r\n        fontFamily: consts.font_family,\r\n        fontSize: consts.font_size * 1.1,\r\n        fontWeight: 'bold',\r\n        content: this.elm,\r\n        position: this.interiorPoint().add(this.generatrix.getTangentAt(this.generatrix.length / 1).multiply(consts.font_size * 2)),\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nclass Profile extends ProfileItem {\r\n\r\n  constructor(attr) {\r\n\r\n    const fromCoordinates = !!attr.row;\r\n\r\n    super(attr);\r\n\r\n    if(this.parent) {\r\n      const {project: {_scope, ox}, observer} = this;\r\n\r\n      this.observer = observer.bind(this);\r\n      _scope.eve.on(consts.move_points, this.observer);\r\n\r\n      this.layer.on_insert_elm(this);\r\n\r\n      if(fromCoordinates){\r\n        const {cnstr, elm} = attr.row;\r\n        ox.coordinates.find_rows({cnstr, parent: {in: [elm, -elm]}, elm_type: $p.enm.elm_types.Добор}, (row) => new ProfileAddl({row, parent: this}));\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  get d0() {\r\n    const {_attr} = this;\r\n    if(!_attr.hasOwnProperty('d0')) {\r\n      _attr.d0 = this.offset;\r\n      const nearest = this.nearest();\r\n      if(nearest) {\r\n        _attr.d0 -= nearest.d2 + (_attr._nearest_cnn ? _attr._nearest_cnn.size(this) : 20);\r\n      }\r\n    }\r\n    return _attr.d0;\r\n  }\r\n\r\n  get elm_type() {\r\n    const {_rays, _nearest} = this._attr;\r\n\r\n    if(_rays && !_nearest && (_rays.b.is_tt || _rays.e.is_tt)) {\r\n      return $p.enm.elm_types.Импост;\r\n    }\r\n\r\n    if(this.layer.parent instanceof Contour) {\r\n      return $p.enm.elm_types.Створка;\r\n    }\r\n\r\n    return $p.enm.elm_types.Рама;\r\n  }\r\n\r\n  get pos() {\r\n    const by_side = this.layer.profiles_by_side();\r\n    if(by_side.top == this) {\r\n      return $p.enm.positions.Верх;\r\n    }\r\n    if(by_side.bottom == this) {\r\n      return $p.enm.positions.Низ;\r\n    }\r\n    if(by_side.left == this) {\r\n      return $p.enm.positions.Лев;\r\n    }\r\n    if(by_side.right == this) {\r\n      return $p.enm.positions.Прав;\r\n    }\r\n    return $p.enm.positions.Центр;\r\n  }\r\n\r\n  nearest(ign_cnn) {\r\n\r\n    const {b, e, _attr, layer, project} = this;\r\n    let {_nearest, _nearest_cnn} = _attr;\r\n\r\n    if(!ign_cnn && this.inset.empty()) {\r\n      ign_cnn = true;\r\n    }\r\n\r\n    const check_nearest = (elm) => {\r\n      if(!(elm instanceof Profile || elm instanceof ProfileConnective) || !elm.isInserted()) {\r\n        return;\r\n      }\r\n      let {generatrix} = elm;\r\n      if(elm.elm_type === $p.enm.elm_types.Импост) {\r\n        const pb = elm.cnn_point('b').profile;\r\n        const pe = elm.cnn_point('e').profile;\r\n        if(pb && pb.nearest(true) || pe && pe.nearest(true)) {\r\n          generatrix = generatrix.clone({insert: false}).elongation(100);\r\n        }\r\n      }\r\n      let is_nearest = [];\r\n      if(generatrix.is_nearest(b)) {\r\n        is_nearest.push(b);\r\n      }\r\n      if(generatrix.is_nearest(e)) {\r\n        is_nearest.push(e);\r\n      }\r\n      if(is_nearest.length < 2 && elm instanceof ProfileConnective) {\r\n        if(this.generatrix.is_nearest(elm.b)) {\r\n          if(is_nearest.every((point) => !point.is_nearest(elm.b))) {\r\n            is_nearest.push(elm.b);\r\n          }\r\n        }\r\n        if(this.generatrix.is_nearest(elm.e)) {\r\n          if(is_nearest.every((point) => !point.is_nearest(elm.e))) {\r\n            is_nearest.push(elm.e);\r\n          }\r\n        }\r\n      }\r\n\r\n      if(is_nearest.length > 1) {\r\n        if(!ign_cnn) {\r\n          if(!_nearest_cnn) {\r\n            _nearest_cnn = project.elm_cnn(this, elm);\r\n          }\r\n          let outer;\r\n          if(elm.is_linear()) {\r\n            outer = Math.abs(elm.angle_hor - this.angle_hor) > 60;\r\n          }\r\n          else {\r\n            const ob = generatrix.getOffsetOf(generatrix.getNearestPoint(b));\r\n            const oe = generatrix.getOffsetOf(generatrix.getNearestPoint(e));\r\n            outer = ob > oe;\r\n          }\r\n          _attr._nearest_cnn = $p.cat.cnns.elm_cnn(this, elm, $p.enm.cnn_types.acn.ii, _nearest_cnn, false, outer);\r\n        }\r\n        _attr._nearest = elm;\r\n        return true;\r\n      }\r\n\r\n      _attr._nearest = null;\r\n      _attr._nearest_cnn = null;\r\n    };\r\n\r\n    const find_nearest = (children) => children.some((elm) => {\r\n      if(_nearest == elm || !elm.generatrix) {\r\n        return;\r\n      }\r\n      if(check_nearest(elm)) {\r\n        return true;\r\n      }\r\n      else {\r\n        _attr._nearest = null;\r\n      }\r\n    });\r\n\r\n    if(layer && !check_nearest(_attr._nearest)) {\r\n      if(layer.parent) {\r\n        find_nearest(layer.parent.profiles);\r\n      }\r\n      else {\r\n        find_nearest(project.l_connective.children);\r\n      }\r\n    }\r\n\r\n    return _attr._nearest;\r\n  }\r\n\r\n  joined_imposts(check_only) {\r\n\r\n    const {rays, generatrix, layer} = this;\r\n    const tinner = [];\r\n    const touter = [];\r\n\r\n    const candidates = {b: [], e: []};\r\n\r\n    const {Снаружи} = $p.enm.cnn_sides;\r\n    const add_impost = (ip, curr, point) => {\r\n      const res = {point: generatrix.getNearestPoint(point), profile: curr};\r\n      if(this.cnn_side(curr, ip, rays) === Снаружи) {\r\n        touter.push(res);\r\n      }\r\n      else {\r\n        tinner.push(res);\r\n      }\r\n    };\r\n\r\n    if(layer.profiles.some((curr) => {\r\n        if(curr != this) {\r\n          for(const pname of ['b', 'e']) {\r\n            const cpoint = curr.rays[pname];\r\n            if(cpoint.profile == this && cpoint.cnn) {\r\n              if(!cpoint.profile_point) {\r\n                if(check_only) {\r\n                  return true;\r\n                }\r\n                add_impost(curr.corns(1), curr, cpoint.point);\r\n              }\r\n              else {\r\n                candidates[pname].push(curr.corns(1));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })) {\r\n      return true;\r\n    }\r\n\r\n    ['b', 'e'].forEach((node) => {\r\n      if(candidates[node].length > 1) {\r\n        candidates[node].some((ip) => {\r\n          if(this.cnn_side(null, ip, rays) === Снаружи) {\r\n            this.rays[node].is_cut = true;\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return check_only ? false : {inner: tinner, outer: touter};\r\n\r\n  }\r\n\r\n  joined_nearests() {\r\n    const res = [];\r\n\r\n    this.layer.contours.forEach((contour) => {\r\n      contour.profiles.forEach((profile) => {\r\n        if(profile.nearest(true) == this) {\r\n          res.push(profile);\r\n        }\r\n      });\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  cnn_point(node, point) {\r\n    const {project, parent, rays} = this;\r\n    const res = rays[node];\r\n    const {cnn, profile, profile_point} = res;\r\n\r\n    if(!point) {\r\n      point = this[node];\r\n    }\r\n\r\n    if(profile && profile.children.length) {\r\n      if(!project.has_changes()) {\r\n        return res;\r\n      }\r\n      if(this.check_distance(profile, res, point, true) === false || res.distance < consts.epsilon) {\r\n        return res;\r\n      }\r\n    }\r\n\r\n    res.clear();\r\n    if(parent) {\r\n      const {allow_open_cnn} = project._dp.sys;\r\n      const ares = [];\r\n\r\n      for(const profile of parent.profiles) {\r\n        if(this.check_distance(profile, res, point, false) === false || (res.distance < ((res.is_t || !res.is_l) ? consts.sticking : consts.sticking_l))) {\r\n          ares.push({\r\n            profile_point: res.profile_point,\r\n            profile: profile,\r\n            cnn_types: res.cnn_types,\r\n            point: res.point\r\n          });\r\n          res.clear();\r\n        }\r\n      }\r\n\r\n      if(ares.length === 1) {\r\n        res._mixin(ares[0]);\r\n      }\r\n      else if(ares.length >= 2) {\r\n        if(this.max_right_angle(ares)) {\r\n          res._mixin(ares[0]);\r\n          if(cnn && res.cnn_types && res.cnn_types.indexOf(cnn.cnn_type) != -1) {\r\n            res.cnn = cnn;\r\n          }\r\n        }\r\n        else {\r\n          res.clear();\r\n        }\r\n        res.is_cut = true;\r\n      }\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  t_parent(be) {\r\n    if(this.elm_type != $p.enm.elm_types.Импост) {\r\n      return this;\r\n    }\r\n    const {_rays} = this._attr;\r\n    if(be === 'b') {\r\n      return _rays && _rays.b.profile;\r\n    }\r\n    if(be === 'e') {\r\n      return _rays && _rays.e.profile;\r\n    }\r\n    return _rays && (_rays.b.profile || _rays.e.profile);\r\n  }\r\n}\r\n\r\nEditorInvisible.Profile = Profile;\r\nEditorInvisible.ProfileItem = ProfileItem;\r\nEditorInvisible.ProfileRays = ProfileRays;\r\nEditorInvisible.CnnPoint = CnnPoint;\r\n\r\n\r\n\r\nclass ProfileAddl extends ProfileItem {\r\n\r\n  constructor(attr) {\r\n\r\n    const fromCoordinates = !!attr.row;\r\n\r\n    super(attr);\r\n\r\n    const {project, _attr, _row} = this;\r\n\r\n    _attr.generatrix.strokeWidth = 0;\r\n\r\n    if(!attr.side && _row.parent < 0){\r\n      attr.side = \"outer\";\r\n    }\r\n\r\n    _attr.side = attr.side || \"inner\";\r\n\r\n    if(!_row.parent){\r\n      _row.parent = this.parent.elm;\r\n      if(this.outer){\r\n        _row.parent = -_row.parent;\r\n      }\r\n    }\r\n\r\n    if(fromCoordinates){\r\n      const {cnstr, elm} = attr.row;\r\n      project.ox.coordinates.find_rows({cnstr, parent: {in: [elm, -elm]}, elm_type: $p.enm.elm_types.Добор}, (row) => new ProfileAddl({row, parent: this}));\r\n    }\r\n\r\n  }\r\n\r\n  get d0() {\r\n    this.nearest();\r\n    return this._attr._nearest_cnn ? -this._attr._nearest_cnn.size(this) : 0;\r\n  }\r\n\r\n  get outer() {\r\n    return this._attr.side == \"outer\";\r\n  }\r\n\r\n  get elm_type() {\r\n    return $p.enm.elm_types.Добор;\r\n  }\r\n\r\n  nearest() {\r\n    const {_attr, parent, project} = this;\r\n    const _nearest_cnn = _attr._nearest_cnn || project.elm_cnn(this, parent);\r\n    _attr._nearest_cnn = $p.cat.cnns.elm_cnn(this, parent, $p.enm.cnn_types.acn.ii, _nearest_cnn, true);\r\n    return parent;\r\n  }\r\n\r\n  cnn_point(node, point) {\r\n\r\n    const res = this.rays[node];\r\n\r\n    const check_distance = (elm, with_addl) => {\r\n\r\n        if(elm == this || elm == this.parent){\r\n          return;\r\n        }\r\n\r\n        const gp = elm.generatrix.getNearestPoint(point);\r\n        let distance;\r\n\r\n        if(gp && (distance = gp.getDistance(point)) < consts.sticking){\r\n          if(distance <= res.distance){\r\n            res.point = gp;\r\n            res.distance = distance;\r\n            res.profile = elm;\r\n          }\r\n        }\r\n\r\n        if(with_addl){\r\n          elm.getItems({class: ProfileAddl, parent: elm}).forEach((addl) => {\r\n            check_distance(addl, with_addl);\r\n          });\r\n        }\r\n\r\n      };\r\n\r\n    if(!point){\r\n      point = this[node];\r\n    }\r\n\r\n    if(res.profile && res.profile.children.length){\r\n      check_distance(res.profile);\r\n      if(res.distance < consts.sticking){\r\n        return res;\r\n      }\r\n    }\r\n\r\n    res.clear();\r\n    res.cnn_types = $p.enm.cnn_types.acn.t;\r\n\r\n    this.layer.profiles.forEach((addl) => check_distance(addl, true));\r\n\r\n    return res;\r\n  }\r\n\r\n  path_points(cnn_point, profile_point) {\r\n\r\n    const {generatrix, rays} = this;\r\n    const interior = generatrix.getPointAt(generatrix.length/2);\r\n\r\n    const _profile = this;\r\n    const _corns = this._attr._corns;\r\n\r\n    if(!generatrix.curves.length){\r\n      return cnn_point;\r\n    }\r\n\r\n    function intersect_point(path1, path2, index){\r\n      var intersections = path1.getIntersections(path2),\r\n        delta = Infinity, tdelta, point, tpoint;\r\n\r\n      if(intersections.length == 1)\r\n        if(index)\r\n          _corns[index] = intersections[0].point;\r\n        else\r\n          return intersections[0].point.getDistance(cnn_point.point, true);\r\n\r\n      else if(intersections.length > 1){\r\n        intersections.forEach((o) => {\r\n          tdelta = o.point.getDistance(cnn_point.point, true);\r\n          if(tdelta < delta){\r\n            delta = tdelta;\r\n            point = o.point;\r\n          }\r\n        });\r\n        if(index)\r\n          _corns[index] = point;\r\n        else\r\n          return delta;\r\n      }\r\n    }\r\n\r\n    const {profile} = cnn_point;\r\n    if(profile){\r\n      const prays = profile.rays;\r\n\r\n      if(!profile.path.segments.length){\r\n        profile.redraw();\r\n      }\r\n\r\n      if(profile_point == \"b\"){\r\n        if(profile.cnn_side(this, interior, prays) == $p.enm.cnn_sides.Снаружи){\r\n          intersect_point(prays.outer, rays.outer, 1);\r\n          intersect_point(prays.outer, rays.inner, 4);\r\n        }\r\n        else{\r\n          intersect_point(prays.inner, rays.outer, 1);\r\n          intersect_point(prays.inner, rays.inner, 4);\r\n        }\r\n      }\r\n      else if(profile_point == \"e\"){\r\n        if(profile.cnn_side(this, interior, prays) == $p.enm.cnn_sides.Снаружи){\r\n          intersect_point(prays.outer, rays.outer, 2);\r\n          intersect_point(prays.outer, rays.inner, 3);\r\n        }\r\n        else{\r\n          intersect_point(prays.inner, rays.outer, 2);\r\n          intersect_point(prays.inner, rays.inner, 3);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(profile_point == \"b\"){\r\n      if(!_corns[1]){\r\n        _corns[1] = this.b.add(generatrix.firstCurve.getNormalAt(0, true).normalize(this.d1));\r\n      }\r\n      if(!_corns[4]){\r\n        _corns[4] = this.b.add(generatrix.firstCurve.getNormalAt(0, true).normalize(this.d2));\r\n      }\r\n    }\r\n    else if(profile_point == \"e\"){\r\n      if(!_corns[2]){\r\n        _corns[2] = this.e.add(generatrix.lastCurve.getNormalAt(1, true).normalize(this.d1));\r\n      }\r\n      if(!_corns[3]){\r\n        _corns[3] = this.e.add(generatrix.lastCurve.getNormalAt(1, true).normalize(this.d2));\r\n      }\r\n    }\r\n    return cnn_point;\r\n  }\r\n\r\n  do_bind(p, bcnn, ecnn, moved) {\r\n\r\n    let imposts, moved_fact;\r\n\r\n    const bind_node = (node, cnn) => {\r\n\r\n        if(!cnn.profile){\r\n          return;\r\n        }\r\n\r\n        const gen = this.outer ? this.parent.rays.outer : this.parent.rays.inner;\r\n        const mpoint = cnn.profile.generatrix.intersect_point(gen, cnn.point, \"nearest\");\r\n        if(!mpoint.is_nearest(this[node])){\r\n          this[node] = mpoint;\r\n          moved_fact = true;\r\n        }\r\n\r\n      };\r\n\r\n    if(this.parent == p){\r\n      bind_node(\"b\", bcnn);\r\n      bind_node(\"e\", ecnn);\r\n    }\r\n\r\n    if(bcnn.cnn && bcnn.profile == p){\r\n\r\n      bind_node(\"b\", bcnn);\r\n\r\n    }\r\n    if(ecnn.cnn && ecnn.profile == p){\r\n\r\n      bind_node(\"e\", ecnn);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  glass_segment() {\r\n\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.ProfileAddl = ProfileAddl;\r\n\r\nclass ProfileConnective extends ProfileItem {\r\n\r\n  get d0() {\r\n    return 0;\r\n  }\r\n\r\n  get elm_type() {\r\n    return $p.enm.elm_types.Соединитель;\r\n  }\r\n\r\n  cnn_point(node) {\r\n    return this.rays[node];\r\n  }\r\n\r\n  move_points(delta, all_points, start_point) {\r\n\r\n    const nearests = this.joined_nearests();\r\n    const moved = {profiles: []};\r\n\r\n    super.move_points(delta, all_points, start_point);\r\n\r\n    if(all_points !== false && !paper.Key.isDown('control')){\r\n      nearests.forEach((np) => {\r\n        np.do_bind(this, null, null, moved);\r\n        ['b', 'e'].forEach((node) => {\r\n          const cp = np.cnn_point(node);\r\n          if(cp.profile){\r\n            cp.profile.do_bind(np, cp.profile.cnn_point(\"b\"), cp.profile.cnn_point(\"e\"), moved);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    this.project.register_change();\r\n  }\r\n\r\n  joined_nearests() {\r\n\r\n    const res = [];\r\n\r\n    this.project.contours.forEach((contour) => {\r\n      contour.profiles.forEach((profile) => {\r\n        if(profile.nearest(true) === this){\r\n          res.push(profile);\r\n        }\r\n      });\r\n    });\r\n\r\n    return res;\r\n\r\n  }\r\n\r\n  nearest() {\r\n    return null;\r\n  }\r\n\r\n  save_coordinates() {\r\n\r\n    if(!this._attr.generatrix){\r\n      return;\r\n    }\r\n\r\n    const {_row, generatrix} = this;\r\n\r\n    _row.x1 = this.x1;\r\n    _row.y1 = this.y1;\r\n    _row.x2 = this.x2;\r\n    _row.y2 = this.y2;\r\n    _row.nom = this.nom;\r\n    _row.path_data = generatrix.pathData;\r\n    _row.parent = 0;\r\n\r\n    _row.len = this.length;\r\n\r\n    _row.angle_hor = this.angle_hor;\r\n\r\n    _row.alp1 = Math.round((this.corns(4).subtract(this.corns(1)).angle - generatrix.getTangentAt(0).angle) * 10) / 10;\r\n    if(_row.alp1 < 0){\r\n      _row.alp1 = _row.alp1 + 360;\r\n    }\r\n\r\n    _row.alp2 = Math.round((generatrix.getTangentAt(generatrix.length).angle - this.corns(2).subtract(this.corns(3)).angle) * 10) / 10;\r\n    if(_row.alp2 < 0){\r\n      _row.alp2 = _row.alp2 + 360;\r\n    }\r\n\r\n    _row.elm_type = this.elm_type;\r\n\r\n  }\r\n\r\n  remove() {\r\n    this.joined_nearests().forEach((rama) => {\r\n\r\n      const {inner, outer} = rama.joined_imposts();\r\n      for (const {profile} of inner.concat(outer)) {\r\n        profile.rays.clear();\r\n      }\r\n      for (const {_attr, elm} of rama.joined_nearests()) {\r\n        _attr._rays && _attr._rays.clear();\r\n      }\r\n\r\n      const {_attr, layer} = rama;\r\n      _attr._rays && _attr._rays.clear();\r\n      if(_attr._nearest){\r\n        _attr._nearest = null;\r\n      }\r\n      if(_attr._nearest_cnn){\r\n        _attr._nearest_cnn = null;\r\n      }\r\n\r\n      layer && layer.notify && layer.notify({profiles: [rama], points: []}, consts.move_points);\r\n\r\n    });\r\n    super.remove();\r\n  }\r\n\r\n}\r\n\r\n\r\nclass ConnectiveLayer extends paper.Layer {\r\n\r\n  redraw() {\r\n    this.children.forEach((elm) => elm.redraw());\r\n  }\r\n\r\n  save_coordinates() {\r\n    this.children.forEach((elm) => elm.save_coordinates && elm.save_coordinates());\r\n  }\r\n\r\n  glasses() {\r\n    return [];\r\n  }\r\n\r\n  get profiles() {\r\n    return this.children.filter((elm) => elm instanceof Profile);\r\n  }\r\n\r\n  notify(obj, type = 'update') {\r\n  }\r\n}\r\n\r\nEditorInvisible.ProfileConnective = ProfileConnective;\r\nEditorInvisible.ConnectiveLayer = ConnectiveLayer;\r\n\r\nclass BaseLine extends ProfileItem {\r\n\r\n  constructor(attr) {\r\n    super(attr);\r\n    this.parent = this.project.l_connective;\r\n    Object.assign(this.generatrix, {\r\n      strokeColor: 'brown',\r\n      fillColor: new paper.Color(1, 0.1),\r\n      strokeScaling: false,\r\n      strokeWidth: 2,\r\n      dashOffset: 4,\r\n      dashArray: [4, 4],\r\n    })\r\n  }\r\n\r\n  get d0() {\r\n    return 0;\r\n  }\r\n\r\n  get d1() {\r\n    return 0;\r\n  }\r\n\r\n  get d2() {\r\n    return 0;\r\n  }\r\n\r\n  get path() {\r\n    return this.generatrix;\r\n  }\r\n  set path(v) {\r\n  }\r\n\r\n  setSelection(selection) {\r\n    paper.Item.prototype.setSelection.call(this, selection);\r\n  }\r\n\r\n  get oxml() {\r\n    return BaseLine.oxml;\r\n  }\r\n\r\n  get elm_type() {\r\n    return $p.enm.elm_types.Линия;\r\n  }\r\n\r\n  get length() {\r\n    return this.generatrix.length;\r\n  }\r\n\r\n  nearest() {\r\n    return null;\r\n  }\r\n\r\n  joined_nearests() {\r\n\r\n    const res = [];\r\n\r\n    this.project.contours.forEach((contour) => {\r\n      contour.profiles.forEach((profile) => {\r\n        if(profile.nearest(true) === this){\r\n          res.push(profile);\r\n        }\r\n      });\r\n    });\r\n\r\n    return res;\r\n\r\n  }\r\n\r\n  joined_imposts(check_only) {\r\n    const tinner = [];\r\n    const touter = [];\r\n    return check_only ? false : {inner: tinner, outer: touter};\r\n  }\r\n\r\n  save_coordinates() {\r\n\r\n    if(!this._attr.generatrix){\r\n      return;\r\n    }\r\n\r\n    const {_row} = this;\r\n\r\n    _row.x1 = this.x1;\r\n    _row.y1 = this.y1;\r\n    _row.x2 = this.x2;\r\n    _row.y2 = this.y2;\r\n    _row.path_data = this.generatrix.pathData;\r\n    _row.parent = this.parent.elm;\r\n    _row.len = this.length;\r\n    _row.angle_hor = this.angle_hor;\r\n    _row.elm_type = this.elm_type;\r\n  }\r\n\r\n  cnn_point(node) {\r\n    return this.rays[node];\r\n  }\r\n\r\n  redraw() {\r\n\r\n  }\r\n\r\n}\r\n\r\nBaseLine.oxml = {\r\n  ' ': [\r\n    {id: 'info', path: 'o.info', type: 'ro'},\r\n  ],\r\n  'Начало': ['x1', 'y1'],\r\n  'Конец': ['x2', 'y2']\r\n};\r\n\r\nEditorInvisible.BaseLine = BaseLine;\r\n\r\n\r\nclass Onlay extends ProfileItem {\r\n\r\n  constructor(attr) {\r\n    super(attr);\r\n    if(this.parent) {\r\n      const {project: {_scope}, observer} = this;\r\n      this.observer = observer.bind(this);\r\n      _scope.eve.on(consts.move_points, this.observer);\r\n    }\r\n    if(attr.region) {\r\n      this.region = attr.region;\r\n    }\r\n  }\r\n\r\n  get d0() {\r\n    return 0;\r\n  }\r\n\r\n  get elm_type() {\r\n    return $p.enm.elm_types.Раскладка;\r\n  }\r\n\r\n  get region() {\r\n    const {_row, parent} = this;\r\n    let region = _row && _row.region;\r\n    return region && !region.empty() ? region : $p.enm.lay_regions.r2;\r\n  }\r\n\r\n  set region(v) {\r\n    this.set_region(v);\r\n  }\r\n\r\n  set_region(v, ignore_select) {\r\n    if(!ignore_select) {\r\n      const {selectedItems} = this.project;\r\n      if(selectedItems.length > 1) {\r\n        selectedItems.forEach((elm) => {\r\n          if(elm instanceof Onlay && elm != this) {\r\n            elm.set_region(v, true);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    const {_row} = this;\r\n    if(_row && _row.region !== v) {\r\n      _row.region = v;\r\n    }\r\n  }\r\n\r\n  nearest() {\r\n\r\n  }\r\n\r\n  joined_imposts(check_only) {\r\n\r\n    const {rays, generatrix, parent} = this;\r\n    const tinner = [];\r\n    const touter = [];\r\n\r\n    const candidates = {b: [], e: []};\r\n\r\n    const add_impost = (ip, curr, point) => {\r\n      const res = {point: generatrix.getNearestPoint(point), profile: curr};\r\n      if(this.cnn_side(curr, ip, rays) === $p.enm.cnn_sides.Снаружи) {\r\n        touter.push(res);\r\n      }\r\n      else {\r\n        tinner.push(res);\r\n      }\r\n    };\r\n\r\n    if(parent.imposts.some((curr) => {\r\n        if(curr != this) {\r\n          for(const pn of ['b', 'e']) {\r\n            const p = curr.cnn_point(pn);\r\n            if(p.profile == this && p.cnn) {\r\n\r\n              if(p.cnn.cnn_type == $p.enm.cnn_types.t) {\r\n                if(check_only) {\r\n                  return true;\r\n                }\r\n                add_impost(curr.corns(1), curr, p.point);\r\n              }\r\n              else {\r\n                candidates[pn].push(curr.corns(1));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })) {\r\n      return true;\r\n    }\r\n\r\n    ['b', 'e'].forEach((node) => {\r\n      if(candidates[node].length > 1) {\r\n        candidates[node].some((ip) => {\r\n          if(this.cnn_side(null, ip, rays) == $p.enm.cnn_sides.Снаружи) {\r\n            this.cnn_point(node).is_cut = true;\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return check_only ? false : {inner: tinner, outer: touter};\r\n\r\n  }\r\n\r\n  save_coordinates() {\r\n\r\n    if(!this._attr.generatrix){\r\n      return;\r\n    }\r\n\r\n    const {_row, project, rays, generatrix} = this;\r\n    const {cnns} = project;\r\n    const {b, e} = rays;\r\n    const row_b = cnns.add({\r\n      elm1: _row.elm,\r\n      node1: \"b\",\r\n      cnn: b.cnn ? b.cnn.ref : \"\",\r\n      aperture_len: this.corns(1).getDistance(this.corns(4))\r\n    });\r\n    const row_e = cnns.add({\r\n      elm1: _row.elm,\r\n      node1: \"e\",\r\n      cnn: e.cnn ? e.cnn.ref : \"\",\r\n      aperture_len: this.corns(2).getDistance(this.corns(3))\r\n    });\r\n\r\n    _row.x1 = this.x1;\r\n    _row.y1 = this.y1;\r\n    _row.x2 = this.x2;\r\n    _row.y2 = this.y2;\r\n    _row.path_data = generatrix.pathData;\r\n    _row.nom = this.nom;\r\n    _row.parent = this.parent.elm;\r\n\r\n\r\n    _row.len = this.length;\r\n\r\n    if(b.profile){\r\n      row_b.elm2 = b.profile.elm;\r\n      if(b.profile instanceof Filling)\r\n        row_b.node2 = \"t\";\r\n      else if(b.profile.e.is_nearest(b.point))\r\n        row_b.node2 = \"e\";\r\n      else if(b.profile.b.is_nearest(b.point))\r\n        row_b.node2 = \"b\";\r\n      else\r\n        row_b.node2 = \"t\";\r\n    }\r\n    if(e.profile){\r\n      row_e.elm2 = e.profile.elm;\r\n      if(e.profile instanceof Filling)\r\n        row_e.node2 = \"t\";\r\n      else if(e.profile.b.is_nearest(e.point))\r\n        row_e.node2 = \"b\";\r\n      else if(e.profile.e.is_nearest(e.point))\r\n        row_e.node2 = \"b\";\r\n      else\r\n        row_e.node2 = \"t\";\r\n    }\r\n\r\n    _row.angle_hor = this.angle_hor;\r\n\r\n    _row.alp1 = Math.round((this.corns(4).subtract(this.corns(1)).angle - generatrix.getTangentAt(0).angle) * 10) / 10;\r\n    if(_row.alp1 < 0)\r\n      _row.alp1 = _row.alp1 + 360;\r\n\r\n    _row.alp2 = Math.round((generatrix.getTangentAt(generatrix.length).angle - this.corns(2).subtract(this.corns(3)).angle) * 10) / 10;\r\n    if(_row.alp2 < 0)\r\n      _row.alp2 = _row.alp2 + 360;\r\n\r\n    _row.elm_type = this.elm_type;\r\n  }\r\n\r\n  cnn_point(node, point) {\r\n\r\n    const res = this.rays[node];\r\n\r\n    if(!point){\r\n      point = this[node];\r\n    }\r\n\r\n    if(res.profile && res.profile.children.length){\r\n\r\n      if(res.profile instanceof Filling){\r\n        const np = res.profile.path.getNearestPoint(point);\r\n        if(np.getDistance(point) < consts.sticking_l){\r\n          res.point = np;\r\n          return res;\r\n        }\r\n      }\r\n      else{\r\n        if(this.check_distance(res.profile, res, point, true) === false || res.distance < consts.epsilon){\r\n          return res;\r\n        }\r\n      }\r\n    }\r\n\r\n    res.clear();\r\n    if(this.parent){\r\n      const res_bind = this.bind_node(point);\r\n      if(res_bind.binded){\r\n        res._mixin(res_bind, [\"point\",\"profile\",\"cnn_types\",\"profile_point\"]);\r\n        if(!this[res.node].is_nearest(res.point, 0)) {\r\n          this[res.node] = res.point;\r\n        }\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  bind_node(point, glasses) {\r\n\r\n    if(!glasses){\r\n      glasses = [this.parent];\r\n    }\r\n\r\n    let res = {distance: Infinity, is_l: true};\r\n\r\n    glasses.some((glass) => {\r\n      const np = glass.path.getNearestPoint(point);\r\n      let distance = np.getDistance(point);\r\n\r\n      if(distance < res.distance){\r\n        res.distance = distance;\r\n        res.point = np;\r\n        res.profile = glass;\r\n        res.cnn_types = $p.enm.cnn_types.acn.t;\r\n      }\r\n\r\n      if(distance < consts.sticking_l){\r\n        res.binded = true;\r\n        return true;\r\n      }\r\n\r\n      res.cnn_types = $p.enm.cnn_types.acn.t;\r\n      const ares = [];\r\n      for(let elm of glass.imposts){\r\n        if (elm !== this && elm.project.check_distance(elm, null, res, point, \"node_generatrix\") === false ){\r\n          ares.push({\r\n            profile_point: res.profile_point,\r\n            profile: res.profile,\r\n            cnn_types: res.cnn_types,\r\n            point: res.point});\r\n        }\r\n      }\r\n\r\n      if(ares.length == 1){\r\n        res._mixin(ares[0]);\r\n      }\r\n      else if(ares.length >= 2){\r\n        if(this.max_right_angle(ares)){\r\n          res._mixin(ares[0]);\r\n        }\r\n        res.is_cut = true;\r\n      }\r\n\r\n    });\r\n\r\n    if(!res.binded && res.point && res.distance < consts.sticking){\r\n      res.binded = true;\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  move_nodes(from, to) {\r\n    for(let elm of this.parent.imposts){\r\n      if(elm == this){\r\n        continue;\r\n      }\r\n      if(elm.b.is_nearest(from)){\r\n        elm.b = to;\r\n      }\r\n      if(elm.e.is_nearest(from)){\r\n        elm.e = to;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.Onlay = Onlay;\r\n\r\n\r\n\r\n\r\nclass ProfileVirtual extends Profile {\r\n\r\n  constructor(attr) {\r\n    super(attr);\r\n    Object.defineProperty(this._attr, '_nearest_cnn', {\r\n      get() {\r\n        return ProfileVirtual.nearest_cnn;\r\n      },\r\n      set(v) {\r\n\r\n      }\r\n    });\r\n    this.path.strokeColor = 'darkgreen';\r\n    this.path.dashArray = [8, 4, 2, 4];\r\n  }\r\n\r\n  nearest() {\r\n    return this._attr._nearest;\r\n  }\r\n\r\n  default_inset(all) {\r\n\r\n  }\r\n\r\n  get inset() {\r\n    return this.nearest().inset;\r\n  }\r\n  set inset(v) {}\r\n\r\n  get clr() {\r\n    return this.nearest(true).clr;\r\n  }\r\n  set clr(v) {}\r\n\r\n  get sizeb() {\r\n    return 0;\r\n  }\r\n\r\n  path_points(cnn_point, profile_point) {\r\n\r\n    const {_attr: {_corns}, generatrix, layer: {bounds}} = this;\r\n    if(!generatrix.curves.length) {\r\n      return cnn_point;\r\n    }\r\n    const {rays} = this.nearest();\r\n    const prays = cnn_point.profile.nearest().rays;\r\n\r\n    function intersect_point(path1, path2, index, ipoint = cnn_point.point) {\r\n      const intersections = path1.getIntersections(path2);\r\n      let delta = Infinity, tdelta, point, tpoint;\r\n\r\n      if(intersections.length == 1) {\r\n        if(index) {\r\n          _corns[index] = intersections[0].point;\r\n        }\r\n        else {\r\n          return intersections[0].point.getDistance(ipoint, true);\r\n        }\r\n      }\r\n      else if(intersections.length > 1) {\r\n        intersections.forEach((o) => {\r\n          tdelta = o.point.getDistance(ipoint, true);\r\n          if(tdelta < delta) {\r\n            delta = tdelta;\r\n            point = o.point;\r\n          }\r\n        });\r\n        if(index) {\r\n          _corns[index] = point;\r\n        }\r\n        else {\r\n          return delta;\r\n        }\r\n      }\r\n    }\r\n\r\n    const pinner = prays.inner.getNearestPoint(bounds.center).getDistance(bounds.center, true) >\r\n      prays.outer.getNearestPoint(bounds.center).getDistance(bounds.center, true) ? prays.outer : prays.inner;\r\n\r\n    const inner = rays.inner.getNearestPoint(bounds.center).getDistance(bounds.center, true) >\r\n    rays.outer.getNearestPoint(bounds.center).getDistance(bounds.center, true) ? rays.outer : rays.inner;\r\n\r\n    const offset = -2;\r\n    if(profile_point == 'b') {\r\n      intersect_point(pinner.equidistant(offset), inner.equidistant(offset), 1);\r\n      intersect_point(pinner, inner, 4);\r\n    }\r\n    else if(profile_point == 'e') {\r\n      intersect_point(pinner.equidistant(offset), inner.equidistant(offset), 2);\r\n      intersect_point(pinner, inner, 3);\r\n    }\r\n\r\n    return cnn_point;\r\n  }\r\n\r\n  redraw() {\r\n    const bcnn = this.cnn_point('b');\r\n    const ecnn = this.cnn_point('e');\r\n    const {rays} = this.nearest();\r\n    const {path, generatrix} = this;\r\n\r\n    this.path_points(bcnn, 'b');\r\n    this.path_points(ecnn, 'e');\r\n\r\n    path.removeSegments();\r\n\r\n    path.add(this.corns(1));\r\n\r\n      path.add(this.corns(2));\r\n      path.add(this.corns(3));\r\n\r\n    path.add(this.corns(4));\r\n    path.closePath();\r\n    path.reduce();\r\n\r\n    this.children.forEach((elm) => {\r\n      if(elm instanceof ProfileAddl) {\r\n        elm.observer(elm.parent);\r\n        elm.redraw();\r\n      }\r\n    });\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nProfileVirtual.nearest_cnn = {\r\n  size(profile) {\r\n    return profile.nearest().width;\r\n  },\r\n  empty() {\r\n    return false;\r\n  },\r\n  get cnn_type() {\r\n    return $p.enm.cnn_types.ii;\r\n  },\r\n  specification: [],\r\n  selection_params: [],\r\n}\r\n\r\nEditorInvisible.ProfileVirtual = ProfileVirtual;\r\n\r\n\r\nclass Scheme extends paper.Project {\r\n\r\n  constructor(_canvas, _editor, _silent) {\r\n\r\n    super(_canvas);\r\n\r\n    _editor.project = this;\r\n\r\n    const _attr = this._attr = {\r\n      _silent,\r\n      _bounds: null,\r\n      _calc_order_row: null,\r\n      _update_timer: 0,\r\n      _vis_timer: 0,\r\n    };\r\n\r\n    this._ch = [];\r\n\r\n    this._dp = $p.dp.buyers_order.create();\r\n\r\n    const isBrowser = typeof requestAnimationFrame === 'function';\r\n\r\n    this.redraw = () => {\r\n\r\n      _attr._opened && !_attr._silent && this._scope && isBrowser && requestAnimationFrame(this.redraw);\r\n\r\n      const {length} = this._ch;\r\n\r\n      if(!_attr._opened || _attr._saving || !length) {\r\n        return;\r\n      }\r\n\r\n      const {contours} = this;\r\n\r\n      if(contours.length) {\r\n\r\n        this.l_connective.redraw();\r\n\r\n        isBrowser && !_attr._silent && contours[0].refresh_prm_links(true);\r\n\r\n        for (let contour of contours) {\r\n          contour.redraw();\r\n          if(this._ch.length > length) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        _attr._bounds = null;\r\n        contours.forEach((contour) => {\r\n          const {contours, l_dimensions} = contour;\r\n          contours.forEach((l) => {\r\n            l.save_coordinates(true);\r\n            isBrowser && l.refresh_prm_links();\r\n          });\r\n          l_dimensions.redraw();\r\n        });\r\n\r\n        this.draw_sizes();\r\n\r\n        this.view.update();\r\n\r\n      }\r\n      else {\r\n        this.draw_sizes();\r\n      }\r\n\r\n      this._ch.length = 0;\r\n\r\n    };\r\n\r\n    if(!_attr._silent) {\r\n      this._dp_listener = this._dp_listener.bind(this);\r\n      this._dp._manager.on('update', this._dp_listener);\r\n    }\r\n\r\n    _editor.eve.on('contour_redrawed', () => {\r\n      clearTimeout(_attr._vis_timer);\r\n      _attr._vis_timer = setTimeout(this.draw_visualization.bind(this), 300);\r\n    });\r\n\r\n  }\r\n\r\n  _dp_listener(obj, fields) {\r\n\r\n    const {_attr, ox} = this;\r\n\r\n    if(_attr._loading || _attr._snapshot || obj != this._dp) {\r\n      return;\r\n    }\r\n\r\n    const scheme_changed_names = ['clr', 'sys'];\r\n    const row_changed_names = ['quantity', 'discount_percent', 'discount_percent_internal'];\r\n\r\n    if(fields.hasOwnProperty('clr') || fields.hasOwnProperty('sys')) {\r\n      this.notify(this, 'scheme_changed');\r\n    }\r\n\r\n    if(fields.hasOwnProperty('clr')) {\r\n      ox.clr = obj.clr;\r\n      this.getItems({class: BuilderElement}).forEach((elm) => {\r\n        if(!(elm instanceof Onlay) && !(elm instanceof Filling)) {\r\n          elm.clr = obj.clr;\r\n        }\r\n      });\r\n    }\r\n\r\n    if(fields.hasOwnProperty('sys') && !obj.sys.empty()) {\r\n\r\n      obj.sys.refill_prm(ox, 0, true);\r\n\r\n      obj._manager.emit_async('rows', obj, {extra_fields: true});\r\n\r\n      for (const contour of this.contours) {\r\n        contour.on_sys_changed();\r\n      }\r\n\r\n      if(obj.sys != $p.wsql.get_user_param('editor_last_sys')) {\r\n        $p.wsql.set_user_param('editor_last_sys', obj.sys.ref);\r\n      }\r\n\r\n      if(ox.clr.empty()) {\r\n        ox.clr = obj.sys.default_clr;\r\n      }\r\n\r\n      this.register_change(true);\r\n    }\r\n\r\n    for (const name of row_changed_names) {\r\n      if(_attr._calc_order_row && fields.hasOwnProperty(name)) {\r\n        _attr._calc_order_row[name] = obj[name];\r\n        this.register_change(true);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  set_sys(sys) {\r\n\r\n    const {_dp, ox} = this;\r\n\r\n    if(_dp.sys === sys) {\r\n      return;\r\n    }\r\n\r\n    _dp.sys = sys;\r\n    ox.sys = sys;\r\n\r\n    _dp.sys.refill_prm(ox, 0, true);\r\n\r\n    for (const contour of this.contours) {\r\n      contour.on_sys_changed();\r\n    }\r\n\r\n    if(ox.clr.empty()) {\r\n      ox.clr = _dp.sys.default_clr;\r\n    }\r\n\r\n  }\r\n\r\n  set_glasses(inset) {\r\n    for(const glass of this.getItems({class: Filling})) {\r\n      glass.set_inset(inset, true);\r\n    }\r\n  }\r\n\r\n  set_furn(furn) {\r\n    for (const rama of this.contours) {\r\n      for (const contour of rama.contours) {\r\n        if(!contour.furn.empty()) {\r\n          contour.furn = furn;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _papam_listener(obj, fields) {\r\n    const {_attr, ox} = this;\r\n    if(_attr._loading || _attr._snapshot) {\r\n      return;\r\n    }\r\n    if(obj._owner === ox.params || (obj === ox && fields.hasOwnProperty('params'))) {\r\n      this.register_change();\r\n    }\r\n  }\r\n\r\n  elm_cnn(elm1, elm2) {\r\n    elm1 = elm1.elm;\r\n    elm2 = elm2.elm;\r\n    const res = this.cnns._obj.find((row) => row.elm1 === elm1 && row.elm2 === elm2);\r\n    return res && res._row.cnn;\r\n  }\r\n\r\n  get cnns() {\r\n    return this.ox.cnn_elmnts;\r\n  }\r\n\r\n  get ox() {\r\n    return this._dp.characteristic;\r\n  }\r\n\r\n  set ox(v) {\r\n    const {_dp, _attr, _scope} = this;\r\n    let setted;\r\n\r\n    if(!_attr._silent) {\r\n      if(!this.hasOwnProperty('_papam_listener')){\r\n        this._papam_listener = this._papam_listener.bind(this);\r\n      }\r\n      _dp.characteristic._manager.off('update', this._papam_listener);\r\n      _dp.characteristic._manager.off('rows', this._papam_listener);\r\n    }\r\n\r\n    _dp.characteristic = v;\r\n\r\n    const ox = _dp.characteristic;\r\n\r\n    _dp.len = ox.x;\r\n    _dp.height = ox.y;\r\n    _dp.s = ox.s;\r\n    _dp.sys = ox.sys;\r\n    _dp.clr = ox.clr;\r\n\r\n    _attr._calc_order_row = ox.calc_order_row;\r\n\r\n    if(_attr._calc_order_row) {\r\n      'quantity,price_internal,discount_percent_internal,discount_percent,price,amount,note'.split(',').forEach((fld) => _dp[fld] = _attr._calc_order_row[fld]);\r\n    }\r\n    else {\r\n    }\r\n\r\n\r\n    if(_dp.sys.empty()) {\r\n      if(ox.owner.empty()) {\r\n        _dp.sys = $p.wsql.get_user_param('editor_last_sys');\r\n        setted = !_dp.sys.empty();\r\n      }\r\n      else {\r\n        $p.cat.production_params.find_rows({is_folder: false}, (o) => {\r\n          if(setted) {\r\n            return false;\r\n          }\r\n          o.production.find_rows({nom: ox.owner}, () => {\r\n            _dp.sys = o;\r\n            setted = true;\r\n            return false;\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    if(setted) {\r\n      _dp.sys.refill_prm(ox, 0, true);\r\n    }\r\n\r\n    if(_dp.clr.empty()) {\r\n      _dp.clr = _dp.sys.default_clr;\r\n    }\r\n\r\n    if(!_attr._silent) {\r\n      _scope.eve.emit_async('rows', ox, {constructions: true});\r\n      _dp._manager.emit_async('rows', _dp, {extra_fields: true});\r\n\r\n      _dp.characteristic._manager.on({\r\n        update: this._papam_listener,\r\n        rows: this._papam_listener,\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  get builder_props() {\r\n    const {ox, _attr} = this;\r\n    return _attr._builder_props || ox.builder_props;\r\n  }\r\n\r\n  load_dimension_lines() {\r\n    const {Размер, Радиус} = $p.enm.elm_types;\r\n    this.ox.coordinates.find_rows({elm_type: {in: [Размер, Радиус]}}, (row) => {\r\n      const layer = this.getItem({cnstr: row.cnstr});\r\n      const Constructor = row.elm_type === Размер ? DimensionLineCustom : DimensionRadius;\r\n      layer && new Constructor({\r\n        parent: layer.l_dimensions,\r\n        row: row\r\n      });\r\n    });\r\n  }\r\n\r\n  load_contour(parent) {\r\n    this.ox.constructions.find_rows({parent: parent ? parent.cnstr : 0}, (row) => {\r\n      this.load_contour(new Contour({parent: parent, row: row}));\r\n    });\r\n  }\r\n\r\n  load(id, from_service) {\r\n    const {_attr} = this;\r\n    const _scheme = this;\r\n\r\n    function load_object(o) {\r\n\r\n      if(!_scheme._scope) {\r\n        return Promise.resolve();\r\n      }\r\n      _scheme.ox = o;\r\n\r\n      _attr._opened = true;\r\n      _attr._bounds = new paper.Rectangle({\r\n        point: [0, 0],\r\n        size: [o.x, o.y]\r\n      });\r\n\r\n      o.coordinates.forEach((row) => {\r\n        if(row.elm_type === $p.enm.elm_types.Соединитель) {\r\n          new ProfileConnective({row, parent: _scheme.l_connective});\r\n        }\r\n        else if(row.elm_type === $p.enm.elm_types.Линия) {\r\n          new BaseLine({row});\r\n        }\r\n      });\r\n\r\n      if(typeof from_service === 'object') {\r\n        _attr._builder_props = Object.assign({}, o.constructor.builder_props_defaults, from_service);\r\n      }\r\n      else {\r\n        delete _attr._builder_props;\r\n      }\r\n\r\n      o = null;\r\n\r\n      _scheme.load_contour(null);\r\n\r\n      _scheme.redraw(from_service);\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        _attr._bounds = null;\r\n\r\n        _scheme.load_dimension_lines();\r\n\r\n        setTimeout(() => {\r\n\r\n          _attr._bounds = null;\r\n          _scheme.zoom_fit();\r\n\r\n          const {_scope} = _scheme;\r\n\r\n          if(!_attr._snapshot) {\r\n            _scope._undo.clear();\r\n            _scope._undo.save_snapshot(_scheme);\r\n            _scope.set_text();\r\n          }\r\n\r\n          _scheme.register_change(true);\r\n\r\n          if(_scheme.contours.length) {\r\n            _scheme.notify(_scheme.contours[0], 'layer_activated', true);\r\n          }\r\n\r\n          delete _attr._loading;\r\n\r\n          ((_scheme.ox.base_block.empty() || !_scheme.ox.base_block.is_new()) ? Promise.resolve() : _scheme.ox.base_block.load())\r\n            .then(() => {\r\n              if(_scheme.ox.coordinates.count()) {\r\n                if(_scheme.ox.specification.count() || from_service) {\r\n                  Promise.resolve().then(() => {\r\n                    if(from_service){\r\n                      _scheme.draw_visualization();\r\n                      _scheme.zoom_fit();\r\n                      resolve();\r\n                    }\r\n                    else {\r\n                      setTimeout(_scheme.draw_visualization.bind(_scheme), 100);\r\n                    }\r\n                  });\r\n                }\r\n                else {\r\n                  $p.products_building.recalc(_scheme, {});\r\n                }\r\n              }\r\n              else {\r\n                if(from_service){\r\n                  resolve();\r\n                }\r\n                else{\r\n                  _scope.load_stamp && _scope.load_stamp();\r\n                }\r\n              }\r\n              delete _attr._snapshot;\r\n\r\n              (!from_service || !_scheme.ox.specification.count()) && resolve();\r\n            });\r\n        });\r\n      })\r\n        .then(() => {\r\n          if(_scheme.ox._data.refill_props) {\r\n            _scheme._dp.sys.refill_prm(_scheme.ox, 0, true, _scheme);\r\n            _scheme._scope._acc && _scheme._scope._acc.props.reload();\r\n            delete _scheme.ox._data.refill_props;\r\n          }\r\n        });\r\n    }\r\n\r\n    _attr._loading = true;\r\n\r\n    if(from_service) {\r\n      _attr._from_service = true;\r\n    }\r\n\r\n    this.ox = null;\r\n    this.clear();\r\n\r\n    if($p.utils.is_data_obj(id) && id.calc_order && !id.calc_order.is_new()) {\r\n      return load_object(id);\r\n    }\r\n    else if($p.utils.is_guid(id) || $p.utils.is_data_obj(id)) {\r\n      return $p.cat.characteristics.get(id, true, true)\r\n        .then((ox) =>\r\n          $p.doc.calc_order.get(ox.calc_order, true, true)\r\n            .then(() => load_object(ox))\r\n        );\r\n    }\r\n  }\r\n\r\n  draw_fragment(attr) {\r\n\r\n    const {l_dimensions, l_connective} = this;\r\n\r\n    const contours = this.getItems({class: Contour});\r\n    contours.forEach((l) => l.hidden = true);\r\n    l_dimensions.visible = false;\r\n    l_connective.visible = false;\r\n\r\n    let elm;\r\n    if(attr.elm > 0) {\r\n      elm = this.getItem({class: BuilderElement, elm: attr.elm});\r\n      elm && elm.draw_fragment && elm.draw_fragment();\r\n    }\r\n    else if(attr.elm < 0) {\r\n      const cnstr = -attr.elm;\r\n      contours.some((l) => {\r\n        if(l.cnstr == cnstr) {\r\n          l.hidden = false;\r\n          l.hide_generatrix();\r\n          l.l_dimensions.redraw(attr.faltz || true);\r\n          l.zoom_fit();\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n    this.view.update();\r\n    return elm;\r\n  }\r\n\r\n  has_changes() {\r\n    return this._ch.length > 0;\r\n  }\r\n\r\n  register_update() {\r\n    const {_attr} = this;\r\n    if(_attr._update_timer) {\r\n      clearTimeout(_attr._update_timer);\r\n    }\r\n    _attr._update_timer = setTimeout(() => {\r\n      this.view && this.view.update();\r\n      _attr._update_timer = 0;\r\n    }, 100);\r\n  }\r\n\r\n  register_change(with_update) {\r\n\r\n    const {_attr, _ch} = this;\r\n\r\n    if(!_attr._loading) {\r\n\r\n      _attr._bounds = null;\r\n\r\n      this.getItems({class: Profile}).forEach((p) => {\r\n        delete p._attr.d0;\r\n      });\r\n\r\n      this.ox._data._modified = true;\r\n      this.notify(this, 'scheme_changed');\r\n    }\r\n    _ch.push(Date.now());\r\n\r\n    if(with_update) {\r\n      this.register_update();\r\n    }\r\n  }\r\n\r\n  get bounds() {\r\n    const {_attr} = this;\r\n    if(!_attr._bounds) {\r\n      this.contours.forEach((l) => {\r\n        if(!_attr._bounds) {\r\n          _attr._bounds = l.bounds;\r\n        }\r\n        else {\r\n          _attr._bounds = _attr._bounds.unite(l.bounds);\r\n        }\r\n      });\r\n    }\r\n    return _attr._bounds;\r\n  }\r\n\r\n  get dimension_bounds() {\r\n    let {bounds} = this;\r\n    this.getItems({class: DimensionLine}).forEach((dl) => {\r\n      if(dl instanceof DimensionLineCustom || dl._attr.impost || dl._attr.contour) {\r\n        bounds = bounds.unite(dl.bounds);\r\n      }\r\n    });\r\n    this.contours.forEach(({l_visualization}) => {\r\n      const ib = l_visualization._by_insets.bounds;\r\n      if(ib.height && ib.bottom > bounds.bottom) {\r\n        const delta = ib.bottom - bounds.bottom + 10;\r\n        bounds = bounds.unite(\r\n          new paper.Rectangle(bounds.bottomLeft, bounds.bottomRight.add([0, delta < 250 ? delta * 1.1 : delta * 1.2]))\r\n        );\r\n      }\r\n    });\r\n    return bounds;\r\n  }\r\n\r\n  get strokeBounds() {\r\n    let bounds = this.l_dimensions.strokeBounds;\r\n    this.contours.forEach((l) => bounds = bounds.unite(l.strokeBounds));\r\n    return bounds;\r\n  }\r\n\r\n  get _calc_order_row() {\r\n    const {_attr, ox} = this;\r\n    if(!_attr._calc_order_row && !ox.empty()) {\r\n      _attr._calc_order_row = ox.calc_order_row;\r\n    }\r\n    return _attr._calc_order_row;\r\n  }\r\n\r\n  notify(obj, type = 'update', fields) {\r\n    if(obj.type) {\r\n      type = obj.type;\r\n    }\r\n    this._scope.eve.emit_async(type, obj, fields);\r\n  }\r\n\r\n  clear() {\r\n    const {_attr} = this;\r\n    const pnames = '_bounds,_update_timer,_loading,_snapshot,_silent,_from_service';\r\n    for (let fld in _attr) {\r\n      if(!pnames.match(fld)) {\r\n        delete _attr[fld];\r\n      }\r\n    }\r\n\r\n    super.clear();\r\n    new paper.Layer();\r\n  }\r\n\r\n  unload() {\r\n    const {_dp, _attr, _calc_order_row} = this;\r\n    const pnames = '_loading,_saving';\r\n    for (let fld in _attr) {\r\n      if(pnames.match(fld)) {\r\n        _attr[fld] = true;\r\n      }\r\n      else {\r\n        delete _attr[fld];\r\n      }\r\n    }\r\n\r\n    if(this.hasOwnProperty('_dp_listener')){\r\n      _dp._manager.off('update', this._dp_listener);\r\n      this._dp_listener = null;\r\n    }\r\n\r\n    const ox = _dp.characteristic;\r\n    if(this.hasOwnProperty('_papam_listener')){\r\n      ox._manager.off('update', this._papam_listener);\r\n      ox._manager.off('rows', this._papam_listener);\r\n      this._papam_listener = null;\r\n    }\r\n    if(ox && ox._modified) {\r\n      if(ox.is_new()) {\r\n        if(_calc_order_row) {\r\n          ox.calc_order.production.del(_calc_order_row);\r\n        }\r\n        ox.unload();\r\n      }\r\n      else {\r\n        setTimeout(ox.load.bind(ox), 100);\r\n      }\r\n    }\r\n\r\n    this.remove();\r\n  }\r\n\r\n  move_points(delta, all_points) {\r\n\r\n    const other = [];\r\n    const layers = [];\r\n    const profiles = new Set;\r\n\r\n    const {auto_align, _dp} = this;\r\n\r\n    for (const item of this.selectedItems) {\r\n      const {parent, layer} = item;\r\n\r\n      if(item instanceof paper.Path && parent instanceof GeneratrixElement && !profiles.has(parent)) {\r\n\r\n        profiles.add(parent);\r\n\r\n        if(parent._hatching) {\r\n          parent._hatching.remove();\r\n          parent._hatching = null;\r\n        }\r\n\r\n        if(layer instanceof ConnectiveLayer) {\r\n          other.push.apply(other, parent.move_points(delta, all_points));\r\n        }\r\n        else if(!parent.nearest || !parent.nearest()) {\r\n\r\n          if(auto_align && parent.elm_type === $p.enm.elm_types.Импост && !parent.layer.layer && Math.abs(delta.x) > 1) {\r\n            continue;\r\n          }\r\n\r\n          let check_selected;\r\n          item.segments.forEach((segm) => {\r\n            if(segm.selected && other.indexOf(segm) != -1) {\r\n              check_selected = !(segm.selected = false);\r\n            }\r\n          });\r\n\r\n          if(check_selected && !item.segments.some((segm) => segm.selected)) {\r\n            continue;\r\n          }\r\n\r\n          other.push.apply(other, parent.move_points(delta, all_points));\r\n\r\n          if(layers.indexOf(layer) == -1) {\r\n            layers.push(layer);\r\n            layer.l_dimensions.clear();\r\n          }\r\n        }\r\n      }\r\n      else if(item instanceof Filling) {\r\n        item.purge_paths();\r\n      }\r\n    }\r\n\r\n    if(other.length && Math.abs(delta.x) > 1) {\r\n      this.do_align(auto_align, profiles);\r\n    }\r\n    else if(!this._attr._from_service) {\r\n      this.register_change(true);\r\n    }\r\n\r\n    _dp._manager.emit_async('update', {}, {x1: true, x2: true, y1: true, y2: true, a1: true, a2: true, cnn1: true, cnn2: true, info: true});\r\n\r\n  }\r\n\r\n  save_coordinates(attr) {\r\n\r\n    try {\r\n      const {_attr, bounds, ox} = this;\r\n\r\n      if(!bounds) {\r\n        return;\r\n      }\r\n\r\n      _attr._saving = true;\r\n      ox._data._loading = true;\r\n\r\n      ox.x = bounds.width.round(1);\r\n      ox.y = bounds.height.round(1);\r\n      ox.s = this.area;\r\n\r\n      ox.cnn_elmnts.clear();\r\n      ox.glasses.clear();\r\n\r\n      this.contours.forEach((contour) => contour.save_coordinates());\r\n\r\n      this.l_connective.save_coordinates();\r\n\r\n      return $p.products_building.recalc(this, attr);\r\n    }\r\n    catch (err) {\r\n      const {msg, ui} = $p;\r\n      ui && ui.dialogs.alert({text: err.message, title: msg.bld_title});\r\n      throw err;\r\n    }\r\n\r\n  }\r\n\r\n  zoom_fit(bounds, isNode) {\r\n\r\n    if(!bounds) {\r\n      bounds = this.strokeBounds;\r\n    }\r\n\r\n    if (bounds) {\r\n      if(!isNode) {\r\n        isNode = $p.wsql.alasql.utils.isNode;\r\n      }\r\n      const space = isNode ? 160 : 320;\r\n      const min = 900;\r\n      let {width, height, center} = bounds;\r\n      if (width < min) {\r\n        width = min;\r\n      }\r\n      if (height < min) {\r\n        height = min;\r\n      }\r\n      width += space;\r\n      height += space;\r\n      const {view} = this;\r\n      view.zoom = Math.min(view.viewSize.height / height, view.viewSize.width / width);\r\n      const dx = view.viewSize.width - width * view.zoom;\r\n      if(isNode) {\r\n        const dy = view.viewSize.height - height * view.zoom;\r\n        view.center = center.add([dx, -dy]);\r\n      }\r\n      else {\r\n        view.center = center.add([dx / 2, 50]);\r\n      }\r\n    }\r\n  }\r\n\r\n  get_svg(attr = {}) {\r\n    this.deselectAll();\r\n    const options = attr.export_options || {};\r\n    if(!options.precision) {\r\n      options.precision = 1;\r\n    }\r\n    const hidden = new Set();\r\n    if(this.ox.calc_order.obj_delivery_state == 'Шаблон') {\r\n      for(const el of this.getItems({class: DimensionLine})) {\r\n        el.visible = false;\r\n        hidden.add(el);\r\n      }\r\n      for(const el of this.getItems({class: paper.PointText})) {\r\n        el.visible = false;\r\n        hidden.add(el);\r\n      }\r\n      for(const el of this.getItems({class: Contour})) {\r\n        if(el.l_visualization._opening) {\r\n          el.l_visualization._opening.strokeScaling = false;\r\n          el.l_visualization._opening.opacity = 0.8;\r\n          el.l_visualization._by_spec.opacity = 0.5;\r\n        }\r\n      }\r\n      this.zoom_fit();\r\n\r\n      const {ownerDocument} = this.view.element;\r\n      if(ownerDocument) {\r\n        options.onExport = function (item, node, options) {\r\n          if(!item.visible) {\r\n            return ownerDocument.createElement('g');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const svg = this.exportSVG(options);\r\n    const bounds = this.strokeBounds.unite(this.l_dimensions.strokeBounds);\r\n\r\n    svg.setAttribute('x', bounds.x);\r\n    svg.setAttribute('y', bounds.y);\r\n    svg.setAttribute('width', bounds.width + 40);\r\n    svg.setAttribute('height', bounds.height);\r\n    svg.querySelector('g').removeAttribute('transform');\r\n\r\n    options.onExport = null;\r\n    if(hidden.size) {\r\n      for(const el of hidden) {\r\n        el.visible = true;\r\n      }\r\n      for(const el of this.getItems({class: Contour})) {\r\n        if(el.l_visualization._opening) {\r\n          el.l_visualization._opening.strokeScaling = true;\r\n          el.l_visualization._opening.opacity = 1;\r\n          el.l_visualization._by_spec.opacity = 1;\r\n        }\r\n      }\r\n      this.zoom_fit();\r\n    }\r\n\r\n    return svg.outerHTML;\r\n  }\r\n\r\n  load_stamp(obx, is_snapshot) {\r\n\r\n    const do_load = (obx) => {\r\n\r\n      const {ox} = this;\r\n\r\n      this.clear();\r\n\r\n      const src = Object.assign({_not_set_loaded: true}, is_snapshot ? obx : obx._obj);\r\n      ox._mixin(src, null,\r\n        'ref,name,calc_order,product,leading_product,leading_elm,origin,base_block,note,partner,_not_set_loaded,_rev'.split(','), true);\r\n\r\n      if(!is_snapshot) {\r\n        ox.base_block = (obx.base_block.empty() || obx.base_block.obj_delivery_state === $p.enm.obj_delivery_states.Шаблон) ? obx : obx.base_block;\r\n        if(obx.calc_order.refill_props) {\r\n          ox._data.refill_props = true;\r\n        }\r\n      }\r\n\r\n      return this.load(ox)\r\n        .then(() => ox._data._modified = true);\r\n\r\n    };\r\n\r\n    this._attr._loading = true;\r\n\r\n    if(is_snapshot) {\r\n      this._attr._snapshot = true;\r\n      return do_load(obx);\r\n    }\r\n    else {\r\n      return $p.cat.characteristics.get(obx, true, true)\r\n        .then(do_load);\r\n    }\r\n  }\r\n\r\n  get auto_align() {\r\n    const {calc_order, base_block} = this.ox;\r\n    const {Шаблон} = $p.enm.obj_delivery_states;\r\n    if(base_block.empty() || calc_order.obj_delivery_state == Шаблон || base_block.calc_order.obj_delivery_state != Шаблон) {\r\n      return false;\r\n    }\r\n    const {auto_align} = $p.job_prm.properties;\r\n    let align;\r\n    if(auto_align) {\r\n      base_block.params.find_rows({param: auto_align}, (row) => {\r\n        align = row.value;\r\n        return false;\r\n      });\r\n      return align && align != '_' && align;\r\n    }\r\n  }\r\n\r\n  do_align(auto_align, profiles) {\r\n\r\n    if(!auto_align || !profiles.size) {\r\n      return;\r\n    }\r\n\r\n    const layers = new Set();\r\n    for (const profile of profiles) {\r\n      profile.layer.fillings && layers.add(profile.layer);\r\n    }\r\n\r\n    if(this._attr._align_timer) {\r\n      clearTimeout(this._attr._align_timer);\r\n    }\r\n\r\n    this._attr._align_timer = setTimeout(() => {\r\n\r\n      this._attr._align_timer = 0;\r\n\r\n      const glasses = [];\r\n      for (const layer of layers) {\r\n        for(const filling of layer.fillings){\r\n          glasses.indexOf(filling) == -1 && glasses.push(filling);\r\n        }\r\n      }\r\n      this._scope.glass_align('width', glasses);\r\n\r\n    }, 100);\r\n\r\n  }\r\n\r\n  resize_canvas(w, h) {\r\n    const {viewSize} = this.view;\r\n    viewSize.width = w;\r\n    viewSize.height = h;\r\n  }\r\n\r\n  get contours() {\r\n    return this.layers.filter((l) => l instanceof Contour);\r\n  }\r\n\r\n  get area() {\r\n    return this.contours.reduce((sum, {area}) => sum + area, 0).round(3);\r\n  }\r\n\r\n  get form_area() {\r\n    return this.contours.reduce((sum, {form_area}) => sum + form_area, 0).round(3);\r\n  }\r\n\r\n  get clr() {\r\n    return this.ox.clr;\r\n  }\r\n\r\n  set clr(v) {\r\n    this.ox.clr = v;\r\n  }\r\n\r\n  get l_dimensions() {\r\n    const {activeLayer, _attr} = this;\r\n\r\n    if(!_attr.l_dimensions) {\r\n      _attr.l_dimensions = new DimensionLayer();\r\n    }\r\n    if(!_attr.l_dimensions.isInserted()) {\r\n      this.addLayer(_attr.l_dimensions);\r\n    }\r\n    if(activeLayer) {\r\n      this._activeLayer = activeLayer;\r\n    }\r\n\r\n    return _attr.l_dimensions;\r\n  }\r\n\r\n  get l_connective() {\r\n    const {activeLayer, _attr} = this;\r\n\r\n    if(!_attr.l_connective) {\r\n      _attr.l_connective = new ConnectiveLayer();\r\n    }\r\n    if(!_attr.l_connective.isInserted()) {\r\n      this.addLayer(_attr.l_connective);\r\n    }\r\n    if(activeLayer) {\r\n      this._activeLayer = activeLayer;\r\n    }\r\n\r\n    return _attr.l_connective;\r\n  }\r\n\r\n  draw_sizes() {\r\n\r\n    const {bounds, l_dimensions, builder_props} = this;\r\n\r\n    if(bounds && builder_props.auto_lines) {\r\n\r\n      if(!l_dimensions.bottom) {\r\n        l_dimensions.bottom = new DimensionLine({\r\n          pos: 'bottom',\r\n          parent: l_dimensions,\r\n          offset: -120\r\n        });\r\n      }\r\n      else {\r\n        l_dimensions.bottom.offset = -120;\r\n      }\r\n\r\n      if(!l_dimensions.right) {\r\n        l_dimensions.right = new DimensionLine({\r\n          pos: 'right',\r\n          parent: l_dimensions,\r\n          offset: -120\r\n        });\r\n      }\r\n      else {\r\n        l_dimensions.right.offset = -120;\r\n      }\r\n\r\n\r\n\r\n      if(this.contours.some((l) => l.l_dimensions.children.some((dl) =>\r\n          dl.pos == 'right' && Math.abs(dl.size - bounds.height) < consts.sticking_l))) {\r\n        l_dimensions.right.visible = false;\r\n      }\r\n      else {\r\n        l_dimensions.right.redraw();\r\n      }\r\n\r\n      if(this.contours.some((l) => l.l_dimensions.children.some((dl) =>\r\n          dl.pos == 'bottom' && Math.abs(dl.size - bounds.width) < consts.sticking_l))) {\r\n        l_dimensions.bottom.visible = false;\r\n      }\r\n      else {\r\n        l_dimensions.bottom.redraw();\r\n      }\r\n    }\r\n    else {\r\n      if(l_dimensions.bottom) {\r\n        l_dimensions.bottom.visible = false;\r\n      }\r\n      if(l_dimensions.right) {\r\n        l_dimensions.right.visible = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  draw_visualization() {\r\n    if(this.view){\r\n      for (let contour of this.contours) {\r\n        contour.draw_visualization();\r\n      }\r\n      this.view.update();\r\n    }\r\n  }\r\n\r\n  default_inset(attr) {\r\n\r\n    let rows;\r\n\r\n    if(!attr.pos) {\r\n      rows = this._dp.sys.inserts(attr.elm_type, true);\r\n      if(attr.inset && rows.some((row) => attr.inset == row)) {\r\n        return attr.inset;\r\n      }\r\n      return rows[0];\r\n    }\r\n\r\n    rows = this._dp.sys.inserts(attr.elm_type, 'rows');\r\n\r\n    if(rows.length == 1) {\r\n      return rows[0].nom;\r\n    }\r\n\r\n    const pos_array = Array.isArray(attr.pos);\r\n\r\n    function check_pos(pos) {\r\n      if(pos_array) {\r\n        return attr.pos.some((v) => v == pos);\r\n      }\r\n      return attr.pos == pos;\r\n    }\r\n\r\n    if(attr.inset && rows.some((row) => attr.inset == row.nom && (check_pos(row.pos) || row.pos == $p.enm.positions.Любое))) {\r\n      return attr.inset;\r\n    }\r\n\r\n    let inset;\r\n    rows.some((row) => {\r\n      if(check_pos(row.pos) && row.by_default) {\r\n        return inset = row.nom;\r\n      }\r\n    });\r\n    if(!inset) {\r\n      rows.some((row) => {\r\n        if(check_pos(row.pos)) {\r\n          return inset = row.nom;\r\n        }\r\n      });\r\n    }\r\n    if(!inset) {\r\n      rows.some((row) => {\r\n        if(row.pos == $p.enm.positions.Любое && row.by_default) {\r\n          return inset = row.nom;\r\n        }\r\n      });\r\n    }\r\n    if(!inset) {\r\n      rows.some((row) => {\r\n        if(row.pos == $p.enm.positions.Любое) {\r\n          return inset = row.nom;\r\n        }\r\n      });\r\n    }\r\n\r\n    return inset;\r\n  }\r\n\r\n  check_inset(attr) {\r\n    const inset = attr.inset ? attr.inset : attr.elm.inset;\r\n    const elm_type = attr.elm ? attr.elm.elm_type : attr.elm_type;\r\n    const rows = [];\r\n\r\n    let finded;\r\n    this._dp.sys.elmnts.forEach((row) => {\r\n      if((elm_type ? row.elm_type == elm_type : true)) {\r\n        if(row.nom === inset) {\r\n          finded = true;\r\n          return false;\r\n        }\r\n        rows.push(row);\r\n      }\r\n    });\r\n\r\n\r\n    if(finded) {\r\n      return inset;\r\n    }\r\n    if(rows.length) {\r\n      return rows[0].nom;\r\n    }\r\n\r\n  }\r\n\r\n  check_distance(element, profile, res, point, check_only) {\r\n    const {elm_types, cnn_types: {acn}} = $p.enm;\r\n\r\n\r\n    let distance, cnns, addls,\r\n      bind_node = typeof check_only == 'string' && check_only.indexOf('node') != -1,\r\n      bind_generatrix = typeof check_only == 'string' ? check_only.indexOf('generatrix') != -1 : check_only,\r\n      node_distance;\r\n\r\n    function check_node_distance(node) {\r\n      distance = element[node].getDistance(point)\r\n      if(distance < parseFloat(consts.sticking_l)) {\r\n\r\n        if(typeof res.distance == 'number' && res.distance < distance) {\r\n          res.profile = element;\r\n          res.profile_point = node;\r\n          return 1;\r\n        }\r\n\r\n        if(check_only === true && res.profile === element && res.cnn && acn.a.includes(res.cnn.cnn_type)) {\r\n          if(res.distance > distance) {\r\n            res.distance = distance;\r\n          }\r\n          res.profile_point = node;\r\n          res.point = point;\r\n          return 2;\r\n        }\r\n\r\n        if(profile && (!res.cnn || res.cnn.empty())) {\r\n\r\n          cnns = $p.cat.cnns.nom_cnn(element, profile, acn.a);\r\n          if(!cnns || !cnns.length) {\r\n            return 1;\r\n          }\r\n\r\n\r\n\r\n        }\r\n        else if(res.cnn && acn.t.includes(res.cnn.cnn_type)) {\r\n          return 1;\r\n        }\r\n\r\n        res.point = bind_node ? element[node] : point;\r\n        res.distance = distance;\r\n        res.profile = element;\r\n        res.profile_point = node;\r\n        res.cnn_types = acn.a;\r\n        if(cnns && cnns.length && !res.cnn) {\r\n          res.cnn = cnns[0];\r\n        }\r\n\r\n        return 2;\r\n      }\r\n\r\n    }\r\n\r\n    const b = res.profile_point === 'b' ? 'b' : 'e';\r\n    const e = b === 'b' ? 'e' : 'b';\r\n\r\n    if(element === profile) {\r\n      if(profile.is_linear()) {\r\n        return;\r\n      }\r\n      else {\r\n      }\r\n      return;\r\n    }\r\n    else if((node_distance = check_node_distance(b)) || (node_distance = check_node_distance(e))) {\r\n      if(res.cnn_types !== acn.a && res.profile_point){\r\n        res.cnn_types = acn.a;\r\n        res.distance = distance;\r\n      }\r\n      return node_distance == 2 ? false : void(0);\r\n    }\r\n\r\n    res.profile_point = '';\r\n\r\n\r\n    const gp = element._attr._nearest && (!profile || !profile._attr._nearest) ?\r\n      element.rays.outer.getNearestPoint(point) :\r\n      element.generatrix.getNearestPoint(point);\r\n    distance = gp.getDistance(point);\r\n\r\n    if(distance < ((res.is_t || !res.is_l) ? consts.sticking : consts.sticking_l)) {\r\n\r\n      if(distance < res.distance || bind_generatrix) {\r\n        if(element.d0 != 0 && element.rays.outer) {\r\n          res.point = element.rays.outer.getNearestPoint(point);\r\n          res.distance = 0;\r\n        }\r\n        else {\r\n          res.point = gp;\r\n          res.distance = distance;\r\n        }\r\n        res.profile = element;\r\n        res.cnn_types = acn.t;\r\n      }\r\n      if(bind_generatrix) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  default_clr(attr) {\r\n    return this.ox.clr;\r\n  }\r\n\r\n  get default_furn() {\r\n    var sys = this._dp.sys,\r\n      res;\r\n    while (true) {\r\n      if(res = $p.job_prm.builder.base_furn[sys.ref]) {\r\n        break;\r\n      }\r\n      if(sys.empty()) {\r\n        break;\r\n      }\r\n      sys = sys.parent;\r\n    }\r\n    if(!res) {\r\n      res = $p.job_prm.builder.base_furn.null;\r\n    }\r\n    if(!res) {\r\n      $p.cat.furns.find_rows({is_folder: false, is_set: false, id: {not: ''}}, (row) => {\r\n        res = row;\r\n        return false;\r\n      });\r\n    }\r\n    return res;\r\n  }\r\n\r\n  selected_profiles(all) {\r\n    const res = [];\r\n    const count = this.selectedItems.length;\r\n\r\n    this.selectedItems.forEach((item) => {\r\n\r\n      const p = item.parent;\r\n\r\n      if(p instanceof ProfileItem) {\r\n        if(all || !item.layer.parent || !p.nearest || !p.nearest(true)) {\r\n\r\n          if(res.indexOf(p) != -1) {\r\n            return;\r\n          }\r\n\r\n          if(count < 2 || !(p._attr.generatrix.firstSegment.selected ^ p._attr.generatrix.lastSegment.selected)) {\r\n            res.push(p);\r\n          }\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  selected_glasses() {\r\n    const res = [];\r\n\r\n    this.selectedItems.forEach((item) => {\r\n\r\n      if(item instanceof Filling && res.indexOf(item) == -1) {\r\n        res.push(item);\r\n      }\r\n      else if(item.parent instanceof Filling && res.indexOf(item.parent) == -1) {\r\n        res.push(item.parent);\r\n      }\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  get selected_elm() {\r\n    let res;\r\n    this.selectedItems.some((item) => {\r\n      if(item instanceof BuilderElement) {\r\n        return res = item;\r\n\r\n      }\r\n      else if(item.parent instanceof BuilderElement) {\r\n        return res = item.parent;\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  hitPoints(point, tolerance, selected_first, with_onlays) {\r\n    let item, hit;\r\n    let dist = Infinity;\r\n\r\n    function check_corns(elm) {\r\n      const corn = elm.corns(point);\r\n      if(corn.dist < dist) {\r\n        dist = corn.dist;\r\n        if(corn.dist < consts.sticking) {\r\n          hit = {\r\n            item: elm.generatrix,\r\n            point: corn.point\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if(selected_first) {\r\n      this.selectedItems.some((item) => hit = item.hitTest(point, {segments: true, tolerance: tolerance || 8}));\r\n      if(!hit) {\r\n        hit = this.hitTest(point, {segments: true, tolerance: tolerance || 6});\r\n      }\r\n    }\r\n    else {\r\n      for (let elm of this.activeLayer.profiles) {\r\n        check_corns(elm);\r\n        for (let addl of elm.addls) {\r\n          check_corns(addl);\r\n        }\r\n      }\r\n      if(with_onlays) {\r\n        for (let elm of this.activeLayer.onlays) {\r\n          check_corns(elm);\r\n        }\r\n      }\r\n    }\r\n\r\n    return hit;\r\n  }\r\n\r\n  rootLayer(layer) {\r\n    if(!layer) {\r\n      layer = this.activeLayer;\r\n    }\r\n    while (layer.parent) {\r\n      layer = layer.parent;\r\n    }\r\n    return layer;\r\n  }\r\n\r\n  deselect_all_points(with_items) {\r\n    const res = [];\r\n    this.getItems({class: paper.Path}).forEach((item) => {\r\n      item.segments.forEach((segm) => {\r\n        if(segm.selected) {\r\n          segm.selected = false;\r\n          res.push(segm);\r\n        }\r\n      });\r\n      if(with_items && item.selected) {\r\n        item.selected = false;\r\n        res.push(item);\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  get perimeter() {\r\n    let res = [],\r\n      contours = this.contours,\r\n      tmp;\r\n\r\n    if(contours.length == 1) {\r\n      return contours[0].perimeter;\r\n    }\r\n\r\n\r\n\r\n    return res;\r\n  }\r\n\r\n  get glasses() {\r\n    return this.getItems({class: Filling});\r\n  }\r\n\r\n  get skeleton() {\r\n    return this._skeleton;\r\n  }\r\n\r\n  set skeleton(v) {\r\n    const {_skeleton} = this;\r\n    _skeleton.skeleton = !!v;\r\n  }\r\n\r\n}\r\n\r\nEditorInvisible.Scheme = Scheme;\r\n\r\n\r\nclass EditableText extends paper.PointText {\r\n\r\n  constructor(props) {\r\n    props.justification = 'center';\r\n    props.fontFamily = consts.font_family;\r\n    super(props);\r\n    this._edit = null;\r\n    this._owner = props._owner;\r\n\r\n    !this.project._attr._from_service && this.on({\r\n      mouseenter: this.mouseenter,\r\n      mouseleave: this.mouseleave,\r\n      click: this.click,\r\n    })\r\n  }\r\n\r\n  mouseenter(event) {\r\n    this.project._scope.canvas_cursor('cursor-arrow-ruler-light');\r\n  }\r\n\r\n  mouseleave(event) {\r\n    this.project._scope.canvas_cursor('cursor-arrow-white');\r\n  }\r\n\r\n  click(event) {\r\n    if(!this._edit) {\r\n      const {view, bounds} = this;\r\n      const point = view.projectToView(bounds.topLeft);\r\n      const edit = this._edit = document.createElement('INPUT');\r\n      view.element.parentNode.appendChild(edit);\r\n      edit.style = `left: ${(point.x - 4).toFixed()}px; top: ${(point.y).toFixed()}px; width: 60px; border: none; position: absolute;`;\r\n      edit.onblur = () => setTimeout(() => this.edit_remove());\r\n      edit.onkeydown = this.edit_keydown.bind(this);\r\n      edit.value = this.content.replace(/\\D$/, '');\r\n      setTimeout(() => {\r\n        edit.focus();\r\n        edit.select();\r\n      });\r\n    }\r\n  }\r\n\r\n  edit_keydown(event) {\r\n    switch (event.code) {\r\n    case 'Escape':\r\n    case 'Tab':\r\n      return this.edit_remove();\r\n    case 'Enter':\r\n    case 'NumpadEnter':\r\n      this.apply(parseFloat(this._edit.value));\r\n      return this.edit_remove();\r\n    case 'Digit0':\r\n    case 'Digit1':\r\n    case 'Digit2':\r\n    case 'Digit3':\r\n    case 'Digit4':\r\n    case 'Digit5':\r\n    case 'Digit6':\r\n    case 'Digit7':\r\n    case 'Digit8':\r\n    case 'Digit9':\r\n    case 'Numpad0':\r\n    case 'Numpad1':\r\n    case 'Numpad2':\r\n    case 'Numpad3':\r\n    case 'Numpad4':\r\n    case 'Numpad5':\r\n    case 'Numpad6':\r\n    case 'Numpad7':\r\n    case 'Numpad8':\r\n    case 'Numpad9':\r\n    case '.':\r\n    case 'Period':\r\n    case 'NumpadDecimal':\r\n    case 'ArrowRight':\r\n    case 'ArrowLeft':\r\n    case 'Delete':\r\n    case 'Backspace':\r\n      break;\r\n    case 'Comma':\r\n    case ',':\r\n      event.code = '.';\r\n      break;\r\n    default:\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  edit_remove() {\r\n    if(this._edit){\r\n      this._edit.parentNode && this._edit.parentNode.removeChild(this._edit);\r\n      this._edit = null;\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.edit_remove();\r\n    super.remove();\r\n  }\r\n}\r\n\r\nclass AngleText extends EditableText {\r\n\r\n  constructor(props) {\r\n    props.fillColor = 'blue';\r\n    super(props);\r\n    this._ind = props._ind;\r\n  }\r\n\r\n  apply(value) {\r\n\r\n    const {project, generatrix, _attr} = this._owner;\r\n    const {zoom} = _attr;\r\n    const {curves, segments} = generatrix;\r\n    const c1 = curves[this._ind - 1];\r\n    const c2 = curves[this._ind];\r\n    const loc1 = c1.getLocationAtTime(0.9);\r\n    const loc2 = c2.getLocationAtTime(0.1);\r\n    const center = c1.point2;\r\n    let angle = loc2.tangent.angle - loc1.tangent.negate().angle;\r\n    if(angle < 0){\r\n      angle += 360;\r\n    }\r\n    const invert = angle > 180;\r\n    if(invert){\r\n      angle = 360 - angle;\r\n    }\r\n    const ray0 = new paper.Point([c2.point2.x - c2.point1.x, c2.point2.y - c2.point1.y]);\r\n    const ray1 = ray0.clone();\r\n    ray1.angle += invert ? angle - value : value - angle;\r\n    const delta = ray1.subtract(ray0);\r\n\r\n    let start;\r\n    for(const segment of segments) {\r\n      if(segment.point.equals(c2.point2)) {\r\n        start = true;\r\n      }\r\n      if(start) {\r\n        segment.point = segment.point.add(delta);\r\n      }\r\n    }\r\n    project.register_change(true);\r\n\r\n  }\r\n}\r\n\r\nclass LenText extends EditableText {\r\n\r\n  constructor(props) {\r\n    props.fillColor = 'black';\r\n    super(props);\r\n  }\r\n\r\n  apply(value) {\r\n    const {path, segment1, segment2, length} = this._owner;\r\n    const {parent: {_attr, project}, segments} = path;\r\n    const {zoom} = _attr;\r\n    const delta = segment1.curve.getTangentAtTime(1).multiply(value * zoom - length);\r\n    let start;\r\n    for(const segment of segments) {\r\n      if(segment === segment2) {\r\n        start = true;\r\n      }\r\n      if(start) {\r\n        segment.point = segment.point.add(delta);\r\n      }\r\n    }\r\n    project.register_change(true);\r\n  }\r\n}\r\n\r\nclass Sectional extends GeneratrixElement {\r\n\r\n  initialize(attr) {\r\n\r\n    const {project, _attr, _row} = this;\r\n    const h = project.bounds.height + project.bounds.y;\r\n\r\n    _attr._rays = {\r\n      b: {},\r\n      e: {},\r\n      clear() {},\r\n    };\r\n\r\n    _attr.children = [];\r\n\r\n    _attr.zoom = 5;\r\n    _attr.radius = 50;\r\n\r\n    if(attr.generatrix) {\r\n      _attr.generatrix = attr.generatrix;\r\n    }\r\n    else {\r\n      if(_row.path_data) {\r\n        _attr.generatrix = new paper.Path(_row.path_data);\r\n      }\r\n      else{\r\n        const first_point = new paper.Point([_row.x1, h - _row.y1]);\r\n        _attr.generatrix = new paper.Path(first_point);\r\n        if(_row.r){\r\n          _attr.generatrix.arcTo(\r\n            first_point.arc_point(_row.x1, h - _row.y1, _row.x2, h - _row.y2,\r\n              _row.r + 0.001, _row.arc_ccw, false), [_row.x2, h - _row.y2]);\r\n        }\r\n        else{\r\n          _attr.generatrix.lineTo([_row.x2, h - _row.y2]);\r\n        }\r\n      }\r\n    }\r\n\r\n    _attr.generatrix.strokeColor = 'black';\r\n    _attr.generatrix.strokeWidth = 1;\r\n    _attr.generatrix.strokeScaling = false;\r\n    this.clr = _row.clr.empty() ? $p.job_prm.builder.base_clr : _row.clr;\r\n\r\n    this.addChild(_attr.generatrix);\r\n\r\n  }\r\n\r\n  redraw() {\r\n    const {layer, generatrix, _attr, radius} = this;\r\n    const {children, zoom} = _attr;\r\n    const {segments, curves} = generatrix;\r\n\r\n    for(let child of children){\r\n      child.remove();\r\n    }\r\n\r\n    for(let i = 1; i < segments.length - 1; i++){\r\n      this.draw_angle(i);\r\n    }\r\n\r\n    for(let curve of curves){\r\n      const loc = curve.getLocationAtTime(0.5);\r\n      const normal = loc.normal.normalize(radius);\r\n      children.push(new LenText({\r\n        point: loc.point.add(normal).add([0, normal.y < 0 ? 0 : normal.y / 2]),\r\n        content: (curve.length / zoom).toFixed(0),\r\n        fontSize: radius * 1.4,\r\n        parent: layer,\r\n        _owner: curve\r\n      }));\r\n    }\r\n\r\n\r\n    return this;\r\n  }\r\n\r\n  draw_angle(ind) {\r\n    const {layer, generatrix, _attr, radius} = this;\r\n    let {children, zoom} = _attr;\r\n    const {curves} = generatrix;\r\n    const c1 = curves[ind - 1];\r\n    const c2 = curves[ind];\r\n    const loc1 = c1.getLocationAtTime(0.9);\r\n    const loc2 = c2.getLocationAtTime(0.1);\r\n    const center = c1.point2;\r\n    let angle = loc2.tangent.angle - loc1.tangent.negate().angle;\r\n    if(angle < 0){\r\n      angle += 360;\r\n    }\r\n    if(angle > 180){\r\n      angle = 360 - angle;\r\n    }\r\n\r\n\r\n\r\n    if (c1.length < radius || c2.length < radius || 180 - angle < 1){\r\n      return;\r\n    }\r\n\r\n    const from = c1.getLocationAt(c1.length - radius).point;\r\n    const to = c2.getLocationAt(radius).point;\r\n    const end = center.subtract(from.add(to).divide(2)).normalize(radius).negate();\r\n    children.push(new paper.Path.Arc({\r\n      from,\r\n      through: center.add(end),\r\n      to,\r\n      strokeColor: 'grey',\r\n      guide: true,\r\n      parent: layer,\r\n    }));\r\n\r\n    children.push(new AngleText({\r\n      point: center.add(end.multiply(-2.2)), \r\n      content: angle.toFixed(0) + '°',\r\n      fontSize: radius * 1.4,\r\n      parent: layer,\r\n      _owner: this,\r\n      _ind: ind,\r\n    }));\r\n\r\n  }\r\n\r\n  save_coordinates() {\r\n\r\n    const {_row, generatrix} = this;\r\n\r\n    if(!generatrix){\r\n      return;\r\n    }\r\n\r\n    _row.x1 = this.x1;\r\n    _row.y1 = this.y1;\r\n    _row.x2 = this.x2;\r\n    _row.y2 = this.y2;\r\n    _row.path_data = generatrix.pathData;\r\n    _row.nom = this.nom;\r\n\r\n\r\n    _row.len = this.length.round(1);\r\n\r\n    _row.elm_type = this.elm_type;\r\n\r\n  }\r\n\r\n  cnn_point() {\r\n\r\n  }\r\n\r\n  get length() {\r\n    const {generatrix, zoom} = this._attr;\r\n    return generatrix.length / zoom;\r\n  }\r\n\r\n  get rays() {\r\n    return this._attr._rays;\r\n  }\r\n\r\n  get elm_type() {\r\n    return $p.enm.elm_types.Водоотлив;\r\n  }\r\n\r\n  get radius() {\r\n    let {generatrix, radius} = this._attr;\r\n    const {height, width} = generatrix.bounds;\r\n    const size = Math.max(width - consts.cutoff, height - consts.cutoff);\r\n    if(size > 0) {\r\n      radius += size / 60;\r\n    }\r\n    return radius;\r\n  }\r\n}\r\n\r\nEditorInvisible.Sectional = Sectional;\r\nEditorInvisible.EditableText = EditableText;\r\nEditorInvisible.AngleText = AngleText;\r\n\r\n\r\nclass Pricing {\r\n\r\n  constructor({md, adapters}) {\r\n\r\n    md.once('predefined_elmnts_inited', () => {\r\n      const {pouch} = adapters;\r\n      if(pouch.local.templates || pouch.props.user_node) {\r\n        this.load_prices();\r\n      }\r\n      else {\r\n        pouch.once('on_log_in', () => this.load_prices());\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  load_prices() {\r\n\r\n    const {adapters: {pouch}, job_prm} = $p;\r\n    if(job_prm.use_ram === false) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return this.by_local()\r\n      .then((loc) => {\r\n        return !loc && this.by_range();\r\n      })\r\n      .then(() => {\r\n        const {doc: {calc_order}, wsql} = $p;\r\n        pouch.emit('pouch_complete_loaded');\r\n\r\n        if(pouch.local.doc === pouch.remote.doc) {\r\n          pouch.local.doc.changes({\r\n            since: 'now',\r\n            live: true,\r\n            include_docs: true,\r\n            selector: {class_name: {$in: ['doc.nom_prices_setup', calc_order.class_name]}}\r\n          }).on('change', (change) => {\r\n            if(change.doc.class_name == 'doc.nom_prices_setup'){\r\n              setTimeout(() => this.by_doc(change.doc), 500);\r\n            }\r\n            else if(change.doc.class_name == calc_order.class_name){\r\n              if(pouch.props.user_node) {\r\n               return calc_order.emit('change', change.doc);\r\n              }\r\n              const doc = calc_order.by_ref[change.id.substr(15)];\r\n              const user = pouch.authorized || wsql.get_user_param('user_name');\r\n              if(!doc || user === change.doc.timestamp.user){\r\n                return;\r\n              }\r\n              pouch.load_changes({docs: [change.doc], update_only: true});\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  build_cache(rows) {\r\n    const {nom, currencies} = $p.cat;\r\n    const note = 'Индекс цен номенклатуры';\r\n    for(const {key, value} of rows){\r\n      if(!Array.isArray(value)){\r\n        return setTimeout(() => $p.iface.do_reload('', note), 1000);\r\n      }\r\n      const onom = nom.get(key[0], false, true);\r\n      if (!onom || !onom._data){\r\n        $p.record_log({\r\n          class: 'error',\r\n          note,\r\n          obj: {nom: key[0], value}\r\n        });\r\n        continue;\r\n      }\r\n      if (!onom._data._price){\r\n        onom._data._price = {};\r\n      }\r\n      const {_price} = onom._data;\r\n\r\n      if (!_price[key[1]]){\r\n        _price[key[1]] = {};\r\n      }\r\n      _price[key[1]][key[2]] = value.map((v) => ({\r\n        date: new Date(v.date),\r\n        currency: currencies.get(v.currency),\r\n        price: v.price\r\n      }));\r\n    }\r\n  }\r\n\r\n  build_cache_local(prices) {\r\n\r\n    const {nom, currencies} = $p.cat;\r\n    const note = 'Индекс цен номенклатуры';\r\n    const date = new Date('2010-01-01');\r\n\r\n    for(const ref in prices) {\r\n      if(ref[0] === '_' || ref === 'remote_rev') {\r\n        continue;\r\n      }\r\n      const onom = nom.get(ref, false, true);\r\n      const value = prices[ref];\r\n\r\n      if (!onom || !onom._data){\r\n        continue;\r\n      }\r\n      onom._data._price = value;\r\n\r\n      for(const cref in value){\r\n        for(const pref in value[cref]) {\r\n          const price = value[cref][pref][0];\r\n          price.date = date;\r\n          price.currency = currencies.get(price.currency);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  sync_local(pouch, step = 0) {\r\n    const {utils} = $p;\r\n    return pouch.remote.templates.get(`_local/price_${step}`)\r\n      .then((remote) => {\r\n\r\n        if(pouch.remote.templates === pouch.local.templates) {\r\n          this.build_cache_local(remote);\r\n          return this.sync_local(pouch, ++step);\r\n        }\r\n\r\n        return pouch.local.templates.get(`_local/price_${step}`)\r\n          .catch(() => ({}))\r\n          .then((local) => {\r\n\r\n            if(local.remote_rev !== remote._rev) {\r\n              remote.remote_rev = remote._rev;\r\n              if(!local._rev) {\r\n                delete remote._rev;\r\n              }\r\n              else {\r\n                remote._rev = local._rev;\r\n              }\r\n              pouch.local.templates.put(utils._clone(remote));\r\n            }\r\n\r\n            this.build_cache_local(remote);\r\n            return this.sync_local(pouch, ++step);\r\n          })\r\n      })\r\n      .catch((err) => {\r\n        if(step !== 0) {\r\n          if(pouch.remote.templates !== pouch.local.templates) {\r\n            pouch.local.templates.get(`_local/price_${step}`)\r\n              .then((local) => pouch.local.templates.remove(local))\r\n              .catch(() => null);\r\n          }\r\n          return true;\r\n        }\r\n      });\r\n  }\r\n\r\n  by_local(step = 0) {\r\n    const {adapters: {pouch}, job_prm} = $p;\r\n\r\n    if(!pouch.local.templates) {\r\n      return Promise.resolve(false);\r\n    }\r\n\r\n    const pre = step === 0 && (pouch.local.templates.adapter !== 'http' || (job_prm.user_node && job_prm.user_node.templates)) && pouch.authorized ?\r\n      pouch.remote.templates.info()\r\n        .then(() => this.sync_local(pouch))\r\n        .catch((err) => null)\r\n      :\r\n      Promise.resolve();\r\n\r\n    return pre.then((loaded) => {\r\n      if(loaded) {\r\n        return loaded;\r\n      }\r\n      else {\r\n        return pouch.local.templates.get(`_local/price_${step}`)\r\n      }\r\n    })\r\n      .then((prices) => {\r\n        if(prices === true) {\r\n          return prices;\r\n        }\r\n        this.build_cache_local(prices);\r\n        pouch.emit('nom_prices', ++step);\r\n        return this.by_local(step);\r\n      })\r\n      .catch((err) => {\r\n        return step !== 0;\r\n      });\r\n  }\r\n\r\n  by_range(startkey, step = 0) {\r\n\r\n    const {pouch} = $p.adapters;\r\n    const {templates, doc} = pouch.local;\r\n\r\n    return (templates || doc).query('doc/doc_nom_prices_setup_slice_last',\r\n      {\r\n        limit: 600,\r\n        include_docs: false,\r\n        startkey: startkey || [''],\r\n        endkey: ['\\ufff0'],\r\n        reduce: true,\r\n        group: true,\r\n      })\r\n      .then((res) => {\r\n        this.build_cache(res.rows);\r\n        pouch.emit('nom_prices', ++step);\r\n        if (res.rows.length === 600) {\r\n          return this.by_range(res.rows[res.rows.length - 1].key, step);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        $p.record_log(err);\r\n      });\r\n  }\r\n\r\n  by_doc({goods}) {\r\n    const keys = goods.map(({nom, nom_characteristic, price_type}) => [nom, nom_characteristic, price_type]);\r\n    const {templates, doc} = $p.adapters.pouch.local;\r\n    return (templates || doc).query(\"doc/doc_nom_prices_setup_slice_last\",\r\n      {\r\n        include_docs: false,\r\n        keys: keys,\r\n        reduce: true,\r\n        group: true,\r\n      })\r\n      .then((res) => {\r\n        this.build_cache(res.rows);\r\n      });\r\n  }\r\n\r\n  nom_price(nom, characteristic, price_type, prm, row) {\r\n\r\n    if (row && prm) {\r\n      const {_owner} = prm.calc_order_row._owner,\r\n        price_prm = {\r\n          price_type: price_type,\r\n          characteristic: characteristic,\r\n          date: _owner.date,\r\n          currency: _owner.doc_currency\r\n        };\r\n\r\n      if (price_type == prm.price_type.price_type_first_cost && !prm.price_type.formula.empty()) {\r\n        price_prm.formula = prm.price_type.formula;\r\n      }\r\n      else if(price_type == prm.price_type.price_type_sale && !prm.price_type.sale_formula.empty()){\r\n        price_prm.formula = prm.price_type.sale_formula;\r\n      }\r\n      if(!characteristic.clr.empty()){\r\n        price_prm.clr = characteristic.clr;\r\n      }\r\n      row.price = nom._price(price_prm);\r\n\r\n      return row.price;\r\n    }\r\n  }\r\n\r\n  price_type(prm) {\r\n\r\n    const {utils, job_prm, enm, ireg, cat} = $p;\r\n    const empty_formula = cat.formulas.get();\r\n    const empty_price_type = cat.nom_prices_types.get();\r\n\r\n    prm.price_type = {\r\n      marginality: 1.9,\r\n      marginality_min: 1.2,\r\n      marginality_internal: 1.5,\r\n      discount: 0,\r\n      discount_external: 10,\r\n      extra_charge_external: 0,\r\n      price_type_first_cost: empty_price_type,\r\n      price_type_sale: empty_price_type,\r\n      price_type_internal: empty_price_type,\r\n      formula: empty_formula,\r\n      sale_formula: empty_formula,\r\n      internal_formula: empty_formula,\r\n      external_formula: empty_formula\r\n    };\r\n\r\n    const {calc_order_row} = prm;\r\n    const {nom, characteristic} = calc_order_row;\r\n    const {partner} = calc_order_row._owner._owner;\r\n    const filter = nom.price_group.empty() ?\r\n        {price_group: nom.price_group} :\r\n        {price_group: {in: [nom.price_group, cat.price_groups.get()]}};\r\n    const ares = [];\r\n\r\n\r\n    ireg.margin_coefficients.find_rows(filter, (row) => {\r\n\r\n      let ok = true;\r\n      if(!row.key.empty()){\r\n        row.key.params.forEach((row_prm) => {\r\n\r\n          const {property} = row_prm;\r\n          if(property.is_calculated){\r\n            ok = utils.check_compare(property.calculated_value({calc_order_row}), property.extract_value(row_prm), row_prm.comparison_type, enm.comparison_types);\r\n          }\r\n          else if(property.empty()){\r\n            const vpartner = cat.partners.get(row_prm._obj.value);\r\n            if(vpartner && !vpartner.empty()){\r\n              ok = vpartner == partner;\r\n            }\r\n          }\r\n          else{\r\n            let finded;\r\n            characteristic.params.find_rows({\r\n              cnstr: 0,\r\n              param: property\r\n            }, (row_x) => {\r\n              finded = row_x;\r\n              return false;\r\n            });\r\n            if(finded){\r\n              ok = utils.check_compare(finded.value, property.extract_value(row_prm), row_prm.comparison_type, enm.comparison_types);\r\n            }\r\n            else{\r\n              ok = false;\r\n            }\r\n          }\r\n          if(!ok){\r\n            return false;\r\n          }\r\n        })\r\n      }\r\n      if(ok){\r\n        ares.push(row);\r\n      }\r\n    });\r\n\r\n    if(ares.length){\r\n      ares.sort((a, b) => {\r\n\r\n        if ((!a.key.empty() && b.key.empty()) || (a.key.priority > b.key.priority)) {\r\n          return -1;\r\n        }\r\n        if ((a.key.empty() && !b.key.empty()) || (a.key.priority < b.key.priority)) {\r\n          return 1;\r\n        }\r\n\r\n        if (a.price_group.ref > b.price_group.ref) {\r\n          return -1;\r\n        }\r\n        if (a.price_group.ref < b.price_group.ref) {\r\n          return 1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n      Object.keys(prm.price_type).forEach((key) => {\r\n        prm.price_type[key] = ares[0][key];\r\n      });\r\n    }\r\n\r\n    partner.extra_fields.find_rows({\r\n      property: job_prm.pricing.dealer_surcharge\r\n    }, (row) => {\r\n      const val = parseFloat(row.value);\r\n      if(val){\r\n        prm.price_type.extra_charge_external = val;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return prm.price_type;\r\n  }\r\n\r\n  calc_first_cost(prm) {\r\n\r\n    const {marginality_in_spec} = $p.job_prm.pricing;\r\n    const fake_row = {};\r\n    const {calc_order_row, spec} = prm;\r\n\r\n    if(!spec) {\r\n      return;\r\n    }\r\n\r\n    if(spec.count()){\r\n      spec.forEach((row) => {\r\n\r\n        const {_obj, nom, characteristic} = row;\r\n\r\n        this.nom_price(nom, characteristic, prm.price_type.price_type_first_cost, prm, _obj);\r\n        _obj.amount = _obj.price * _obj.totqty1;\r\n\r\n        if(marginality_in_spec){\r\n          fake_row.nom = nom;\r\n          const tmp_price = this.nom_price(nom, characteristic, prm.price_type.price_type_sale, prm, fake_row);\r\n          _obj.amount_marged = tmp_price * _obj.totqty1;\r\n        }\r\n\r\n      });\r\n      calc_order_row.first_cost = spec.aggregate([], [\"amount\"]).round(2);\r\n    }\r\n    else{\r\n      fake_row.nom = calc_order_row.nom;\r\n      fake_row.characteristic = calc_order_row.characteristic;\r\n      calc_order_row.first_cost = this.nom_price(fake_row.nom, fake_row.characteristic, prm.price_type.price_type_first_cost, prm, fake_row);\r\n    }\r\n\r\n    prm.order_rows && prm.order_rows.forEach((value) => {\r\n      const fake_prm = {\r\n        spec: value.characteristic.specification,\r\n        calc_order_row: value\r\n      }\r\n      this.price_type(fake_prm);\r\n      this.calc_first_cost(fake_prm);\r\n    });\r\n  }\r\n\r\n  calc_amount (prm) {\r\n\r\n    const {calc_order_row, price_type, first_cost} = prm;\r\n    const {marginality_in_spec, not_update} = $p.job_prm.pricing;\r\n    const {rounding} = calc_order_row._owner._owner;\r\n\r\n    if(calc_order_row.price && not_update && (not_update.includes(calc_order_row.nom) || not_update.includes(calc_order_row.nom.parent))) {\r\n      ;\r\n    }\r\n    else {\r\n      const price_cost = marginality_in_spec && prm.spec.count() ?\r\n        prm.spec.aggregate([], [\"amount_marged\"]) :\r\n        this.nom_price(calc_order_row.nom, calc_order_row.characteristic, price_type.price_type_sale, prm, {});\r\n\r\n      if(price_cost){\r\n        calc_order_row.price = price_cost.round(rounding);\r\n      }\r\n      else if(marginality_in_spec && !first_cost) {\r\n        calc_order_row.price = this.nom_price(calc_order_row.nom, calc_order_row.characteristic, price_type.price_type_sale, prm, {});\r\n      }\r\n      else{\r\n        calc_order_row.price = (calc_order_row.first_cost * price_type.marginality).round(rounding);\r\n      }\r\n    }\r\n\r\n    calc_order_row.marginality = calc_order_row.first_cost ?\r\n      calc_order_row.price * ((100 - calc_order_row.discount_percent)/100) / calc_order_row.first_cost : 0;\r\n\r\n\r\n    let extra_charge = $p.wsql.get_user_param(\"surcharge_internal\", \"number\");\r\n    if(!$p.current_user.partners_uids.length || !extra_charge){\r\n      extra_charge = price_type.extra_charge_external || 0;\r\n    }\r\n\r\n    calc_order_row.price_internal = (calc_order_row.price * (100 - calc_order_row.discount_percent)/100 * (100 + extra_charge)/100).round(rounding);\r\n\r\n    !prm.hand_start && calc_order_row.value_change(\"price\", {}, calc_order_row.price, true);\r\n\r\n    prm.order_rows && prm.order_rows.forEach((value) => {\r\n      const fake_prm = {\r\n        spec: value.characteristic.specification,\r\n        calc_order_row: value\r\n      }\r\n      this.price_type(fake_prm);\r\n      this.calc_amount(fake_prm);\r\n    });\r\n\r\n  }\r\n\r\n  from_currency_to_currency (amount, date, from, to) {\r\n\r\n    const {main_currency} = $p.job_prm.pricing;\r\n\r\n    if(!to || to.empty()){\r\n      to = main_currency;\r\n    }\r\n    if(!from || from.empty()){\r\n      from = main_currency;\r\n    }\r\n    if(from == to){\r\n      return amount;\r\n    }\r\n    if(!date){\r\n      date = new Date();\r\n    }\r\n    if(!this.cource_sql){\r\n      this.cource_sql = $p.wsql.alasql.compile(\"select top 1 * from `ireg_currency_courses` where `currency` = ? and `period` <= ? order by `period` desc\");\r\n    }\r\n\r\n    let cfrom = {course: 1, multiplicity: 1},\r\n      cto = {course: 1, multiplicity: 1};\r\n    if(from != main_currency){\r\n      const tmp = this.cource_sql([from.ref, date]);\r\n      if(tmp.length)\r\n        cfrom = tmp[0];\r\n    }\r\n    if(to != main_currency){\r\n      const tmp = this.cource_sql([to.ref, date]);\r\n      if(tmp.length)\r\n        cto = tmp[0];\r\n    }\r\n\r\n    return (amount * cfrom.course / cfrom.multiplicity) * cto.multiplicity / cto.course;\r\n  }\r\n\r\n  cut_upload () {\r\n\r\n    if(!$p.current_user.role_available(\"СогласованиеРасчетовЗаказов\") && !$p.current_user.role_available(\"ИзменениеТехнологическойНСИ\")){\r\n      $p.msg.show_msg({\r\n        type: \"alert-error\",\r\n        text: $p.msg.error_low_acl,\r\n        title: $p.msg.error_rights\r\n      });\r\n      return true;\r\n    }\r\n\r\n    function upload_acc() {\r\n      const mgrs = [\r\n        \"cat.users\",\r\n        \"cat.individuals\",\r\n        \"cat.organizations\",\r\n        \"cat.partners\",\r\n        \"cat.contracts\",\r\n        \"cat.currencies\",\r\n        \"cat.nom_prices_types\",\r\n        \"cat.price_groups\",\r\n        \"cat.cashboxes\",\r\n        \"cat.partner_bank_accounts\",\r\n        \"cat.organization_bank_accounts\",\r\n        \"cat.projects\",\r\n        \"cat.stores\",\r\n        \"cat.cash_flow_articles\",\r\n        \"cat.cost_items\",\r\n        \"cat.price_groups\",\r\n        \"cat.delivery_areas\",\r\n        \"ireg.currency_courses\",\r\n        \"ireg.margin_coefficients\"\r\n      ];\r\n\r\n      const {pouch} = $p.adapters;\r\n      pouch.local.ram.replicate.to(pouch.remote.ram, {\r\n        filter: (doc) => mgrs.indexOf(doc._id.split(\"|\")[0]) != -1\r\n      })\r\n        .on('change', (info) => {\r\n\r\n        })\r\n        .on('paused', (err) => {\r\n\r\n        })\r\n        .on('active', () => {\r\n\r\n        })\r\n        .on('denied', (err) => {\r\n          $p.msg.show_msg(err.reason);\r\n          $p.record_log(err);\r\n\r\n        })\r\n        .on('complete', (info) => {\r\n\r\n          if($p.current_user.role_available(\"ИзменениеТехнологическойНСИ\"))\r\n            upload_tech();\r\n\r\n          else\r\n            $p.msg.show_msg({\r\n              type: \"alert-info\",\r\n              text: $p.msg.sync_complite,\r\n              title: $p.msg.sync_title\r\n            });\r\n\r\n        })\r\n        .on('error', (err) => {\r\n          $p.msg.show_msg(err.reason);\r\n          $p.record_log(err);\r\n\r\n        });\r\n    }\r\n\r\n    function upload_tech() {\r\n      const mgrs = [\r\n        \"cat.units\",\r\n        \"cat.nom\",\r\n        \"cat.nom_groups\",\r\n        \"cat.nom_units\",\r\n        \"cat.nom_kinds\",\r\n        \"cat.elm_visualization\",\r\n        \"cat.destinations\",\r\n        \"cat.property_values\",\r\n        \"cat.property_values_hierarchy\",\r\n        \"cat.inserts\",\r\n        \"cat.insert_bind\",\r\n        \"cat.color_price_groups\",\r\n        \"cat.clrs\",\r\n        \"cat.furns\",\r\n        \"cat.cnns\",\r\n        \"cat.production_params\",\r\n        \"cat.parameters_keys\",\r\n        \"cat.formulas\",\r\n        \"cch.properties\",\r\n        \"cch.predefined_elmnts\"\r\n\r\n      ];\r\n      const {pouch} = $p.adapters;\r\n      pouch.local.ram.replicate.to(pouch.remote.ram, {\r\n        filter: (doc) => mgrs.indexOf(doc._id.split(\"|\")[0]) != -1\r\n      })\r\n        .on('change', (info) => {\r\n\r\n        })\r\n        .on('paused', (err) => {\r\n\r\n        })\r\n        .on('active', () => {\r\n\r\n        })\r\n        .on('denied', (err) => {\r\n          $p.msg.show_msg(err.reason);\r\n          $p.record_log(err);\r\n\r\n        })\r\n        .on('complete', (info) => {\r\n          $p.msg.show_msg({\r\n            type: \"alert-info\",\r\n            text: $p.msg.sync_complite,\r\n            title: $p.msg.sync_title\r\n          });\r\n\r\n        })\r\n        .on('error', (err) => {\r\n          $p.msg.show_msg(err.reason);\r\n          $p.record_log(err);\r\n\r\n        });\r\n    }\r\n\r\n    if($p.current_user.role_available(\"СогласованиеРасчетовЗаказов\"))\r\n      upload_acc();\r\n    else\r\n      upload_tech();\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n$p.pricing = new Pricing($p);\r\n\r\n\r\nclass ProductsBuilding {\r\n\r\n  constructor(listen) {\r\n\r\n    let added_cnn_spec,\r\n      ox,\r\n      spec,\r\n      constructions,\r\n      coordinates,\r\n      cnn_elmnts,\r\n      glass_specification,\r\n      params;\r\n\r\n\r\n\r\n    function cnn_row(elm1, elm2) {\r\n      let res = cnn_elmnts.find_rows({elm1: elm1, elm2: elm2});\r\n      if(res.length) {\r\n        return res[0].row;\r\n      }\r\n      res = cnn_elmnts.find_rows({elm1: elm2, elm2: elm1});\r\n      if(res.length) {\r\n        return res[0].row;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    function cnn_need_add_spec(cnn, elm1, elm2, point) {\r\n      if(cnn && cnn.cnn_type == $p.enm.cnn_types.xx) {\r\n        if(!added_cnn_spec.points) {\r\n          added_cnn_spec.points = [];\r\n        }\r\n        for (let p of added_cnn_spec.points) {\r\n          if(p.is_nearest(point, true)) {\r\n            return false;\r\n          }\r\n        }\r\n        added_cnn_spec.points.push(point);\r\n        return true;\r\n      }\r\n      else if(!cnn || !elm1 || !elm2 || added_cnn_spec[elm1] == elm2 || added_cnn_spec[elm2] == elm1) {\r\n        return false;\r\n      }\r\n      added_cnn_spec[elm1] = elm2;\r\n      return true;\r\n    }\r\n\r\n\r\n    function cnn_add_spec(cnn, elm, len_angl, cnn_other) {\r\n      if(!cnn) {\r\n        return;\r\n      }\r\n      const {enm, CatInserts, utils} = $p;\r\n      const sign = cnn.cnn_type == enm.cnn_types.ii ? -1 : 1;\r\n      const {new_spec_row, calc_count_area_mass} = ProductsBuilding;\r\n\r\n      cnn.filtered_spec({elm, len_angl, ox}).forEach((row_cnn_spec) => {\r\n\r\n        const {nom} = row_cnn_spec;\r\n\r\n        if(nom instanceof CatInserts) {\r\n          if(len_angl && (row_cnn_spec.sz || row_cnn_spec.coefficient)) {\r\n            const tmp_len_angl = utils._clone(len_angl);\r\n            tmp_len_angl.len = (len_angl.len - sign * 2 * row_cnn_spec.sz) * (row_cnn_spec.coefficient || 0.001);\r\n            nom.calculate_spec({elm, len_angl: tmp_len_angl, ox});\r\n          }\r\n          else {\r\n            nom.calculate_spec({elm, len_angl, ox});\r\n          }\r\n        }\r\n        else {\r\n\r\n          const row_spec = new_spec_row({row_base: row_cnn_spec, origin: len_angl.origin || cnn, elm, nom, spec, ox});\r\n\r\n          if(nom.is_pieces) {\r\n            if(!row_cnn_spec.coefficient) {\r\n              row_spec.qty = row_cnn_spec.quantity;\r\n            }\r\n            else {\r\n              row_spec.qty = ((len_angl.len - sign * 2 * row_cnn_spec.sz) * row_cnn_spec.coefficient * row_cnn_spec.quantity - 0.5)\r\n                .round(nom.rounding_quantity);\r\n            }\r\n          }\r\n          else {\r\n            row_spec.qty = row_cnn_spec.quantity;\r\n\r\n            if(row_cnn_spec.sz || row_cnn_spec.coefficient) {\r\n              let sz = row_cnn_spec.sz, finded, qty;\r\n              if(cnn_other) {\r\n                cnn_other.specification.find_rows({nom}, (row) => {\r\n                  sz += row.sz;\r\n                  qty = row.quantity;\r\n                  return !(finded = true);\r\n                });\r\n              }\r\n              if(!finded) {\r\n                sz *= 2;\r\n              }\r\n              if(!row_spec.qty && finded && len_angl.art1) {\r\n                row_spec.qty = qty;\r\n              }\r\n              row_spec.len = (len_angl.len - sign * sz) * (row_cnn_spec.coefficient || 0.001);\r\n            }\r\n          }\r\n\r\n          if(!row_cnn_spec.formula.empty()) {\r\n            const qty = row_cnn_spec.formula.execute({\r\n              ox,\r\n              elm,\r\n              len_angl,\r\n              cnstr: 0,\r\n              inset: utils.blank.guid,\r\n              row_cnn: row_cnn_spec,\r\n              row_spec: row_spec\r\n            });\r\n            if(row_cnn_spec.formula.condition_formula && !qty){\r\n              row_spec.qty = 0;\r\n            }\r\n          }\r\n          calc_count_area_mass(row_spec, spec, len_angl, row_cnn_spec.angle_calc_method);\r\n        }\r\n\r\n      });\r\n    }\r\n\r\n\r\n    function furn_spec(contour) {\r\n\r\n      if(!contour.parent) {\r\n        return false;\r\n      }\r\n\r\n      const {furn_cache, furn} = contour;\r\n      const {new_spec_row, calc_count_area_mass} = ProductsBuilding;\r\n\r\n      if(!furn_check_opening_restrictions(contour, furn_cache)) {\r\n        return;\r\n      }\r\n\r\n      contour.update_handle_height(furn_cache);\r\n\r\n      const blank_clr = $p.cat.clrs.get();\r\n      const {cnstr} = contour;\r\n      furn.furn_set.get_spec(contour, furn_cache).forEach((row) => {\r\n        const elm = {elm: -cnstr, clr: blank_clr};\r\n        const row_spec = new_spec_row({elm, row_base: row, origin: row.origin, specify: row.specify, spec, ox});\r\n\r\n        if(row.is_procedure_row) {\r\n          row_spec.elm = row.handle_height_min;\r\n          row_spec.len = row.coefficient / 1000;\r\n          row_spec.qty = 0;\r\n          row_spec.totqty = 1;\r\n          row_spec.totqty1 = 1;\r\n        }\r\n        else {\r\n          row_spec.qty = row.quantity * (!row.coefficient ? 1 : row.coefficient);\r\n          calc_count_area_mass(row_spec, spec);\r\n        }\r\n      });\r\n\r\n      if(furn.furn_set.flap_weight_max) {\r\n        const map = new Map();\r\n        let weight = 0;\r\n        spec.forEach((row) => {\r\n          if(row.elm > 0) {\r\n            if(!map.get(row.elm)) {\r\n              const crow = ox.coordinates.find({elm: row.elm});\r\n              map.set(row.elm, crow ? crow.cnstr : Infinity);\r\n            }\r\n            if(map.get(row.elm) !== cnstr) return;\r\n          }\r\n          else if(row.elm !== -cnstr) {\r\n            return;\r\n          }\r\n          weight += row.nom.density * row.totqty;\r\n        });\r\n        if(weight > furn.furn_set.flap_weight_max) {\r\n          const row_base = {clr: blank_clr, nom: $p.job_prm.nom.flap_weight_max};\r\n          contour.profiles.forEach(elm => {\r\n            new_spec_row({elm, row_base, origin: furn, spec, ox});\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    function furn_check_opening_restrictions(contour, cache) {\r\n\r\n      let ok = true;\r\n      const {new_spec_row} = ProductsBuilding;\r\n      const {side_count, furn, direction} = contour;\r\n\r\n      if(furn.open_type !== $p.enm.open_types.Глухое && furn.side_count && side_count !== furn.side_count) {\r\n        const row_base = {clr: $p.cat.clrs.get(), nom: $p.job_prm.nom.furn_error};\r\n        contour.profiles.forEach(elm => {\r\n          new_spec_row({elm, row_base, origin: furn, spec, ox});\r\n        });\r\n        return ok = false;\r\n      }\r\n\r\n      furn.open_tunes.forEach((row) => {\r\n        const elm = contour.profile_by_furn_side(row.side, cache);\r\n        const prev = contour.profile_by_furn_side(row.side === 1 ? side_count : row.side - 1, cache);\r\n        const next = contour.profile_by_furn_side(row.side === side_count ? 1 : row.side + 1, cache);\r\n        const len = elm._row.len - prev.nom.sizefurn - next.nom.sizefurn;\r\n\r\n        const angle = direction == $p.enm.open_directions.Правое ?\r\n          elm.generatrix.angle_to(prev.generatrix, elm.e) :\r\n          prev.generatrix.angle_to(elm.generatrix, elm.b);\r\n\r\n        const {lmin, lmax, amin, amax} = row;\r\n        if(len < lmin || len > lmax || angle < amin || (angle > amax && amax > 0) || (!elm.is_linear() && !row.arc_available)) {\r\n          new_spec_row({elm, row_base: {clr: $p.cat.clrs.get(), nom: $p.job_prm.nom.furn_error}, origin: furn, spec, ox});\r\n          ok = false;\r\n        }\r\n      });\r\n\r\n      return ok;\r\n    }\r\n\r\n\r\n    function cnn_spec_nearest(elm) {\r\n      const nearest = elm.nearest();\r\n      if(nearest && nearest._row.clr != $p.cat.clrs.predefined('НеВключатьВСпецификацию') && elm._attr._nearest_cnn) {\r\n        cnn_add_spec(elm._attr._nearest_cnn, elm, {\r\n          angle: 0,\r\n          alp1: 0,\r\n          alp2: 0,\r\n          len: elm._attr._len,\r\n          origin: cnn_row(elm.elm, nearest.elm)\r\n        });\r\n      }\r\n    }\r\n\r\n    function base_spec_profile(elm) {\r\n\r\n      const {_row, rays} = elm;\r\n\r\n      if(_row.nom.empty() || _row.nom.is_service || _row.nom.is_procedure || _row.clr == $p.cat.clrs.predefined('НеВключатьВСпецификацию')) {\r\n        return;\r\n      }\r\n\r\n      const {b, e} = rays;\r\n\r\n      if(!b.cnn || !e.cnn) {\r\n        return;\r\n      }\r\n      b.check_err();\r\n      e.check_err();\r\n\r\n      const prev = b.profile;\r\n      const next = e.profile;\r\n      const row_cnn_prev = b.cnn && b.cnn.main_row(elm);\r\n      const row_cnn_next = e.cnn && e.cnn.main_row(elm);\r\n      const {new_spec_row, calc_count_area_mass} = ProductsBuilding;\r\n\r\n      let row_spec;\r\n\r\n      const row_cnn = row_cnn_prev || row_cnn_next;\r\n      if(row_cnn) {\r\n\r\n        row_spec = new_spec_row({elm, row_base: row_cnn, nom: _row.nom, origin: cnn_row(_row.elm, prev ? prev.elm : 0), spec, ox});\r\n        row_spec.qty = row_cnn.quantity;\r\n\r\n        const seam = $p.enm.angle_calculating_ways.СварнойШов;\r\n        const d45 = Math.sin(Math.PI / 4);\r\n        const dprev = row_cnn_prev ? (\r\n          row_cnn_prev.angle_calc_method == seam && _row.alp1 > 0 ? row_cnn_prev.sz * d45 / Math.sin(_row.alp1 / 180 * Math.PI) : row_cnn_prev.sz\r\n        ) : 0;\r\n        const dnext = row_cnn_next ? (\r\n          row_cnn_next.angle_calc_method == seam && _row.alp2 > 0 ? row_cnn_next.sz * d45 / Math.sin(_row.alp2 / 180 * Math.PI) : row_cnn_next.sz\r\n        ) : 0;\r\n\r\n        row_spec.len = (_row.len - dprev - dnext)\r\n          * ((row_cnn_prev ? row_cnn_prev.coefficient : 0.001) + (row_cnn_next ? row_cnn_next.coefficient : 0.001)) / 2;\r\n\r\n        elm._attr._len = _row.len;\r\n        _row.len = (_row.len\r\n          - (!row_cnn_prev || row_cnn_prev.angle_calc_method == seam ? 0 : row_cnn_prev.sz)\r\n          - (!row_cnn_next || row_cnn_next.angle_calc_method == seam ? 0 : row_cnn_next.sz))\r\n          * 1000 * ( (row_cnn_prev ? row_cnn_prev.coefficient : 0.001) + (row_cnn_next ? row_cnn_next.coefficient : 0.001)) / 2;\r\n\r\n        if(!elm.is_linear()) {\r\n          row_spec.len = row_spec.len + _row.nom.arc_elongation / 1000;\r\n        }\r\n\r\n        if(row_cnn_prev && !row_cnn_prev.formula.empty()) {\r\n          row_cnn_prev.formula.execute({\r\n            ox: ox,\r\n            elm: elm,\r\n            cnstr: 0,\r\n            inset: $p.utils.blank.guid,\r\n            row_cnn: row_cnn_prev,\r\n            row_spec: row_spec\r\n          });\r\n        }\r\n        else if(row_cnn_next && !row_cnn_next.formula.empty()) {\r\n          row_cnn_next.formula.execute({\r\n            ox: ox,\r\n            elm: elm,\r\n            cnstr: 0,\r\n            inset: $p.utils.blank.guid,\r\n            row_cnn: row_cnn_next,\r\n            row_spec: row_spec\r\n          });\r\n        }\r\n\r\n        const angle_calc_method_prev = row_cnn_prev ? row_cnn_prev.angle_calc_method : null;\r\n        const angle_calc_method_next = row_cnn_next ? row_cnn_next.angle_calc_method : null;\r\n        const {СоединениеПополам: s2, Соединение: s1} = $p.enm.angle_calculating_ways;\r\n        calc_count_area_mass(\r\n          row_spec,\r\n          spec,\r\n          _row,\r\n          angle_calc_method_prev,\r\n          angle_calc_method_next,\r\n          angle_calc_method_prev == s2 || angle_calc_method_prev == s1 ? prev.generatrix.angle_to(elm.generatrix, b.point) : 0,\r\n          angle_calc_method_next == s2 || angle_calc_method_next == s1 ? elm.generatrix.angle_to(next.generatrix, e.point) : 0\r\n        );\r\n      }\r\n\r\n      const len_angl = {\r\n        angle: 0,\r\n        alp1: prev ? prev.generatrix.angle_to(elm.generatrix, elm.b, true) : 90,\r\n        alp2: next ? elm.generatrix.angle_to(next.generatrix, elm.e, true) : 90,\r\n        len: row_spec ? row_spec.len * 1000 : _row.len,\r\n        art1: false,\r\n        art2: true,\r\n        node: 'e',\r\n      };\r\n      if(cnn_need_add_spec(b.cnn, _row.elm, prev ? prev.elm : 0, b.point)) {\r\n\r\n\r\n        len_angl.angle = len_angl.alp2;\r\n\r\n        if(b.cnn.cnn_type == $p.enm.cnn_types.t || b.cnn.cnn_type == $p.enm.cnn_types.i || b.cnn.cnn_type == $p.enm.cnn_types.xx) {\r\n          if(cnn_need_add_spec(e.cnn, next ? next.elm : 0, _row.elm, e.point)) {\r\n            cnn_add_spec(e.cnn, elm, len_angl, b.cnn);\r\n          }\r\n        }\r\n        else {\r\n          cnn_add_spec(e.cnn, elm, len_angl, b.cnn);\r\n        }\r\n\r\n        len_angl.angle = len_angl.alp1;\r\n        len_angl.art2 = false;\r\n        len_angl.art1 = true;\r\n        len_angl.node = 'b';\r\n        cnn_add_spec(b.cnn, elm, len_angl, e.cnn);\r\n      }\r\n\r\n      elm.inset.calculate_spec({elm, ox});\r\n\r\n      cnn_spec_nearest(elm);\r\n\r\n      elm.addls.forEach(base_spec_profile);\r\n\r\n      const spec_tmp = spec;\r\n\r\n      ox.inserts.find_rows({cnstr: -elm.elm}, ({inset, clr}) => {\r\n\r\n        if(inset.is_order_row == $p.enm.specification_order_row_types.Продукция) {\r\n          const cx = Object.assign(ox.find_create_cx(elm.elm, inset.ref), inset.contour_attrs(elm.layer));\r\n          ox._order_rows.push(cx);\r\n          spec = cx.specification.clear();\r\n        }\r\n        else {\r\n          spec = spec_tmp;\r\n        }\r\n\r\n        len_angl.origin = inset;\r\n        len_angl.angle = elm.angle_hor;\r\n        len_angl.cnstr = -elm.elm;\r\n        delete len_angl.art1;\r\n        delete len_angl.art2;\r\n        inset.calculate_spec({elm, len_angl, ox, spec});\r\n\r\n      });\r\n      spec = spec_tmp;\r\n    }\r\n\r\n    function base_spec_sectional(elm) {\r\n\r\n      const {_row, _attr, inset, layer} = elm;\r\n\r\n      if(_row.nom.empty() || _row.nom.is_service || _row.nom.is_procedure || _row.clr == $p.cat.clrs.predefined('НеВключатьВСпецификацию')) {\r\n        return;\r\n      }\r\n\r\n      inset.calculate_spec({elm, ox});\r\n\r\n      const spec_tmp = spec;\r\n\r\n      ox.inserts.find_rows({cnstr: -elm.elm}, ({inset, clr}) => {\r\n\r\n        if(inset.is_order_row == $p.enm.specification_order_row_types.Продукция) {\r\n          const cx = Object.assign(ox.find_create_cx(elm.elm, inset.ref), inset.contour_attrs(layer));\r\n          ox._order_rows.push(cx);\r\n          spec = cx.specification.clear();\r\n        }\r\n        else {\r\n          spec = spec_tmp;\r\n        }\r\n\r\n        const len_angl = {\r\n          angle: 0,\r\n          alp1: 0,\r\n          alp2: 0,\r\n          len: 0,\r\n          origin: inset,\r\n          cnstr: -elm.elm\r\n        };\r\n        inset.calculate_spec({elm, len_angl, ox, spec});\r\n\r\n      });\r\n\r\n      spec = spec_tmp;\r\n\r\n    }\r\n\r\n    function base_spec_glass(elm) {\r\n\r\n      const {profiles, imposts, _row} = elm;\r\n\r\n      if(_row.clr == $p.cat.clrs.predefined('НеВключатьВСпецификацию')) {\r\n        return;\r\n      }\r\n\r\n      const glength = profiles.length;\r\n\r\n      for (let i = 0; i < glength; i++) {\r\n        const curr = profiles[i];\r\n\r\n        if(curr.profile && curr.profile._row.clr == $p.cat.clrs.predefined('НеВключатьВСпецификацию')) {\r\n          return;\r\n        }\r\n\r\n        const prev = (i == 0 ? profiles[glength - 1] : profiles[i - 1]).profile;\r\n        const next = (i == glength - 1 ? profiles[0] : profiles[i + 1]).profile;\r\n        const row_cnn = cnn_elmnts.find_rows({elm1: _row.elm, elm2: curr.profile.elm});\r\n\r\n        const len_angl = {\r\n          angle: 0,\r\n          alp1: prev.generatrix.angle_to(curr.profile.generatrix, curr.b, true),\r\n          alp2: curr.profile.generatrix.angle_to(next.generatrix, curr.e, true),\r\n          len: row_cnn.length ? row_cnn[0].aperture_len : 0,\r\n          origin: cnn_row(_row.elm, curr.profile.elm)\r\n        };\r\n\r\n        (len_angl.len > 3) && cnn_add_spec(curr.cnn, curr.profile, len_angl);\r\n\r\n      }\r\n\r\n      elm.inset.calculate_spec({elm, ox});\r\n\r\n      imposts.forEach(base_spec_profile);\r\n\r\n      const spec_tmp = spec;\r\n\r\n      ox.inserts.find_rows({cnstr: -elm.elm}, ({inset, clr}) => {\r\n        const len_angl = {\r\n          angle: 0,\r\n          alp1: 0,\r\n          alp2: 0,\r\n          len: 0,\r\n          origin: inset,\r\n          cnstr: -elm.elm\r\n        };\r\n        if(inset.is_order_row == $p.enm.specification_order_row_types.Продукция) {\r\n          const cx = Object.assign(ox.find_create_cx(elm.elm, inset.ref), inset.contour_attrs(elm.layer));\r\n          ox._order_rows.push(cx);\r\n          spec = cx.specification.clear();\r\n        }\r\n        else {\r\n          spec = spec_tmp;\r\n        }\r\n        inset.calculate_spec({elm, len_angl, ox, spec});\r\n      });\r\n      spec = spec_tmp;\r\n    }\r\n\r\n\r\n    function inset_contour_spec(contour) {\r\n\r\n      const spec_tmp = spec;\r\n\r\n      ox.inserts.find_rows({cnstr: contour.cnstr}, ({inset, clr}) => {\r\n\r\n        if(inset.is_order_row == $p.enm.specification_order_row_types.Продукция) {\r\n          const cx = Object.assign(ox.find_create_cx(-contour.cnstr, inset.ref), inset.contour_attrs(contour));\r\n          ox._order_rows.push(cx);\r\n          spec = cx.specification.clear();\r\n        }\r\n        else {\r\n          spec = spec_tmp;\r\n        }\r\n\r\n        const elm = {\r\n          _row: {},\r\n          elm: 0,\r\n          clr: clr,\r\n          layer: contour,\r\n        };\r\n        const len_angl = {\r\n          angle: 0,\r\n          alp1: 0,\r\n          alp2: 0,\r\n          len: 0,\r\n          origin: inset,\r\n          cnstr: contour.cnstr\r\n        };\r\n        inset.calculate_spec({elm, len_angl, ox, spec});\r\n\r\n      });\r\n\r\n      spec = spec_tmp;\r\n    }\r\n\r\n    function base_spec(scheme) {\r\n\r\n      const {Contour, Filling, Sectional, Profile, ProfileConnective} = $p.Editor;\r\n\r\n      added_cnn_spec = {};\r\n\r\n      for (const contour of scheme.getItems({class: Contour})) {\r\n\r\n        for (const elm of contour.children) {\r\n          elm instanceof Profile && base_spec_profile(elm);\r\n        }\r\n\r\n        for (const elm of contour.children) {\r\n          if(elm instanceof Filling) {\r\n            base_spec_glass(elm);\r\n          }\r\n          else if(elm instanceof Sectional) {\r\n            base_spec_sectional(elm);\r\n          }\r\n        }\r\n\r\n        furn_spec(contour);\r\n\r\n        inset_contour_spec(contour);\r\n\r\n      }\r\n\r\n      for (const elm of scheme.l_connective.children) {\r\n        if(elm instanceof ProfileConnective) {\r\n          base_spec_profile(elm);\r\n        }\r\n      }\r\n\r\n      inset_contour_spec({\r\n        cnstr: 0,\r\n        project: scheme,\r\n        get perimeter() {\r\n          return this.project.perimeter;\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    this.recalc = function (scheme, attr) {\r\n\r\n\r\n      ox = scheme.ox;\r\n      spec = ox.specification;\r\n      constructions = ox.constructions;\r\n      coordinates = ox.coordinates;\r\n      cnn_elmnts = ox.cnn_elmnts;\r\n      glass_specification = ox.glass_specification;\r\n      params = ox.params;\r\n\r\n      spec.clear();\r\n\r\n      ox._order_rows = [];\r\n\r\n      base_spec(scheme);\r\n\r\n      spec.group_by('nom,clr,characteristic,len,width,s,elm,alp1,alp2,origin,specify,dop', 'qty,totqty,totqty1');\r\n\r\n\r\n\r\n      scheme.draw_visualization();\r\n      Promise.resolve().then(() => scheme._scope && !attr.silent && scheme._scope.eve.emit('coordinates_calculated', scheme, attr));\r\n\r\n\r\n      if(ox.calc_order_row) {\r\n        $p.spec_building.specification_adjustment({\r\n          scheme: scheme,\r\n          calc_order_row: ox.calc_order_row,\r\n          spec: spec,\r\n          save: attr.save,\r\n        }, true);\r\n      }\r\n\r\n      if(attr.snapshot) {\r\n        scheme.notify(scheme, 'scheme_snapshot', attr);\r\n      }\r\n\r\n      function finish() {\r\n        delete scheme._attr._saving;\r\n        ox._data._loading = false;\r\n      }\r\n\r\n      if(attr.save) {\r\n\r\n\r\n        if(attr.svg !== false) {\r\n          ox.svg = scheme.get_svg();\r\n        }\r\n\r\n        return ox.save().then(() => {\r\n          attr.svg !== false && $p.msg.show_msg([ox.name, 'Спецификация рассчитана']);\r\n          finish();\r\n\r\n          ox.calc_order.characteristic_saved(scheme, attr);\r\n          scheme._scope && !attr.silent && scheme._scope.eve.emit('characteristic_saved', scheme, attr);\r\n\r\n        })\r\n          .then(() => {\r\n            if(!scheme._attr._from_service && !attr._from_service && (scheme._scope || attr.close)) {\r\n              return new Promise((resolve, reject) => {\r\n                setTimeout(() => ox.calc_order._modified ?\r\n                  ox.calc_order.save()\r\n                    .then(resolve)\r\n                    .catch(reject)\r\n                  :\r\n                  resolve(ox), 1000)\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => {\r\n\r\n\r\n            finish();\r\n\r\n            if(err.msg && err.msg._shown) {\r\n              return;\r\n            }\r\n\r\n            let text = err.message || err;\r\n            if(ox._data && ox._data._err) {\r\n              if(typeof ox._data._err === 'object') {\r\n                !attr.silent && $p.md.emit('alert', Object.assign({obj: ox}, ox._data._err));\r\n                delete ox._data._err;\r\n                return;\r\n              }\r\n              text += `\\n${ox._data._err}`;\r\n              delete ox._data._err;\r\n            }\r\n\r\n            !attr.silent && $p.md.emit('alert', {type: 'alert-error', obj: ox, text});\r\n\r\n          });\r\n      }\r\n      else {\r\n        return Promise.resolve(finish());\r\n      }\r\n\r\n    };\r\n\r\n  }\r\n\r\n  static check_params({params, row_spec, elm, cnstr, origin, ox}) {\r\n\r\n    let ok = true;\r\n\r\n    params.find_rows({elm: row_spec.elm}, (prm_row) => {\r\n      ok = prm_row.param.check_condition({row_spec, prm_row, elm, cnstr, origin, ox});\r\n      if(!ok) {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return ok;\r\n  }\r\n\r\n  static new_spec_row({row_spec, elm, row_base, nom, origin, specify, spec, ox}) {\r\n    if(!row_spec) {\r\n      row_spec = spec.add();\r\n    }\r\n    row_spec.nom = nom || row_base.nom;\r\n    if(!row_spec.nom.visualization.empty()) {\r\n      row_spec.dop = -1;\r\n    }\r\n    else if(row_spec.nom.is_procedure) {\r\n      row_spec.dop = -2;\r\n    }\r\n    row_spec.characteristic = row_base.nom_characteristic;\r\n    if(!row_spec.characteristic.empty() && row_spec.characteristic.owner != row_spec.nom) {\r\n      row_spec.characteristic = $p.utils.blank.guid;\r\n    }\r\n    row_spec.clr = $p.cat.clrs.by_predefined(row_base ? row_base.clr : elm.clr, elm.clr, ox.clr, elm, spec);\r\n    row_spec.elm = elm.elm;\r\n    if(origin) {\r\n      row_spec.origin = origin;\r\n    }\r\n    if(specify) {\r\n      row_spec.specify = specify;\r\n    }\r\n    return row_spec;\r\n  }\r\n\r\n  static calc_qty_len(row_spec, row_base, len) {\r\n\r\n    const {nom} = row_spec;\r\n\r\n    if(nom.cutting_optimization_type == $p.enm.cutting_optimization_types.Нет ||\r\n      nom.cutting_optimization_type.empty() || nom.is_pieces) {\r\n      if(!row_base.coefficient || !len) {\r\n        row_spec.qty = row_base.quantity;\r\n      }\r\n      else {\r\n        if(!nom.is_pieces) {\r\n          row_spec.qty = row_base.quantity;\r\n          row_spec.len = (len - row_base.sz) * (row_base.coefficient || 0.001);\r\n          if(nom.rounding_quantity) {\r\n            row_spec.qty = (row_spec.qty * row_spec.len).round(nom.rounding_quantity);\r\n            row_spec.len = 0;\r\n          }\r\n          ;\r\n        }\r\n        else if(!nom.rounding_quantity) {\r\n          row_spec.qty = Math.round((len - row_base.sz) * row_base.coefficient * row_base.quantity - 0.5);\r\n        }\r\n        else {\r\n          row_spec.qty = ((len - row_base.sz) * row_base.coefficient * row_base.quantity).round(nom.rounding_quantity);\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      row_spec.qty = row_base.quantity;\r\n      row_spec.len = (len - row_base.sz) * (row_base.coefficient || 0.001);\r\n    }\r\n  }\r\n\r\n  static calc_count_area_mass(row_spec, spec, row_coord, angle_calc_method_prev, angle_calc_method_next, alp1, alp2) {\r\n\r\n    if(!row_spec.qty) {\r\n      if(row_spec.dop >= 0) {\r\n        spec.del(row_spec.row - 1, true);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if(row_spec.totqty1 && row_spec.totqty) {\r\n      return;\r\n    }\r\n\r\n    if(!angle_calc_method_next) {\r\n      angle_calc_method_next = angle_calc_method_prev;\r\n    }\r\n\r\n    if(angle_calc_method_prev && !row_spec.nom.is_pieces) {\r\n\r\n      const {Основной, СварнойШов, СоединениеПополам, Соединение, _90} = $p.enm.angle_calculating_ways;\r\n\r\n      if((angle_calc_method_prev == Основной) || (angle_calc_method_prev == СварнойШов)) {\r\n        row_spec.alp1 = row_coord.alp1;\r\n      }\r\n      else if(angle_calc_method_prev == _90) {\r\n        row_spec.alp1 = 90;\r\n      }\r\n      else if(angle_calc_method_prev == СоединениеПополам) {\r\n        row_spec.alp1 = (alp1 || row_coord.alp1) / 2;\r\n      }\r\n      else if(angle_calc_method_prev == Соединение) {\r\n        row_spec.alp1 = (alp1 || row_coord.alp1);\r\n      }\r\n\r\n      if((angle_calc_method_next == Основной) || (angle_calc_method_next == СварнойШов)) {\r\n        row_spec.alp2 = row_coord.alp2;\r\n      }\r\n      else if(angle_calc_method_next == _90) {\r\n        row_spec.alp2 = 90;\r\n      }\r\n      else if(angle_calc_method_next == СоединениеПополам) {\r\n        row_spec.alp2 = (alp2 || row_coord.alp2) / 2;\r\n      }\r\n      else if(angle_calc_method_next == Соединение) {\r\n        row_spec.alp2 = (alp2 || row_coord.alp2);\r\n      }\r\n    }\r\n\r\n    if(row_spec.len) {\r\n      if(row_spec.width && !row_spec.s) {\r\n        row_spec.s = row_spec.len * row_spec.width;\r\n      }\r\n    }\r\n    else {\r\n      row_spec.s = 0;\r\n    }\r\n\r\n    if(row_spec.s) {\r\n      row_spec.totqty = row_spec.qty * row_spec.s;\r\n    }\r\n    else if(row_spec.len) {\r\n      row_spec.totqty = row_spec.qty * row_spec.len;\r\n    }\r\n    else {\r\n      row_spec.totqty = row_spec.qty;\r\n    }\r\n\r\n    row_spec.totqty1 = row_spec.totqty * row_spec.nom.loss_factor;\r\n\r\n    ['len', 'width', 's', 'qty', 'alp1', 'alp2'].forEach((fld) => row_spec[fld] = row_spec[fld].round(4));\r\n    ['totqty', 'totqty1'].forEach((fld) => row_spec[fld] = row_spec[fld].round(6));\r\n  }\r\n\r\n}\r\n\r\nif(typeof global !== 'undefined'){\r\n  global.ProductsBuilding = ProductsBuilding;\r\n}\r\n$p.ProductsBuilding = ProductsBuilding;\r\n$p.products_building = new ProductsBuilding(true);\r\n\r\n\r\nclass SpecBuilding {\r\n\r\n  constructor($p) {\r\n\r\n  }\r\n\r\n  calc_row_spec (prm, cancel) {\r\n\r\n  }\r\n\r\n  specification_adjustment (attr, with_price) {\r\n\r\n    const {cat, pricing} = $p;\r\n    const {scheme, calc_order_row, spec, save} = attr;\r\n    const calc_order = calc_order_row._owner._owner;\r\n    const order_rows = new Map();\r\n    const adel = [];\r\n    const ox = calc_order_row.characteristic;\r\n    const nom = ox.empty() ? calc_order_row.nom : (calc_order_row.nom = ox.owner);\r\n\r\n    pricing.price_type(attr);\r\n\r\n    spec.find_rows({ch: {in: [-1, -2]}}, (row) => adel.push(row));\r\n    adel.forEach((row) => spec.del(row, true));\r\n\r\n    cat.insert_bind.insets(ox).forEach(({inset, elm_type}) => {\r\n\r\n      const elm = {\r\n        _row: {},\r\n        elm: 0,\r\n        get perimeter() {return scheme ? scheme.perimeter : []},\r\n        clr: ox.clr,\r\n        project: scheme,\r\n      };\r\n      const len_angl = {\r\n        angle: 0,\r\n        alp1: 0,\r\n        alp2: 0,\r\n        len: 0,\r\n        cnstr: 0,\r\n        origin: inset,\r\n      };\r\n      inset.calculate_spec({elm, len_angl, ox, spec});\r\n\r\n    });\r\n\r\n    if(!ox.empty()){\r\n      adel.length = 0;\r\n      calc_order.production.forEach((row) => {\r\n        if (row.ordn === ox){\r\n          if (ox._order_rows.indexOf(row.characteristic) === -1){\r\n            adel.push(row);\r\n          }\r\n          else {\r\n            order_rows.set(row.characteristic, row);\r\n          }\r\n        }\r\n      });\r\n      adel.forEach((row) => calc_order.production.del(row.row-1));\r\n    }\r\n\r\n    const ax = [];\r\n\r\n    ox._order_rows && ox._order_rows.forEach((cx) => {\r\n      const row = order_rows.get(cx) || calc_order.production.add({characteristic: cx});\r\n      row.nom = cx.owner;\r\n      row.unit = row.nom.storage_unit;\r\n      row.ordn = ox;\r\n      row.len = cx.x;\r\n      row.width = cx.y;\r\n      row.s = cx.s;\r\n      row.qty = calc_order_row.qty;\r\n      row.quantity = calc_order_row.quantity;\r\n\r\n      save && ax.push(cx.save());\r\n      order_rows.set(cx, row);\r\n    });\r\n    if(order_rows.size){\r\n      attr.order_rows = order_rows;\r\n    }\r\n\r\n    if(with_price){\r\n      pricing.calc_first_cost(attr);\r\n\r\n      pricing.calc_amount(attr);\r\n    }\r\n\r\n    if(save && !attr.scheme && (ox.is_new() || ox._modified)){\r\n      ax.push(ox.save());\r\n    }\r\n\r\n    return ax;\r\n  }\r\n\r\n}\r\n\r\n$p.spec_building = new SpecBuilding($p);\r\n\r\n\r\n(function ({classes: {DataManager, CatObj}, cat}) {\r\n  const {value_mgr} = DataManager.prototype;\r\n  DataManager.prototype.value_mgr = function(row, f, mf, array_enabled, v) {\r\n\t\tconst tmp = value_mgr.call(this, row, f, mf, array_enabled, v);\r\n\t\tif(tmp){\r\n      return tmp;\r\n    }\r\n\t\tif(f == 'trans'){\r\n      return $p.doc.calc_order;\r\n    }\r\n\t\telse if(f == 'partner'){\r\n      return $p.cat.partners;\r\n    }\r\n\t}\r\n})($p);\r\n\r\n\r\n(function(_mgr){\r\n\r\n\r\n\tObject.defineProperties(_mgr, {\r\n\t  ad: {\r\n\t    get() {\r\n        return this.УгловоеДиагональное;\r\n      }\r\n    },\r\n    av: {\r\n      get() {\r\n        return this.УгловоеКВертикальной;\r\n      }\r\n    },\r\n    ah: {\r\n      get() {\r\n        return this.УгловоеКГоризонтальной;\r\n      }\r\n    },\r\n    t: {\r\n      get() {\r\n        return this.ТОбразное;\r\n      }\r\n    },\r\n    ii: {\r\n      get() {\r\n        return this.Наложение;\r\n      }\r\n    },\r\n    i: {\r\n      get() {\r\n        return this.НезамкнутыйКонтур;\r\n      }\r\n    },\r\n    xt: {\r\n      get() {\r\n        return this.КрестПересечение;\r\n      }\r\n    },\r\n    xx: {\r\n      get() {\r\n        return this.КрестВСтык;\r\n      }\r\n    },\r\n\r\n    acn: {\r\n      value: {\r\n        ii: [_mgr.Наложение],\r\n        i: [_mgr.НезамкнутыйКонтур],\r\n        a: [\r\n          _mgr.УгловоеДиагональное,\r\n          _mgr.УгловоеКВертикальной,\r\n          _mgr.УгловоеКГоризонтальной,\r\n          _mgr.ТОбразное,\r\n          _mgr.КрестВСтык,\r\n        ],\r\n        t: [_mgr.ТОбразное, _mgr.КрестВСтык],\r\n      }\r\n    },\r\n\r\n  });\r\n\r\n})($p.enm.cnn_types);\r\n\r\n\r\n(function(_mgr){\r\n\r\n\tconst cache = {};\r\n\r\n\t_mgr.__define({\r\n\r\n\t\tprofiles: {\r\n\t\t\tget(){\r\n\t\t\t\treturn cache.profiles\r\n\t\t\t\t\t|| ( cache.profiles = [\r\n\t\t\t\t\t\t_mgr.Рама,\r\n\t\t\t\t\t\t_mgr.Створка,\r\n\t\t\t\t\t\t_mgr.Импост,\r\n\t\t\t\t\t\t_mgr.Штульп] );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprofile_items: {\r\n\t\t\tget(){\r\n\t\t\t\treturn cache.profile_items\r\n\t\t\t\t\t|| ( cache.profile_items = [\r\n\t\t\t\t\t\t_mgr.Рама,\r\n\t\t\t\t\t\t_mgr.Створка,\r\n\t\t\t\t\t\t_mgr.Импост,\r\n\t\t\t\t\t\t_mgr.Штульп,\r\n\t\t\t\t\t\t_mgr.Добор,\r\n\t\t\t\t\t\t_mgr.Соединитель,\r\n\t\t\t\t\t\t_mgr.Раскладка\r\n\t\t\t\t\t] );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trama_impost: {\r\n\t\t\tget(){\r\n\t\t\t\treturn cache.rama_impost\r\n\t\t\t\t\t|| ( cache.rama_impost = [ _mgr.Рама, _mgr.Импост] );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\timpost_lay: {\r\n\t\t\tget(){\r\n\t\t\t\treturn cache.impost_lay\r\n\t\t\t\t\t|| ( cache.impost_lay = [ _mgr.Импост, _mgr.Раскладка] );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tstvs: {\r\n\t\t\tget(){\r\n\t\t\t\treturn cache.stvs || ( cache.stvs = [_mgr.Створка] );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tglasses: {\r\n\t\t\tget(){\r\n\t\t\t\treturn cache.glasses\r\n\t\t\t\t\t|| ( cache.glasses = [ _mgr.Стекло, _mgr.Заполнение] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n})($p.enm.elm_types);\r\n\r\n\r\n\r\n(function(_mgr){\r\n\r\n  _mgr.additions_groups = [_mgr.Подоконник, _mgr.Водоотлив, _mgr.МоскитнаяСетка, _mgr.Жалюзи, _mgr.Откос, _mgr.Профиль, _mgr.Монтаж, _mgr.Доставка, _mgr.Набор];\r\n\r\n\r\n})($p.enm.inserts_types);\r\n\r\n\r\n\r\n(function({enm}){\r\n\r\n  enm.debit_credit_kinds.__define({\r\n    debit: {\r\n      get() {\r\n        return this.Приход;\r\n      }\r\n    },\r\n    credit: {\r\n      get() {\r\n        return this.Расход;\r\n      }\r\n    },\r\n  });\r\n\r\n\tenm.open_types.__define({\r\n\r\n    is_opening: {\r\n      value(v) {\r\n        if(!v || v.empty() || v == this.Глухое || v == this.Неподвижное) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n\tenm.orientations.__define({\r\n\r\n\t\thor: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.Горизонтальная;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tvert: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.Вертикальная;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tincline: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.Наклонная;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tenm.positions.__define({\r\n\r\n\t\tleft: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.Лев;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tright: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.Прав;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttop: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.Верх;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbottom: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.Низ;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thor: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.ЦентрГоризонталь;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tvert: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.ЦентрВертикаль;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\r\n})($p);\r\n\r\n\r\n(function({cat: {characteristics, nom}}){\r\n  const {value_mgr} = characteristics.constructor.prototype;\r\n  characteristics.value_mgr = function(_obj, f, mf, array_enabled, v) {\r\n    if(f === 'owner') {\r\n      return nom;\r\n    }\r\n    return value_mgr.call(characteristics, _obj, f, mf, array_enabled, v);\r\n  };\r\n  characteristics.extra_fields = function() {\r\n    return [];\r\n  };\r\n  characteristics._direct_ram = true;\r\n})($p);\r\n\r\n$p.md.once('predefined_elmnts_inited', () => {\r\n  const _mgr = $p.cat.characteristics;\r\n\r\n  ($p.job_prm.use_ram === false ? Promise.resolve() : _mgr.adapter.load_view(_mgr, 'linked', {\r\n    limit: 10000,\r\n    include_docs: true,\r\n    startkey: [$p.utils.blank.guid, 'cat.characteristics'],\r\n    endkey: [$p.utils.blank.guid, 'cat.characteristics\\u0fff']\r\n  }))\r\n    .then(() => {\r\n      const {current_user} = $p;\r\n      if(current_user && (\r\n          current_user.role_available('СогласованиеРасчетовЗаказов') ||\r\n          current_user.role_available('ИзменениеТехнологическойНСИ') ||\r\n          current_user.role_available('РедактированиеЦен')\r\n        )) {\r\n        return;\r\n      };\r\n      const {form} = _mgr.metadata();\r\n      if(form && form.obj && form.obj.tabular_sections) {\r\n        form.obj.tabular_sections.specification.widths = \"50,*,70,*,50,70,70,80,70,70,70,0,0,0\";\r\n      }\r\n    });\r\n});\r\n\r\n$p.CatCharacteristics = class CatCharacteristics extends $p.CatCharacteristics {\r\n\r\n  before_save(attr) {\r\n\r\n    const {prod_nom, calc_order, _data} = this;\r\n\r\n    if(calc_order.is_read_only) {\r\n      _data._err = {\r\n        title: 'Права доступа',\r\n        type: 'alert-error',\r\n        text: `Запрещено изменять заказ в статусе ${calc_order.obj_delivery_state}`\r\n      };\r\n      return false;\r\n    }\r\n\r\n    const name = this.prod_name();\r\n    if(name) {\r\n      this.name = name;\r\n    }\r\n\r\n    this.partner = calc_order.partner;\r\n\r\n  }\r\n\r\n  add_inset_params(inset, cnstr, blank_inset) {\r\n    const ts_params = this.params;\r\n    const params = [];\r\n\r\n    ts_params.find_rows({cnstr, inset: blank_inset || inset}, ({param}) => {\r\n      !params.includes(param) && params.push(param);\r\n    });\r\n\r\n    const {product_params} = inset;\r\n    inset.used_params().forEach((param) => {\r\n      if((!param.is_calculated || param.show_calculated) && !params.includes(param)) {\r\n        const value = product_params.find({param});\r\n        ts_params.add({\r\n          cnstr: cnstr,\r\n          inset: blank_inset || inset,\r\n          param: param,\r\n          value: (value && value.value) || \"\",\r\n        });\r\n        params.push(param);\r\n      }\r\n    });\r\n\r\n    ts_params.find_rows({cnstr: cnstr, inset: blank_inset || inset}, (row) => {\r\n      const links = row.param.params_links({grid: {selection: {cnstr}}, obj: row});\r\n      row.hide = links.some((link) => link.hide);\r\n    });\r\n  }\r\n\r\n  prod_name(short) {\r\n    const {calc_order_row, calc_order, leading_product, sys, clr, origin} = this;\r\n    let name = '';\r\n    if(calc_order_row) {\r\n\r\n      if(calc_order.number_internal) {\r\n        name = calc_order.number_internal.trim();\r\n      }\r\n      else {\r\n        let num0 = calc_order.number_doc, part = '';\r\n        for (let i = 0; i < num0.length; i++) {\r\n          if(isNaN(parseInt(num0[i]))) {\r\n            name += num0[i];\r\n          }\r\n          else {\r\n            break;\r\n          }\r\n        }\r\n        for (let i = num0.length - 1; i > 0; i--) {\r\n          if(isNaN(parseInt(num0[i]))) {\r\n            break;\r\n          }\r\n          part = num0[i] + part;\r\n        }\r\n        name += parseInt(part || 0).toFixed(0);\r\n      }\r\n\r\n      name += '/' + calc_order_row.row.pad();\r\n\r\n      if(!leading_product.empty() && !leading_product.calc_order.empty()) {\r\n        name += ':' + leading_product.calc_order_row.row.pad();\r\n      }\r\n\r\n      if(!sys.empty()) {\r\n        name += '/' + sys.name;\r\n      }\r\n      else if(origin && !origin.empty()) {\r\n        name += '/' + (origin instanceof $p.DocPurchase_order ? this.note : (origin.name || origin.number_doc));\r\n      }\r\n\r\n      if(!short) {\r\n\r\n        if(!clr.empty()) {\r\n          name += '/' + this.clr.name;\r\n        }\r\n\r\n        if(this.x && this.y) {\r\n          name += '/' + this.x.toFixed(0) + 'x' + this.y.toFixed(0);\r\n        }\r\n        else if(this.x) {\r\n          name += '/' + this.x.toFixed(0);\r\n        }\r\n        else if(this.y) {\r\n          name += '/' + this.y.toFixed(0);\r\n        }\r\n\r\n        if(this.z) {\r\n          if(this.x || this.y) {\r\n            name += 'x' + this.z.toFixed(0);\r\n          }\r\n          else {\r\n            name += '/' + this.z.toFixed(0);\r\n          }\r\n        }\r\n\r\n        if(this.s) {\r\n          name += '/S:' + this.s.toFixed(3);\r\n        }\r\n\r\n        let sprm = '';\r\n        this.params.find_rows({cnstr: 0}, ({param, value}) => {\r\n          if(param.include_to_name && sprm.indexOf(String(value)) == -1) {\r\n            sprm && (sprm += ';');\r\n            sprm += String(value);\r\n          }\r\n        });\r\n        if(sprm) {\r\n          name += '|' + sprm;\r\n        }\r\n      }\r\n    }\r\n    return name;\r\n  }\r\n\r\n  open_origin(row_id) {\r\n    try {\r\n      let {origin} = this.specification.get(row_id);\r\n      if(typeof origin == 'number') {\r\n        origin = this.cnn_elmnts.get(origin - 1).cnn;\r\n      }\r\n      if(origin.is_new()) {\r\n        return $p.msg.show_msg({\r\n          type: 'alert-warning',\r\n          text: `Пустая ссылка на настройки в строке №${row_id + 1}`,\r\n          title: o.presentation\r\n        });\r\n      }\r\n      origin.form_obj();\r\n    }\r\n    catch (err) {\r\n      $p.record_log(err);\r\n    }\r\n  }\r\n\r\n  find_create_cx(elm, origin) {\r\n    const {_manager, calc_order, params, inserts} = this;\r\n    let cx;\r\n    _manager.find_rows({leading_product: this, leading_elm: elm, origin}, (obj) => {\r\n      if(!obj._deleted) {\r\n        cx = obj;\r\n        return false;\r\n      }\r\n    });\r\n    if(!cx) {\r\n      cx = $p.cat.characteristics.create({\r\n        calc_order,\r\n        leading_product: this,\r\n        leading_elm: elm,\r\n        origin\r\n      }, false, true)._set_loaded();\r\n    }\r\n\r\n    const {length, width} = $p.job_prm.properties;\r\n    cx.params.clear();\r\n    params.find_rows({cnstr: -elm, inset: origin}, (row) => {\r\n      if(row.param != length && row.param != width) {\r\n        cx.params.add({param: row.param, value: row.value});\r\n      }\r\n    });\r\n    inserts.find_rows({cnstr: -elm, inset: origin}, (row) => {\r\n      cx.clr = row.clr;\r\n    });\r\n    cx.name = cx.prod_name();\r\n    return cx;\r\n  }\r\n\r\n  get calc_order_row() {\r\n    let _calc_order_row;\r\n    this.calc_order.production.find_rows({characteristic: this}, (_row) => {\r\n      _calc_order_row = _row;\r\n      return false;\r\n    });\r\n    return _calc_order_row;\r\n  }\r\n\r\n  get prod_nom() {\r\n    if(!this.sys.empty()) {\r\n\r\n      var setted,\r\n        param = this.params;\r\n\r\n      if(this.sys.production.count() == 1) {\r\n        this.owner = this.sys.production.get(0).nom;\r\n\r\n      }\r\n      else if(this.sys.production.count() > 1) {\r\n        this.sys.production.forEach((row) => {\r\n\r\n          if(setted) {\r\n            return false;\r\n          }\r\n\r\n          if(row.param && !row.param.empty()) {\r\n            param.find_rows({cnstr: 0, param: row.param, value: row.value}, () => {\r\n              setted = true;\r\n              param._owner.owner = row.nom;\r\n              return false;\r\n            });\r\n          }\r\n\r\n        });\r\n        if(!setted) {\r\n          this.sys.production.find_rows({param: $p.utils.blank.guid}, (row) => {\r\n            setted = true;\r\n            param._owner.owner = row.nom;\r\n            return false;\r\n          });\r\n        }\r\n        if(!setted) {\r\n          this.owner = this.sys.production.get(0).nom;\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.owner;\r\n  }\r\n\r\n  get builder_props() {\r\n    const defaults = this.constructor.builder_props_defaults;\r\n    const props = {};\r\n    let tmp;\r\n    try {\r\n      tmp = JSON.parse(this._obj.builder_props || '{}');\r\n    }\r\n    catch(e) {\r\n      tmp = props;\r\n    }\r\n    for(const prop in defaults){\r\n      if(tmp.hasOwnProperty(prop)) {\r\n        props[prop] = typeof tmp[prop] === 'number' ? tmp[prop] : !!tmp[prop];\r\n      }\r\n      else {\r\n        props[prop] = defaults[prop];\r\n      }\r\n    }\r\n    return props;\r\n  }\r\n  set builder_props(v) {\r\n    if(this.empty()) {\r\n      return;\r\n    }\r\n    const {_obj, _data} = this;\r\n    const name = 'builder_props';\r\n    if(_data && _data._loading) {\r\n      _obj[name] = v;\r\n      return;\r\n    }\r\n    let _modified;\r\n    if(!_obj[name] || typeof _obj[name] !== 'string'){\r\n      _obj[name] = JSON.stringify(this.constructor.builder_props_defaults);\r\n      _modified = true;\r\n    }\r\n    const props = this.builder_props;\r\n    for(const prop in v){\r\n      if(props[prop] !== v[prop]) {\r\n        props[prop] = v[prop];\r\n        _modified = true;\r\n      }\r\n    }\r\n    if(_modified) {\r\n      _obj[name] = JSON.stringify(props);\r\n      this.__notify(name);\r\n    }\r\n  }\r\n\r\n  recalc(attr = {}, editor) {\r\n\r\n\r\n    const remove = !editor;\r\n    if(remove) {\r\n      editor = new $p.EditorInvisible();\r\n    }\r\n    const project = editor.create_scheme();\r\n    return project.load(this, true)\r\n      .then(() => {\r\n\r\n        project.save_coordinates(Object.assign({save: true, svg: false}, attr));\r\n\r\n      })\r\n      .then(() => {\r\n        project.ox = '';\r\n        if(remove) {\r\n          editor.unload();\r\n        }\r\n        else {\r\n          project.unload();\r\n        }\r\n        return this;\r\n      });\r\n\r\n  }\r\n\r\n  draw(attr = {}, editor) {\r\n\r\n    const ref = $p.utils.snake_ref(this.ref);\r\n    const res = attr.res || {};\r\n    res[ref] = {imgs: {}};\r\n\r\n    const remove = !editor;\r\n    if(remove) {\r\n      editor = new $p.EditorInvisible();\r\n    }\r\n    const project = editor.create_scheme();\r\n    return project.load(this, attr.builder_props || true)\r\n      .then(() => {\r\n        const {_obj: {glasses, constructions, coordinates}} = this;\r\n        if(attr.elm) {\r\n          project.draw_fragment({elm: attr.elm});\r\n          const num = attr.elm > 0 ? `g${attr.elm}` : `l${attr.elm}`;\r\n          if(attr.format === 'png') {\r\n            res[ref].imgs[num] = project.view.element.toDataURL('image/png').substr(22);\r\n          }\r\n          else {\r\n            res[ref].imgs[num] = project.get_svg(attr);\r\n          }\r\n        }\r\n        else if(attr.glasses) {\r\n          res[ref].glasses = glasses.map((glass) => Object.assign({}, glass));\r\n          res[ref].glasses.forEach((row) => {\r\n            const glass = project.draw_fragment({elm: row.elm});\r\n            if(attr.format === 'png') {\r\n              res[ref].imgs[`g${row.elm}`] = project.view.element.toDataURL('image/png').substr(22);\r\n            }\r\n            else {\r\n              res[ref].imgs[`g${row.elm}`] = project.get_svg(attr);\r\n            }\r\n            if(glass){\r\n              row.formula_long = glass.formula(true);\r\n              glass.visible = false;\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          if(attr.format === 'png') {\r\n            res[ref].imgs[`l0`] = project.view.element.toDataURL('image/png').substr(22);\r\n          }\r\n          else {\r\n            res[ref].imgs[`l0`] = project.get_svg(attr);\r\n          }\r\n          if(attr.glasses !== false) {\r\n            constructions.forEach(({cnstr}) => {\r\n              project.draw_fragment({elm: -cnstr});\r\n              if(attr.format === 'png') {\r\n                res[ref].imgs[`l${cnstr}`] = project.view.element.toDataURL('image/png').substr(22);\r\n              }\r\n              else {\r\n                res[ref].imgs[`l${cnstr}`] = project.get_svg(attr);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .then(() => {\r\n        project.ox = '';\r\n        if(remove) {\r\n          editor.unload();\r\n        }\r\n        else {\r\n          project.unload();\r\n        }\r\n        return res;\r\n      });\r\n  }\r\n\r\n  extract_value({cnstr, inset, param}) {\r\n    const {utils: {blank}, CatNom, cat} = $p;\r\n    inset = inset ? inset.valueOf() : blank.guid;\r\n    param = param ? param.valueOf() : blank.guid;\r\n    const row = this.params._obj.find((row) =>\r\n      row.cnstr === cnstr && (!row.inset && inset === blank.guid || row.inset === inset) && row.param === param);\r\n    return param instanceof CatNom ? cat.characteristics.get(row.value) : row.value;\r\n  }\r\n\r\n};\r\n\r\n$p.CatCharacteristics.builder_props_defaults = {\r\n  auto_lines: true,\r\n  custom_lines: true,\r\n  cnns: true,\r\n  visualization: true,\r\n  txts: true,\r\n  rounding: 0,\r\n  mosquito: true,\r\n  jalousie: true,\r\n};\r\n\r\n$p.CatCharacteristicsInsertsRow.prototype.value_change = function (field, type, value) {\r\n  if(field == 'inset') {\r\n    if (value != this.inset) {\r\n      const {_owner} = this._owner;\r\n      const {cnstr} = this;\r\n\r\n      if (value != $p.utils.blank.guid) {\r\n        const res = _owner.params.find_rows({cnstr, inset: value, row: {not: this.row}});\r\n        if (res.length) {\r\n          $p.md.emit('alert', {\r\n            obj: _owner,\r\n            row: this,\r\n            title: $p.msg.data_error,\r\n            type: 'alert-error',\r\n            text: 'Нельзя добавлять две одинаковые вставки в один контур'\r\n          });\r\n          return false;\r\n        }\r\n      }\r\n\r\n      !this.inset.empty() && _owner.params.clear({inset: this.inset, cnstr});\r\n\r\n      this._obj.inset = value;\r\n\r\n      this.inset.clr_group.default_clr(this);\r\n\r\n      _owner.add_inset_params(this.inset, cnstr);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n$p.cat.clrs.__define({\r\n\r\n  by_predefined: {\r\n    value(clr, clr_elm, clr_sch, elm, spec) {\r\n\r\n      const {predefined_name} = clr;\r\n      if(predefined_name) {\r\n        switch (predefined_name) {\r\n        case 'КакЭлемент':\r\n          return clr_elm;\r\n        case 'КакИзделие':\r\n          return clr_sch;\r\n        case 'КакЭлементСнаружи':\r\n          return clr_elm.clr_out.empty() ? clr_elm : clr_elm.clr_out;\r\n        case 'КакЭлементИзнутри':\r\n          return clr_elm.clr_in.empty() ? clr_elm : clr_elm.clr_in;\r\n        case 'КакИзделиеСнаружи':\r\n          return clr_sch.clr_out.empty() ? clr_sch : clr_sch.clr_out;\r\n        case 'КакИзделиеИзнутри':\r\n          return clr_sch.clr_in.empty() ? clr_sch : clr_sch.clr_in;\r\n        case 'КакЭлементИнверсный':\r\n          return this.inverted(clr_elm);\r\n        case 'КакИзделиеИнверсный':\r\n          return this.inverted(clr_sch);\r\n        case 'БезЦвета':\r\n          return this.get();\r\n        case 'КакВедущий':\r\n        case 'КакВедущийИзнутри':\r\n        case 'КакВедущийСнаружи':\r\n        case 'КакВедущийИнверсный':\r\n          const sub_clr = this.predefined(predefined_name.replace('КакВедущий', 'КакЭлемент'));\r\n          const t_parent = elm && elm.t_parent();\r\n          if(!elm || elm === t_parent){\r\n            return this.by_predefined(sub_clr,  clr_elm);\r\n          }\r\n          let finded = false;\r\n          spec && spec.find_rows({elm: t_parent.elm, nom: t_parent.nom}, (row) => {\r\n            finded = this.by_predefined(sub_clr,  row.clr);\r\n            return false;\r\n          });\r\n          return finded || clr_elm;\r\n\r\n        default :\r\n          return clr_elm;\r\n        }\r\n      }\r\n      return clr.empty() ? clr_elm : clr;\r\n    }\r\n  },\r\n\r\n  inverted: {\r\n    value(clr){\r\n      if(clr.clr_in == clr.clr_out || clr.clr_in.empty() || clr.clr_out.empty()){\r\n        return clr;\r\n      }\r\n      const ares = $p.wsql.alasql(\"select top 1 ref from ? where clr_in = ? and clr_out = ? and (not ref = ?)\",\r\n        [this.alatable, clr.clr_out.ref, clr.clr_in.ref, $p.utils.blank.guid]);\r\n      return ares.length ? this.get(ares[0]) : clr;\r\n    }\r\n  },\r\n\r\n\tselection_exclude_service: {\r\n\t\tvalue(mf, sys) {\r\n\r\n      if(mf.choice_params) {\r\n        mf.choice_params.length = 0;\r\n      }\r\n      else {\r\n        mf.choice_params = [];\r\n      }\r\n\r\n      mf.choice_params.push({\r\n\t\t\t\tname: \"parent\",\r\n\t\t\t\tpath: {not: $p.cat.clrs.predefined(\"СЛУЖЕБНЫЕ\")}\r\n\t\t\t});\r\n\r\n\t\t\tif(sys){\r\n\t\t\t\tmf.choice_params.push({\r\n\t\t\t\t\tname: \"ref\",\r\n\t\t\t\t\tget path(){\r\n            const res = [];\r\n\t\t\t\t\t\tlet clr_group;\r\n\r\n\t\t\t\t\t\tfunction add_by_clr(clr) {\r\n              if(clr instanceof $p.CatClrs){\r\n                const {ref} = clr;\r\n                if(clr.is_folder){\r\n                  $p.cat.clrs.alatable.forEach((row) => row.parent == ref && res.push(row.ref));\r\n                }\r\n                else{\r\n                  res.push(ref);\r\n                }\r\n              }\r\n              else if(clr instanceof $p.CatColor_price_groups){\r\n                clr.clr_conformity.forEach(({clr1}) => add_by_clr(clr1));\r\n              }\r\n            }\r\n\r\n\t\t\t\t\t\tif(sys instanceof $p.Editor.BuilderElement){\r\n\t\t\t\t\t\t\tclr_group = sys.inset.clr_group;\r\n\t\t\t\t\t\t\tif(clr_group.empty() && !(sys instanceof $p.Editor.Filling)){\r\n                clr_group = sys.project._dp.sys.clr_group;\r\n              }\r\n\t\t\t\t\t\t}\r\n            else if(sys.hasOwnProperty('sys') && sys.profile && sys.profile.inset) {\r\n              const sclr_group = sys.sys.clr_group;\r\n              const iclr_group = sys.profile.inset.clr_group;\r\n              clr_group = iclr_group.empty() ? sclr_group : iclr_group;\r\n            }\r\n            else if(sys.sys && sys.sys.clr_group){\r\n              clr_group = sys.sys.clr_group;\r\n            }\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tclr_group = sys.clr_group;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(clr_group.empty() || !clr_group.clr_conformity.count()){\r\n              return {not: ''};\r\n\t\t\t\t\t\t}\r\n            add_by_clr(clr_group);\r\n\t\t\t\t\t\treturn {in: res};\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tform_selection: {\r\n\t\tvalue(pwnd, attr) {\r\n\r\n\t\t  const eclr = this.get();\r\n\r\n\t\t\tattr.hide_filter = true;\r\n\r\n      attr.toolbar_click = function (btn_id, wnd){\r\n\r\n        if(btn_id == 'btn_select' && !eclr.clr_in.empty() && !eclr.clr_out.empty()) {\r\n\r\n          if(eclr.clr_in == eclr.clr_out) {\r\n            pwnd.on_select.call(pwnd, eclr.clr_in);\r\n          }\r\n          else {\r\n            const {wsql, job_prm, utils, cat, adapters: {pouch}} = $p;\r\n            const {remote: {ram}, props} = pouch;\r\n            const clrs = [eclr, {clr_in: eclr.clr_out, clr_out: eclr.clr_in}]\r\n              .map(({clr_in, clr_out}, index) => {\r\n                const ares = wsql.alasql(\"select top 1 ref from cat_clrs where clr_in = ? and clr_out = ? and (not ref = ?)\",\r\n                  [clr_in.ref, clr_out.ref, utils.blank.guid]);\r\n\r\n                if(ares.length) {\r\n                  return Promise.resolve(cat.clrs.get(ares[0]));\r\n                }\r\n                else if(cat.clrs.metadata().common) {\r\n                  if(index > 0) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  const authHeader = ram.getBasicAuthHeaders({prefix: pouch.auth_prefix(), ...ram.__opts.auth});\r\n                  return fetch(props.path.replace(job_prm.local_storage_prefix, 'common/cat.clrs/composite'), {\r\n                    method: 'POST',\r\n                    headers: Object.assign({'Content-Type': 'application/json'}, authHeader),\r\n                    body: JSON.stringify({clr_in: clr_in.ref, clr_out: clr_out.ref}),\r\n                  })\r\n                    .then((res) => res.json())\r\n                    .then((res) => {\r\n                      cat.clrs.load_array([res.clr, res.inverted]);\r\n                      return cat.clrs.get(res.clr);\r\n                    });\r\n                }\r\n                return cat.clrs.create({\r\n                  clr_in,\r\n                  clr_out,\r\n                  name: `${clr_in.name} \\\\ ${clr_out.name}`,\r\n                  parent: job_prm.builder.composite_clr_folder\r\n                })\r\n                  .then((obj) => obj.register_on_server());\r\n              });\r\n\r\n            Promise.all(clrs)\r\n              .then((objs) => pwnd.on_select.call(pwnd, objs[0]))\r\n              .catch((err) => $p.msg.show_msg({\r\n                type: 'alert-warning',\r\n                text: err && err.message || 'Недостаточно прав для добавления составного цвета',\r\n                title: 'Составной цвет'\r\n              }));\r\n          }\r\n\r\n          wnd.close();\r\n          return false;\r\n        }\r\n      };\r\n\r\n      const wnd = this.constructor.prototype.form_selection.call(this, pwnd, attr);\r\n\r\n      function get_option_list(selection, val) {\r\n\r\n        selection.clr_in = $p.utils.blank.guid;\r\n        selection.clr_out = $p.utils.blank.guid;\r\n\r\n        if(attr.selection) {\r\n          attr.selection.some((sel) => {\r\n            for (const key in sel) {\r\n              if(key == 'ref') {\r\n                selection.ref = sel.ref;\r\n                return true;\r\n              }\r\n            }\r\n          });\r\n        }\r\n\r\n        return this.constructor.prototype.get_option_list.call(this, selection, val);\r\n      }\r\n\r\n\t\t\treturn (wnd instanceof Promise ? wnd : Promise.resolve(wnd))\r\n\t\t\t\t.then((wnd) => {\r\n\r\n\t\t\t\t\tconst tb_filter = wnd.elmnts.filter;\r\n\r\n          tb_filter.__define({\r\n            get_filter: {\r\n              value() {\r\n                const res = {\r\n                  selection: []\r\n                };\r\n                if(clr_in.getSelectedValue()) {\r\n                  res.selection.push({clr_in: clr_in.getSelectedValue()});\r\n                }\r\n                if(clr_out.getSelectedValue()) {\r\n                  res.selection.push({clr_out: clr_out.getSelectedValue()});\r\n                }\r\n                if(res.selection.length) {\r\n                  res.hide_tree = true;\r\n                }\r\n                return res;\r\n              }\r\n            }\r\n          });\r\n\r\n          wnd.attachEvent('onClose', () => {\r\n            clr_in.unload();\r\n            clr_out.unload();\r\n            eclr.clr_in = $p.utils.blank.guid;\r\n            eclr.clr_out = $p.utils.blank.guid;\r\n            return true;\r\n          });\r\n\r\n\r\n\t\t\t\t\teclr.clr_in = $p.utils.blank.guid;\r\n\t\t\t\t\teclr.clr_out = $p.utils.blank.guid;\r\n\r\n          const clr_in = new $p.iface.OCombo({\r\n            parent: tb_filter.div.obj,\r\n            obj: eclr,\r\n            field: 'clr_in',\r\n            width: 160,\r\n            hide_frm: true,\r\n            get_option_list: get_option_list\r\n          });\r\n          const clr_out = new $p.iface.OCombo({\r\n            parent: tb_filter.div.obj,\r\n            obj: eclr,\r\n            field: 'clr_out',\r\n            width: 160,\r\n            hide_frm: true,\r\n            get_option_list: get_option_list\r\n          });\r\n\r\n          clr_in.DOMelem.style.float = 'left';\r\n          clr_in.DOMelem_input.placeholder = 'Цвет изнутри';\r\n          clr_out.DOMelem_input.placeholder = 'Цвет снаружи';\r\n\r\n          clr_in.attachEvent('onChange', tb_filter.call_event);\r\n          clr_out.attachEvent('onChange', tb_filter.call_event);\r\n          clr_in.attachEvent('onClose', tb_filter.call_event);\r\n          clr_out.attachEvent('onClose', tb_filter.call_event);\r\n\r\n          wnd.elmnts.toolbar.hideItem('btn_new');\r\n          wnd.elmnts.toolbar.hideItem('btn_edit');\r\n          wnd.elmnts.toolbar.hideItem('btn_delete');\r\n\r\n          wnd.elmnts.toolbar.setItemText('btn_select', '<b>Выбрать или создать</b>');\r\n\r\n\t\t\t\t\treturn wnd;\r\n\r\n\t\t\t\t});\r\n    },\r\n    configurable: true,\r\n    writable: true,\r\n\t},\r\n\r\n\tsync_grid: {\r\n\t\tvalue(attr, grid) {\r\n\r\n\t\t\tif(attr.action == \"get_selection\" && attr.selection && attr.selection.some(function (v) {\r\n\t\t\t\treturn v.hasOwnProperty(\"clr_in\") || v.hasOwnProperty(\"clr_out\");\r\n\t\t\t\t})){\r\n\t\t\t\tdelete attr.parent;\r\n\t\t\t\tdelete attr.initial_value;\r\n\t\t\t}\r\n\r\n\t\t\treturn $p.classes.DataManager.prototype.sync_grid.call(this, attr, grid);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n$p.CatClrs = class CatClrs extends $p.CatClrs {\r\n\r\n  register_on_server() {\r\n    if(this.parent !== $p.job_prm.builder.composite_clr_folder) {\r\n      return Promise.reject(new Error('composite_clr_folder'));\r\n    }\r\n    const {pouch} = $p.adapters;\r\n    return pouch.save_obj(this, {db: pouch.remote.ram});\r\n  }\r\n\r\n  get sides() {\r\n    const res = {is_in: false, is_out: false};\r\n    if(!this.empty() && !this.predefined_name){\r\n      if(this.clr_in.empty() && this.clr_out.empty()){\r\n        res.is_in = res.is_out = true;\r\n      }\r\n      else{\r\n        if(!this.clr_in.empty() && !this.clr_in.predefined_name){\r\n          res.is_in = true;\r\n        }\r\n        if(!this.clr_out.empty() && !this.clr_out.predefined_name){\r\n          res.is_out = true;\r\n        }\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n$p.cat.cnns.__define({\r\n\r\n  sql_selection_list_flds: {\r\n    value(initial_value){\r\n      return \"SELECT _t_.ref, _t_.`_deleted`, _t_.is_folder, _t_.id, _t_.name as presentation, _k_.synonym as cnn_type,\" +\r\n        \" case when _t_.ref = '\" + initial_value + \"' then 0 else 1 end as is_initial_value FROM cat_cnns AS _t_\" +\r\n        \" left outer join enm_cnn_types as _k_ on _k_.ref = _t_.cnn_type %3 %4 LIMIT 300\";\r\n    }\r\n  },\r\n\r\n\r\n  nom_cnn: {\r\n    value: function nom_cnn(nom1, nom2, cnn_types, ign_side, is_outer){\r\n\r\n      const {ProfileItem, BuilderElement, Filling} = $p.Editor;\r\n      const {orientations: {Вертикальная}, cnn_types: {acn}} = $p.enm;\r\n\r\n      if(nom1 instanceof ProfileItem && nom2 instanceof ProfileItem &&\r\n        cnn_types && cnn_types.indexOf($p.enm.cnn_types.ad) != -1 &&\r\n        nom1.orientation != Вертикальная && nom2.orientation == Вертикальная ){\r\n        return this.nom_cnn(nom2, nom1, cnn_types);\r\n      }\r\n\r\n      const side = is_outer ? $p.enm.cnn_sides.Снаружи :\r\n        (!ign_side && nom1 instanceof ProfileItem && nom2 instanceof ProfileItem && nom2.cnn_side(nom1));\r\n\r\n      let onom2, a1, a2, thickness1, thickness2, is_i = false, art1glass = false, art2glass = false;\r\n\r\n      if(!nom2 || ($p.utils.is_data_obj(nom2) && nom2.empty())){\r\n        is_i = true;\r\n        onom2 = nom2 = $p.cat.nom.get();\r\n      }\r\n      else{\r\n        if(nom2 instanceof BuilderElement){\r\n          onom2 = nom2.nom;\r\n        }\r\n        else if($p.utils.is_data_obj(nom2)){\r\n          onom2 = nom2;\r\n        }\r\n        else{\r\n          onom2 = $p.cat.nom.get(nom2);\r\n        }\r\n      }\r\n\r\n      const ref1 = nom1.ref; \r\n      const ref2 = onom2.ref;\r\n\r\n      if(!is_i){\r\n        if(nom1 instanceof Filling){\r\n          art1glass = true;\r\n          thickness1 = nom1.thickness;\r\n        }\r\n        else if(nom2 instanceof Filling){\r\n          art2glass = true;\r\n          thickness2 = nom2.thickness;\r\n        }\r\n      }\r\n\r\n      if(!this._nomcache[ref1]){\r\n        this._nomcache[ref1] = {};\r\n      }\r\n      a1 = this._nomcache[ref1];\r\n      if(!a1[ref2]){\r\n        a2 = (a1[ref2] = []);\r\n        this.forEach((cnn) => {\r\n          let is_nom1 = art1glass ? (cnn.art1glass && thickness1 >= cnn.tmin && thickness1 <= cnn.tmax && cnn.cnn_type == $p.enm.cnn_types.ii) : false,\r\n            is_nom2 = art2glass ? (cnn.art2glass && thickness2 >= cnn.tmin && thickness2 <= cnn.tmax) : false;\r\n\r\n          cnn.cnn_elmnts.forEach((row) => {\r\n            if(is_nom1 && is_nom2){\r\n              return false;\r\n            }\r\n            is_nom1 = is_nom1 || (row.nom1 == ref1 && (row.nom2.empty() || row.nom2 == onom2));\r\n            is_nom2 = is_nom2 || (row.nom2 == onom2 && (row.nom1.empty() || row.nom1 == ref1));\r\n          });\r\n          if(is_nom1 && is_nom2){\r\n            a2.push(cnn);\r\n          }\r\n        });\r\n      }\r\n\r\n      if(cnn_types){\r\n        const types = Array.isArray(cnn_types) ? cnn_types : (acn.a.indexOf(cnn_types) != -1 ? acn.a : [cnn_types]);\r\n        return a1[ref2]\r\n          .filter((cnn) => {\r\n            if(types.indexOf(cnn.cnn_type) != -1){\r\n              if(!side){\r\n                return true\r\n              }\r\n              if(cnn.sd1 == $p.enm.cnn_sides.Изнутри){\r\n                return side == $p.enm.cnn_sides.Изнутри;\r\n              }\r\n              else if(cnn.sd1 == $p.enm.cnn_sides.Снаружи){\r\n                return side == $p.enm.cnn_sides.Снаружи;\r\n              }\r\n              else{\r\n                return true;\r\n              }\r\n            }\r\n          })\r\n          .sort(this.sort_cnns);\r\n      }\r\n\r\n      return a1[ref2];\r\n    }\r\n  },\r\n\r\n  elm_cnn: {\r\n    value: function elm_cnn(elm1, elm2, cnn_types, curr_cnn, ign_side, is_outer){\r\n\r\n      if(curr_cnn && cnn_types && (cnn_types.indexOf(curr_cnn.cnn_type) != -1) && (cnn_types != $p.enm.cnn_types.acn.ii)){\r\n\r\n\r\n        if(!ign_side && curr_cnn.sd1 == $p.enm.cnn_sides.Изнутри){\r\n          if(typeof is_outer == 'boolean'){\r\n            if(!is_outer){\r\n              return curr_cnn;\r\n            }\r\n          }\r\n          else{\r\n            if(elm2.cnn_side(elm1) == $p.enm.cnn_sides.Изнутри){\r\n              return curr_cnn;\r\n            }\r\n          }\r\n        }\r\n        else if(!ign_side && curr_cnn.sd1 == $p.enm.cnn_sides.Снаружи){\r\n          if(is_outer || elm2.cnn_side(elm1) == $p.enm.cnn_sides.Снаружи)\r\n            return curr_cnn;\r\n        }\r\n        else{\r\n          return curr_cnn;\r\n        }\r\n      }\r\n\r\n      const cnns = this.nom_cnn(elm1, elm2, cnn_types, ign_side, is_outer);\r\n\r\n      if(cnns.length){\r\n        return cnns[0];\r\n      }\r\n      else{\r\n\r\n      }\r\n    }\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\n$p.cat.contracts.__define({\r\n\r\n\tsql_selection_list_flds: {\r\n\t\tvalue(initial_value){\r\n\t\t\treturn \"SELECT _t_.ref, _t_.`_deleted`, _t_.is_folder, _t_.id, _t_.name as presentation, _k_.synonym as contract_kind, _m_.synonym as mutual_settlements, _o_.name as organization, _p_.name as partner,\" +\r\n\t\t\t\t\" case when _t_.ref = '\" + initial_value + \"' then 0 else 1 end as is_initial_value FROM cat_contracts AS _t_\" +\r\n\t\t\t\t\" left outer join cat_organizations as _o_ on _o_.ref = _t_.organization\" +\r\n\t\t\t\t\" left outer join cat_partners as _p_ on _p_.ref = _t_.owner\" +\r\n\t\t\t\t\" left outer join enm_mutual_contract_settlements as _m_ on _m_.ref = _t_.mutual_settlements\" +\r\n\t\t\t\t\" left outer join enm_contract_kinds as _k_ on _k_.ref = _t_.contract_kind %3 %4 LIMIT 300\";\r\n\t\t}\r\n\t},\r\n\r\n\tby_partner_and_org: {\r\n    value(partner, organization, contract_kind = $p.enm.contract_kinds.СПокупателем) {\r\n\r\n      const {main_contract} = $p.cat.partners.get(partner);\r\n\r\n      if(main_contract && main_contract.contract_kind == contract_kind && main_contract.organization == organization){\r\n        return main_contract;\r\n      }\r\n\r\n      const res = this.find_rows({owner: partner, organization: organization, contract_kind: contract_kind});\r\n      res.sort((a, b) => a.date > b.date);\r\n      return res.length ? res[0] : this.get();\r\n    }\r\n\t}\r\n\r\n\r\n});\r\n\r\n\r\n\r\n$p.CatElm_visualization.prototype.__define({\r\n\r\n\tdraw: {\r\n\t\tvalue(elm, layer, offset) {\r\n\r\n\t\t  const {CompoundPath, PointText, Path, constructor} = elm.project._scope;\r\n\r\n\t\t\tlet subpath;\r\n\r\n\t\t\tif(this.svg_path.indexOf('{\"method\":') == 0){\r\n\r\n\t\t\t\tconst attr = JSON.parse(this.svg_path);\r\n\r\n        if(['subpath_inner', 'subpath_outer', 'subpath_generatrix', 'subpath_median'].includes(attr.method)) {\r\n          if(attr.method == 'subpath_outer') {\r\n            subpath = elm.rays.outer.get_subpath(elm.corns(1), elm.corns(2)).equidistant(attr.offset || 10);\r\n          }\r\n          else if(attr.method == 'subpath_inner') {\r\n            subpath = elm.rays.inner.get_subpath(elm.corns(3), elm.corns(4)).equidistant(attr.offset || 10);\r\n          }\r\n          else if(attr.method == 'subpath_median') {\r\n            if(elm.is_linear()) {\r\n              subpath = new Path({segments: [elm.corns(1).add(elm.corns(4)).divide(2), elm.corns(2).add(elm.corns(3)).divide(2)]})\r\n                .equidistant(attr.offset || 0);\r\n            }\r\n            else {\r\n              const inner = elm.rays.inner.get_subpath(elm.corns(3), elm.corns(4));\r\n              inner.reverse();\r\n              const outer = elm.rays.outer.get_subpath(elm.corns(1), elm.corns(2));\r\n              const li = inner.length / 50;\r\n              const lo = outer.length / 50;\r\n              subpath = new Path();\r\n              for(let i = 0; i < 50; i++) {\r\n                subpath.add(inner.getPointAt(li * i).add(outer.getPointAt(lo * i)).divide(2));\r\n              }\r\n              subpath.simplify(0.8);\r\n              if(attr.offset) {\r\n                subpath = subpath.equidistant(attr.offset);\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            subpath = elm.generatrix.get_subpath(elm.b, elm.e).equidistant(attr.offset || 0);\r\n          }\r\n          subpath.parent = layer._by_spec;\r\n          subpath.strokeWidth = attr.strokeWidth || 4;\r\n          subpath.strokeColor = attr.strokeColor || 'red';\r\n          subpath.strokeCap = attr.strokeCap || 'round';\r\n          if(attr.dashArray){\r\n            subpath.dashArray = attr.dashArray\r\n          }\r\n        }\r\n\t\t\t}\r\n\t\t\telse if(this.svg_path){\r\n\r\n        if(this.mode === 1) {\r\n          const attr = JSON.parse(this.attributes || '{}');\r\n          subpath = new PointText(Object.assign({\r\n            parent: layer._by_spec,\r\n            fillColor: 'black',\r\n            fontFamily: $p.job_prm.builder.font_family,\r\n            fontSize: attr.fontSize || 60,\r\n            guide: true,\r\n            content: this.svg_path,\r\n          }, attr));\r\n        }\r\n        else {\r\n          subpath = new CompoundPath({\r\n            pathData: this.svg_path,\r\n            parent: layer._by_spec,\r\n            strokeColor: 'black',\r\n            fillColor: elm.constructor.clr_by_clr.call(elm, elm._row.clr, false),\r\n            strokeScaling: false,\r\n            guide: true,\r\n            pivot: [0, 0],\r\n            opacity: elm.opacity\r\n          });\r\n        }\r\n\r\n\t\t\t\tif(elm instanceof constructor.Filling) {\r\n          subpath.position = elm.bounds.topLeft.add(offset);\r\n        }\r\n        else {\r\n          const {generatrix, rays: {inner, outer}} = elm;\r\n          let angle_hor;\r\n          if(elm.is_linear() || offset < 0)\r\n            angle_hor = generatrix.getTangentAt(0).angle;\r\n          else if(offset > generatrix.length)\r\n            angle_hor = generatrix.getTangentAt(generatrix.length).angle;\r\n          else\r\n            angle_hor = generatrix.getTangentAt(offset).angle;\r\n\r\n          if((this.rotate != -1 || elm.orientation == $p.enm.orientations.Горизонтальная) && angle_hor != this.angle_hor){\r\n            subpath.rotation = angle_hor - this.angle_hor;\r\n          }\r\n\r\n          offset += generatrix.getOffsetOf(generatrix.getNearestPoint(elm.corns(1)));\r\n\r\n          const p0 = generatrix.getPointAt(offset > generatrix.length ? generatrix.length : offset || 0);\r\n\r\n          if(this.elm_side == -1){\r\n            const p1 = inner.getNearestPoint(p0);\r\n            const p2 = outer.getNearestPoint(p0);\r\n\r\n            subpath.position = p1.add(p2).divide(2);\r\n\r\n          }else if(!this.elm_side){\r\n            subpath.position = inner.getNearestPoint(p0);\r\n\r\n          }else{\r\n            subpath.position = outer.getNearestPoint(p0);\r\n          }\r\n        }\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\n$p.cat.furns.metadata('selection_params').index = 'elm';\r\n$p.cat.furns.metadata('specification').index = 'elm';\r\n\r\n$p.CatFurns = class CatFurns extends $p.CatFurns {\r\n\r\n  refill_prm({project, furn, cnstr}) {\r\n\r\n    const fprms = project.ox.params;\r\n    const {CatNom, job_prm: {properties: {direction}}} = $p;\r\n\r\n    const aprm = furn.furn_set.used_params();\r\n    aprm.sort((a, b) => {\r\n      if (a.presentation > b.presentation) {\r\n        return 1;\r\n      }\r\n      if (a.presentation < b.presentation) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    aprm.forEach((v) => {\r\n\r\n      if(v == direction){\r\n        return;\r\n      }\r\n\r\n      let prm_row, forcibly = true;\r\n      fprms.find_rows({param: v, cnstr: cnstr}, (row) => {\r\n        prm_row = row;\r\n        return forcibly = false;\r\n      });\r\n      if(!prm_row){\r\n        prm_row = fprms.add({param: v, cnstr: cnstr}, true);\r\n      }\r\n\r\n      const {param} = prm_row;\r\n      project._dp.sys[param instanceof CatNom ? 'params' : 'furn_params'].find_rows({param}, (row) => {\r\n        if(row.forcibly || forcibly){\r\n          prm_row.value = row.value;\r\n        }\r\n        prm_row.hide = row.hide || (param.is_calculated && !param.show_calculated);\r\n        return false;\r\n      });\r\n\r\n      param.linked_values(param.params_links({\r\n        grid: {selection: {cnstr: cnstr}},\r\n        obj: {_owner: {_owner: project.ox}}\r\n      }), prm_row);\r\n\r\n    });\r\n\r\n    const adel = [];\r\n    fprms.find_rows({cnstr: cnstr, inset: $p.utils.blank.guid}, (row) => {\r\n      if(aprm.indexOf(row.param) == -1){\r\n        adel.push(row);\r\n      }\r\n    });\r\n    adel.forEach((row) => fprms.del(row, true));\r\n\r\n  }\r\n\r\n  used_params() {\r\n\r\n    const {_data} = this;\r\n    if(_data.used_params) {\r\n      return _data.used_params;\r\n    }\r\n\r\n    const sprms = [];\r\n\r\n    this.selection_params.forEach(({param}) => {\r\n      !param.empty() && (!param.is_calculated || param.show_calculated) && !sprms.includes(param) && sprms.push(param);\r\n    });\r\n\r\n    const {CatFurns, CatNom, enm: {predefined_formulas: {cx_prm}}} = $p;\r\n    this.specification.forEach(({nom, algorithm}) => {\r\n      if(nom instanceof CatFurns) {\r\n        for(const param of nom.used_params()) {\r\n          !sprms.includes(param) && sprms.push(param);\r\n        }\r\n      }\r\n      else if(algorithm === cx_prm && nom instanceof CatNom && !sprms.includes(nom)) {\r\n        sprms.push(nom);\r\n      }\r\n    });\r\n\r\n    return _data.used_params = sprms;\r\n\r\n  }\r\n\r\n  get_spec(contour, cache, exclude_dop) {\r\n\r\n    const res = $p.dp.buyers_order.create({specification: []}, true).specification;\r\n    const {ox} = contour.project;\r\n    const {transfer_operations_options: {НаПримыкающий: nea, ЧерезПримыкающий: through, НаПримыкающийОтКонца: inverse},\r\n      open_directions, offset_options} = $p.enm;\r\n\r\n    this.specification.find_rows({dop: 0}, (row_furn) => {\r\n\r\n      if(!row_furn.check_restrictions(contour, cache)){\r\n        return;\r\n      }\r\n\r\n      if(!exclude_dop){\r\n        this.specification.find_rows({elm: row_furn.elm, dop: {not: 0}}, (dop_row) => {\r\n\r\n          if(!dop_row.check_restrictions(contour, cache)){\r\n            return;\r\n          }\r\n\r\n          if(dop_row.is_procedure_row){\r\n\r\n            const invert = contour.direction == open_directions.Правое;\r\n            const elm = contour.profile_by_furn_side(dop_row.side, cache);\r\n            const {len} = elm._row;\r\n            const {sizefurn} = elm.nom;\r\n            const dx1 = $p.job_prm.builder.add_d ? sizefurn : 0;\r\n            const faltz = len - 2 * sizefurn;\r\n\r\n            let coordin = 0;\r\n\r\n            if(dop_row.offset_option == offset_options.Формула){\r\n              if(!dop_row.formula.empty()){\r\n                coordin = dop_row.formula.execute({ox, elm, contour, len, sizefurn, dx1, faltz, invert, dop_row});\r\n              }\r\n            }\r\n            else if(dop_row.offset_option == offset_options.РазмерПоФальцу){\r\n              coordin = faltz + dop_row.contraction;\r\n            }\r\n            else if(dop_row.offset_option == offset_options.ОтРучки){\r\n              const {generatrix} = elm;\r\n              const hor = contour.handle_line(elm);\r\n              coordin = generatrix.getOffsetOf(generatrix.intersect_point(hor)) -\r\n                generatrix.getOffsetOf(generatrix.getNearestPoint(elm.corns(1))) +\r\n                (invert ? dop_row.contraction : -dop_row.contraction);\r\n            }\r\n            else if(dop_row.offset_option == offset_options.ОтСередины){\r\n              coordin = len / 2 + (invert ? dop_row.contraction : -dop_row.contraction);\r\n            }\r\n            else{\r\n              if(invert){\r\n                if(dop_row.offset_option == offset_options.ОтКонцаСтороны){\r\n                  coordin = dop_row.contraction;\r\n                }\r\n                else{\r\n                  coordin = len - dop_row.contraction;\r\n                }\r\n              }\r\n              else{\r\n                if(dop_row.offset_option == offset_options.ОтКонцаСтороны){\r\n                  coordin = len - dop_row.contraction;\r\n                }\r\n                else{\r\n                  coordin = dop_row.contraction;\r\n                }\r\n              }\r\n            }\r\n\r\n            const proc_row = res.add(dop_row);\r\n            proc_row.origin = this;\r\n            proc_row.specify = row_furn.nom;\r\n            proc_row.handle_height_max = contour.cnstr;\r\n            if([nea, through, inverse].includes(dop_row.transfer_option)){\r\n              let nearest = elm.nearest();\r\n              if(dop_row.transfer_option == through){\r\n                const joined = nearest.joined_nearests().reduce((acc, cur) => {\r\n                  if(cur !== elm){\r\n                    acc.push(cur);\r\n                  }\r\n                  return acc;\r\n                }, []);\r\n                if(joined.length){\r\n                  nearest = joined[0];\r\n                }\r\n              }\r\n              const {outer} = elm.rays;\r\n              const nouter = nearest.rays.outer;\r\n              const point = outer.getPointAt(outer.getOffsetOf(outer.getNearestPoint(elm.corns(1))) + coordin);\r\n              proc_row.handle_height_min = nearest.elm;\r\n              if(dop_row.transfer_option == inverse){\r\n                proc_row.coefficient = nouter.getOffsetOf(nouter.getNearestPoint(nearest.corns(2))) - nouter.getOffsetOf(nouter.getNearestPoint(point));\r\n              }\r\n              else {\r\n                proc_row.coefficient = nouter.getOffsetOf(nouter.getNearestPoint(point)) - nouter.getOffsetOf(nouter.getNearestPoint(nearest.corns(1)));\r\n              }\r\n              if(dop_row.overmeasure){\r\n                proc_row.coefficient +=  nearest.dx0;\r\n              }\r\n            }\r\n            else{\r\n              proc_row.handle_height_min = elm.elm;\r\n              proc_row.coefficient = coordin;\r\n              if(dop_row.overmeasure){\r\n                proc_row.coefficient +=  elm.dx0;\r\n              }\r\n            }\r\n\r\n            return;\r\n          }\r\n          else if(!dop_row.quantity){\r\n            return;\r\n          }\r\n\r\n          if(dop_row.is_set_row){\r\n            const {nom} = dop_row;\r\n            nom && nom.get_spec(contour, cache).forEach((sub_row) => {\r\n              if(sub_row.is_procedure_row){\r\n                res.add(sub_row);\r\n              }\r\n              else if(sub_row.quantity) {\r\n                res.add(sub_row).quantity = (row_furn.quantity || 1) * (dop_row.quantity || 1) * sub_row.quantity;\r\n              }\r\n            });\r\n          }\r\n          else{\r\n            const row_spec = res.add(dop_row);\r\n            row_spec.origin = this;\r\n            row_spec.specify = row_furn.nom;\r\n          }\r\n        });\r\n      }\r\n\r\n      if(row_furn.is_set_row){\r\n        const {nom} = row_furn;\r\n        nom && nom.get_spec(contour, cache, exclude_dop).forEach((sub_row) => {\r\n          if(sub_row.is_procedure_row){\r\n            res.add(sub_row);\r\n          }\r\n          else if(!sub_row.quantity){\r\n            return;\r\n          }\r\n          res.add(sub_row).quantity = (row_furn.quantity || 1) * sub_row.quantity;\r\n        });\r\n      }\r\n      else{\r\n        if(row_furn.quantity){\r\n          this.add_with_algorithm(res, ox, contour, row_furn);\r\n        }\r\n      }\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  add_with_algorithm(res, ox, contour, row_furn) {\r\n    const {algorithm, formula} = row_furn;\r\n    let cx;\r\n    if(algorithm == 'cx_prm') {\r\n      cx = ox.extract_value({cnstr: contour.cnstr, param: row_furn.nom});\r\n      if(cx.toString().toLowerCase() === 'нет') {\r\n        return;\r\n      }\r\n    }\r\n    const row_spec = res.add(row_furn);\r\n    row_spec.origin = this;\r\n    if(algorithm == 'cx_prm') {\r\n      row_spec.nom_characteristic = cx;\r\n    }\r\n    if(!formula.empty() && !formula.condition_formula){\r\n      formula.execute({ox, contour, row_furn, row_spec});\r\n    }\r\n  }\r\n\r\n  shtulp_kind() {\r\n    let res = 0;\r\n    this.open_tunes.forEach(({shtulp_available, shtulp_fix_here}) => {\r\n      if(shtulp_available && !res) {\r\n        res = 1;\r\n      }\r\n      if(shtulp_fix_here) {\r\n        res = 2;\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n};\r\n\r\n$p.CatFurnsSpecificationRow = class CatFurnsSpecificationRow extends $p.CatFurnsSpecificationRow {\r\n\r\n  check_restrictions(contour, cache) {\r\n    const {elm, dop, handle_height_min, handle_height_max, formula, side} = this;\r\n    const {direction, h_ruch, cnstr} = contour;\r\n\r\n    if(h_ruch < handle_height_min || (handle_height_max && h_ruch > handle_height_max)){\r\n      return false;\r\n    }\r\n\r\n    if(!cache.ignore_formulas && !formula.empty() && formula.condition_formula && !formula.execute({ox: cache.ox, contour, row_furn: this})) {\r\n      return false;\r\n    }\r\n\r\n    const {selection_params, specification_restrictions} = this._owner._owner;\r\n    const prop_direction = $p.job_prm.properties.direction;\r\n\r\n    let res = true;\r\n\r\n    let profile;\r\n    selection_params.find_rows({elm, dop}, (prm_row) => {\r\n      if(!profile) {\r\n        profile = contour.profile_by_furn_side(side, cache);\r\n      }\r\n      const ok = (prop_direction == prm_row.param) ?\r\n        direction == prm_row.value : prm_row.param.check_condition({row_spec: this, prm_row, elm: profile, cnstr, ox: cache.ox});\r\n      if(!ok){\r\n        return res = false;\r\n      }\r\n    });\r\n\r\n    if(res) {\r\n\r\n      specification_restrictions.find_rows({elm, dop}, (row) => {\r\n        const {lmin, lmax, amin, amax, side, for_direct_profile_only} = row;\r\n        const elm = contour.profile_by_furn_side(side, cache);\r\n\r\n        if(for_direct_profile_only === -1 && elm.is_linear()) {\r\n          return res = false;\r\n        }\r\n        if(for_direct_profile_only === 1 && !elm.is_linear()) {\r\n          return res = false;\r\n        }\r\n\r\n        const { side_count } = contour;\r\n        const prev = contour.profile_by_furn_side(row.side === 1 ? side_count : row.side - 1, cache);\r\n        const next = contour.profile_by_furn_side(row.side === side_count ? 1 : row.side + 1, cache);\r\n        const len = (elm._row.len - prev.nom.sizefurn - next.nom.sizefurn).round();\r\n        if (len < lmin || len > lmax) {\r\n          return res = false;\r\n        }\r\n\r\n        const angle = direction == $p.enm.open_directions.Правое ?\r\n          elm.generatrix.angle_to(prev.generatrix, elm.e) :\r\n          prev.generatrix.angle_to(elm.generatrix, elm.b);\r\n        if (angle < amin || angle > amax) {\r\n          return res = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  get nom() {\r\n    return this._getter('nom') || this._getter('nom_set');\r\n  }\r\n  set nom(v) {\r\n    if(v !== '') {\r\n      this._setter('nom', v);\r\n    }\r\n  }\r\n\r\n  get nom_set() {\r\n    return this.nom;\r\n  }\r\n  set nom_set (v) {\r\n    this.nom = v;\r\n  }\r\n\r\n};\r\n\r\n(({md}) => {\r\n  const {fields} = md.get(\"cat.furns\").tabular_sections.specification;\r\n  fields.nom_set = fields.nom;\r\n})($p);\r\n\r\n\r\n\r\n(({md, cat, enm, cch, dp, utils, adapters: {pouch}, job_prm}) => {\r\n\r\n  if(job_prm.use_ram !== false){\r\n    md.once('predefined_elmnts_inited', () => {\r\n      cat.scheme_settings && cat.scheme_settings.find_schemas('dp.buyers_order.production');\r\n    });\r\n  }\r\n\r\n  cat.inserts.__define({\r\n\r\n    _inserts_types_filling: {\r\n      value: [\r\n        enm.inserts_types.Заполнение\r\n      ]\r\n    },\r\n\r\n    _prms_by_type: {\r\n      value(insert_type) {\r\n        const prms = new Set();\r\n        this.find_rows({available: true, insert_type}, (inset) => {\r\n          inset.used_params().forEach((param) => {\r\n            !param.is_calculated && prms.add(param);\r\n          });\r\n        });\r\n        return prms;\r\n      }\r\n    },\r\n\r\n    ItemData: {\r\n      value: class ItemData {\r\n\r\n        constructor(item, Renderer) {\r\n\r\n          this.Renderer = Renderer;\r\n          this.count = 0;\r\n          const idata = this;\r\n\r\n          class ItemRow extends $p.DpBuyers_orderProductionRow {\r\n\r\n            tune(ref, mf, column) {\r\n\r\n              const {inset} = this;\r\n              const prm = cch.properties.get(ref);\r\n\r\n              if(mf.choice_params) {\r\n                const adel = new Set();\r\n                for(const choice of mf.choice_params) {\r\n                  if(choice.name !== 'owner' && choice.path != prm) {\r\n                    adel.add(choice);\r\n                  }\r\n                }\r\n                for(const choice of adel) {\r\n                  mf.choice_params.splice(mf.choice_params.indexOf(choice), 1);\r\n                }\r\n              }\r\n              else {\r\n                mf.choice_params = [];\r\n              }\r\n\r\n              const prms = new Set();\r\n              inset.used_params().forEach((param) => {\r\n                !param.is_calculated && prms.add(param);\r\n              });\r\n              mf.read_only = !prms.has(prm);\r\n\r\n              if(!mf.read_only) {\r\n                const links = prm.params_links({grid: {selection: {}}, obj: this});\r\n                const hide = links.some((link) => link.hide);\r\n                if(hide && !mf.read_only) {\r\n                  mf.read_only = true;\r\n                }\r\n\r\n                if(links.length) {\r\n                  const filter = {}\r\n                  prm.filter_params_links(filter, null, links);\r\n                  filter.ref && mf.choice_params.push({\r\n                    name: 'ref',\r\n                    path: filter.ref,\r\n                  });\r\n                }\r\n\r\n              }\r\n            }\r\n\r\n            get_row(param) {\r\n              const {product_params} = this._owner._owner;\r\n              return product_params.find({elm: this.row, param}) || product_params.add({elm: this.row, param});\r\n            }\r\n\r\n            value_change(field, type, value) {\r\n              if(field === 'inset') {\r\n                value = cat.inserts.get(value);\r\n                if(value.insert_type == enm.inserts_types.Параметрик) {\r\n                  idata.tune_meta(value, this);\r\n                }\r\n              }\r\n              super.value_change(field, type, value);\r\n            }\r\n\r\n            get elm() {\r\n              return this.row;\r\n            }\r\n          }\r\n\r\n          this.ProductionRow = ItemRow;\r\n\r\n          this.meta = utils._clone(dp.buyers_order.metadata('production'));\r\n          this.meta.fields.inset.choice_params[0].path = item;\r\n          this.meta.fields.inset.disable_clear = true;\r\n\r\n          if(item !== enm.inserts_types.Параметрик) {\r\n            const changed = this.tune_meta(item);\r\n            const {current_user} = $p;\r\n            for(const scheme of changed) {\r\n              if(pouch.local.doc.adapter === 'http' && !scheme.user) {\r\n                current_user && current_user.roles.includes('doc_full') && scheme.save();\r\n              }\r\n              else {\r\n                scheme.save();\r\n              }\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        tune_meta(item, prototype) {\r\n          const changed = new Set();\r\n          let params, with_scheme, meta;\r\n\r\n          if(!prototype) {\r\n            prototype = this.ProductionRow.prototype;\r\n            params = cat.inserts._prms_by_type(item);\r\n            with_scheme = true;\r\n            meta = this.meta;\r\n          }\r\n          else {\r\n            params = new Set();\r\n            item.product_params.forEach(({param}) => params.add(param));\r\n            if(!prototype._meta) {\r\n              Object.defineProperty(prototype, '_meta', {value: utils._clone(this.meta)});\r\n            }\r\n            meta = prototype._meta;\r\n          }\r\n\r\n          if(!with_scheme) {\r\n            for(const fld in prototype) {\r\n              if(utils.is_guid(fld) && !Array.from(params).some(({ref}) => ref === fld)) {\r\n                delete prototype[fld];\r\n                delete meta.fields[fld];\r\n                if(prototype._owner && prototype._owner._owner) {\r\n                  const {product_params} = prototype._owner._owner;\r\n                  for(const rm of product_params.find_rows({elm: prototype.row, fld})) {\r\n                    product_params.del(rm);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          for (const param of params) {\r\n\r\n            if(with_scheme) {\r\n              cat.scheme_settings.find_rows({obj: 'dp.buyers_order.production', name: item.name}, (scheme) => {\r\n                if(!scheme.fields.find({field: param.ref})) {\r\n                  const row = scheme.fields.add({\r\n                    field: param.ref,\r\n                    caption: param.caption,\r\n                    use: true,\r\n                  });\r\n                  const note = scheme.fields.find({field: 'note'});\r\n                  note && scheme.fields.swap(row, note);\r\n\r\n                  changed.add(scheme);\r\n                }\r\n              });\r\n            }\r\n\r\n            if(!meta.fields[param.ref]) {\r\n              meta.fields[param.ref] = {\r\n                synonym: param.caption,\r\n                type: param.type,\r\n              };\r\n            }\r\n            const mf = meta.fields[param.ref];\r\n\r\n            if(param.type.types.some(type => type === 'cat.property_values')) {\r\n              mf.choice_params = [{name: 'owner', path: param}];\r\n            }\r\n\r\n            const drow = item.product_params && item.product_params.find({param});\r\n            if(drow && drow.list) {\r\n              try{\r\n                mf.list = JSON.parse(drow.list);\r\n              }\r\n              catch (e) {\r\n                delete mf.list;\r\n              }\r\n            }\r\n            else {\r\n              delete mf.list;\r\n            }\r\n\r\n            if(!prototype.hasOwnProperty(param.ref)){\r\n              Object.defineProperty(prototype, param.ref, {\r\n                get() {\r\n                  return this.get_row(param).value;\r\n                },\r\n                set(v) {\r\n                  this.get_row(param).value = v;\r\n                },\r\n                configurable: true,\r\n                enumerable: true,\r\n              });\r\n            }\r\n          }\r\n\r\n          return changed;\r\n        }\r\n\r\n      }\r\n    },\r\n\r\n    by_thickness: {\r\n      value(min, max) {\r\n\r\n        if(!this._by_thickness){\r\n          this._by_thickness = {};\r\n          this.find_rows({insert_type: {in: this._inserts_types_filling}}, (ins) => {\r\n            if(ins.thickness > 0){\r\n              if(!this._by_thickness[ins.thickness])\r\n                this._by_thickness[ins.thickness] = [];\r\n              this._by_thickness[ins.thickness].push(ins);\r\n            }\r\n          });\r\n        }\r\n\r\n        const res = [];\r\n        for(let thickness in this._by_thickness){\r\n          if(parseFloat(thickness) >= min && parseFloat(thickness) <= max)\r\n            Array.prototype.push.apply(res, this._by_thickness[thickness]);\r\n        }\r\n        return res;\r\n\r\n      }\r\n    },\r\n\r\n    sql_selection_list_flds: {\r\n      value(initial_value) {\r\n        return \"SELECT _t_.ref, _t_.`_deleted`, _t_.is_folder, _t_.id,_t_.note as note,_t_.priority as priority ,_t_.name as presentation, _k_.synonym as insert_type,\" +\r\n          \" case when _t_.ref = '\" + initial_value + \"' then 0 else 1 end as is_initial_value FROM cat_inserts AS _t_\" +\r\n          \" left outer join enm_inserts_types as _k_ on _k_.ref = _t_.insert_type %3 ORDER BY is_initial_value, priority desc, presentation LIMIT 1000 \";\r\n      }\r\n    },\r\n\r\n    sql_selection_where_flds: {\r\n      value(filter){\r\n        return ` OR _t_.note LIKE '${filter}' OR _t_.id LIKE '${filter}' OR _t_.name LIKE '${filter}'`;\r\n      }\r\n    },\r\n\r\n  });\r\n\r\n  cat.inserts.metadata('selection_params').index = 'elm';\r\n  cat.inserts.metadata('specification').index = 'is_main_elm';\r\n\r\n  $p.CatInserts = class CatInserts extends $p.CatInserts {\r\n\r\n    nom(elm, strict) {\r\n\r\n      const {_data} = this;\r\n\r\n      if(!strict && !elm && _data.nom) {\r\n        return _data.nom;\r\n      }\r\n\r\n      let _nom;\r\n      let main_rows = this.specification._obj.filter(({is_main_elm}) => is_main_elm).map(({_row}) => _row);\r\n      if(main_rows.length > 1 && elm) {\r\n        const {check_params} = ProductsBuilding;\r\n        main_rows = main_rows.filter((row) => {\r\n          return check_params({\r\n            params: this.selection_params,\r\n            ox: elm.project.ox,\r\n            elm: elm,\r\n            row_spec: row,\r\n            cnstr: 0,\r\n            origin: elm.fake_origin || 0,\r\n          });\r\n        });\r\n      }\r\n\r\n      if(!main_rows.length && !strict && this.specification.count()){\r\n        main_rows.push(this.specification.get(0))\r\n      }\r\n\r\n      if(main_rows.length && main_rows[0].nom instanceof $p.CatInserts){\r\n        if(main_rows[0].nom == this) {\r\n          _nom = cat.nom.get();\r\n        }\r\n        else {\r\n          _nom = main_rows[0].nom.nom(elm, strict);\r\n        }\r\n      }\r\n      else if(main_rows.length){\r\n        if(elm && !main_rows[0].formula.empty()){\r\n          try{\r\n            _nom = main_rows[0].formula.execute({elm});\r\n            if(!_nom){\r\n              _nom = main_rows[0].nom\r\n            }\r\n          }catch(e){\r\n            _nom = main_rows[0].nom\r\n          }\r\n        }\r\n        else{\r\n          _nom = main_rows[0].nom\r\n        }\r\n      }\r\n      else{\r\n        _nom = cat.nom.get()\r\n      }\r\n\r\n      if(main_rows.length < 2){\r\n        _data.nom = typeof _nom == 'string' ? cat.nom.get(_nom) : _nom;\r\n      }\r\n      else{\r\n        _data.nom = _nom;\r\n      }\r\n\r\n      return _data.nom;\r\n    }\r\n\r\n    width(elm, strict) {\r\n      const {_data} = this;\r\n      if(!_data.width) {\r\n        const widths = new Set();\r\n        this.specification._obj.filter(({is_main_elm}) => is_main_elm).forEach(({_row}) => widths.add(_row.nom.width));\r\n        if(widths.size === 1) {\r\n          _data.width = widths.values()[0];\r\n        }\r\n        else {\r\n          _data.width = -1;\r\n        }\r\n      }\r\n      return (_data.width > 0 ? _data.width : this.nom(elm, strict).width) || 80;\r\n    }\r\n\r\n    contour_attrs(contour) {\r\n\r\n      const main_rows = [];\r\n      const res = {calc_order: contour.project.ox.calc_order};\r\n\r\n      this.specification.find_rows({is_main_elm: true}, (row) => {\r\n        main_rows.push(row);\r\n        return false;\r\n      });\r\n\r\n      if(main_rows.length){\r\n        const irow = main_rows[0],\r\n          sizes = {},\r\n          sz_keys = {},\r\n          sz_prms = ['length', 'width', 'thickness'].map((name) => {\r\n            const prm = job_prm.properties[name];\r\n            sz_keys[prm.ref] = name;\r\n            return prm;\r\n          });\r\n\r\n        res.owner = irow.nom instanceof $p.CatInserts ? irow.nom.nom() : irow.nom;\r\n\r\n        contour.project.ox.params.find_rows({\r\n          cnstr: contour.cnstr,\r\n          inset: this,\r\n          param: {in: sz_prms}\r\n        }, (row) => {\r\n          sizes[sz_keys[row.param.ref]] = row.value\r\n        });\r\n\r\n        if(Object.keys(sizes).length > 0){\r\n          res.x = sizes.length ? (sizes.length + irow.sz) * (irow.coefficient * 1000 || 1) : 0;\r\n          res.y = sizes.width ? (sizes.width + irow.sz) * (irow.coefficient * 1000 || 1) : 0;\r\n          res.s = ((res.x * res.y) / 1000000).round(3);\r\n          res.z = sizes.thickness * (irow.coefficient * 1000 || 1);\r\n        }\r\n        else{\r\n          if(irow.count_calc_method == enm.count_calculating_ways.ПоФормуле && !irow.formula.empty()){\r\n            irow.formula.execute({\r\n              ox: contour.project.ox,\r\n              contour: contour,\r\n              inset: this,\r\n              row_ins: irow,\r\n              res: res\r\n            });\r\n          }\r\n          if(irow.count_calc_method == enm.count_calculating_ways.ПоПлощади && this.insert_type == enm.inserts_types.МоскитнаяСетка){\r\n            const bounds = contour.bounds_inner(irow.sz);\r\n            res.x = bounds.width.round(1);\r\n            res.y = bounds.height.round(1);\r\n            res.s = ((res.x * res.y) / 1000000).round(3);\r\n          }\r\n          else{\r\n            res.x = contour.w + irow.sz;\r\n            res.y = contour.h + irow.sz;\r\n            res.s = ((res.x * res.y) / 1000000).round(3);\r\n          }\r\n        }\r\n      }\r\n\r\n      return res;\r\n\r\n    }\r\n\r\n    check_restrictions(row, elm, by_perimetr, len_angl) {\r\n\r\n      const {_row} = elm;\r\n      const len = len_angl ? len_angl.len : _row.len;\r\n      const is_linear = elm.is_linear ? elm.is_linear() : true;\r\n\r\n      if(row.smin > _row.s || (_row.s && row.smax && row.smax < _row.s)){\r\n        return false;\r\n      }\r\n\r\n      if(row.is_main_elm && !row.quantity){\r\n        return false;\r\n      }\r\n\r\n      if((row.for_direct_profile_only > 0 && !is_linear) || (row.for_direct_profile_only < 0 && is_linear)){\r\n        return false;\r\n      }\r\n\r\n      if(!utils.is_data_obj(row) || by_perimetr || row.count_calc_method != enm.count_calculating_ways.ПоПериметру){\r\n        if(row.lmin > len || (row.lmax < len && row.lmax > 0)){\r\n          return false;\r\n        }\r\n        if(row.ahmin > _row.angle_hor || row.ahmax < _row.angle_hor){\r\n          return false;\r\n        }\r\n      }\r\n\r\n\r\n      return true;\r\n    }\r\n\r\n    filtered_spec({elm, is_high_level_call, len_angl, own_row, ox}) {\r\n\r\n      const res = [];\r\n\r\n      if(this.empty()){\r\n        return res;\r\n      }\r\n\r\n      function fake_row(row) {\r\n        if(row._metadata){\r\n          const res = {};\r\n          for(let fld in row._metadata().fields){\r\n            res[fld] = row[fld];\r\n          }\r\n          return res;\r\n        }\r\n        else{\r\n          return Object.assign({}, row);\r\n        }\r\n      }\r\n\r\n      const {insert_type, check_restrictions} = this;\r\n      const {Профиль, Заполнение} = enm.inserts_types;\r\n      const {check_params} = ProductsBuilding;\r\n\r\n      if(is_high_level_call && (insert_type == Заполнение)){\r\n\r\n        const glass_rows = [];\r\n        ox.glass_specification.find_rows({elm: elm.elm, inset: {not: utils.blank.guid}}, (row) => {\r\n          glass_rows.push(row);\r\n        });\r\n\r\n        if(glass_rows.length){\r\n          glass_rows.forEach((row) => {\r\n            row.inset.filtered_spec({elm, len_angl, ox, own_row: {clr: row.clr}}).forEach((row) => {\r\n              res.push(row);\r\n            });\r\n          });\r\n          return res;\r\n        }\r\n      }\r\n\r\n      this.specification.forEach((row) => {\r\n\r\n        if(!check_restrictions(row, elm, insert_type == Профиль, len_angl)){\r\n          return;\r\n        }\r\n\r\n        if(own_row && row.clr.empty() && !own_row.clr.empty()){\r\n          row = fake_row(row);\r\n          row.clr = own_row.clr;\r\n        }\r\n        if(!check_params({\r\n          params: this.selection_params,\r\n          ox: ox,\r\n          elm: elm,\r\n          row_spec: row,\r\n          cnstr: len_angl && len_angl.cnstr,\r\n          origin: len_angl && len_angl.origin,\r\n        })){\r\n          return;\r\n        }\r\n\r\n        if(row.nom instanceof $p.CatInserts){\r\n          row.nom.filtered_spec({elm, len_angl, ox, own_row: own_row || row}).forEach((subrow) => {\r\n            const fakerow = fake_row(subrow);\r\n            fakerow.quantity = (subrow.quantity || 1) * (row.quantity || 1);\r\n            fakerow.coefficient = (subrow.coefficient || 1) * (row.coefficient || 1);\r\n            fakerow._origin = row.nom;\r\n            if(fakerow.clr.empty()){\r\n              fakerow.clr = row.clr;\r\n            }\r\n            res.push(fakerow);\r\n          });\r\n        }\r\n        else{\r\n          res.push(row);\r\n        }\r\n\r\n      });\r\n\r\n      return res;\r\n    }\r\n\r\n    calculate_spec({elm, len_angl, ox, spec, clr}) {\r\n\r\n      const {_row} = elm;\r\n      const {ПоПериметру, ПоШагам, ПоФормуле, ДляЭлемента, ПоПлощади, ДлинаПоПарам, ГабаритыПоПарам, ПоСоединениям} = enm.count_calculating_ways;\r\n      const {profile_items} = enm.elm_types;\r\n      const {new_spec_row, calc_qty_len, calc_count_area_mass} = ProductsBuilding;\r\n\r\n      if(!spec){\r\n        spec = ox.specification;\r\n      }\r\n\r\n      this.filtered_spec({elm, is_high_level_call: true, len_angl, ox, clr}).forEach((row_ins_spec) => {\r\n\r\n        const origin = row_ins_spec._origin || this;\r\n        let {count_calc_method, sz, offsets, coefficient, formula} = row_ins_spec;\r\n        if(!coefficient) {\r\n          coefficient = 0.001;\r\n        }\r\n\r\n        let row_spec;\r\n\r\n        if((count_calc_method != ПоПериметру && count_calc_method != ПоШагам) || profile_items.includes(_row.elm_type)){\r\n          row_spec = new_spec_row({elm, row_base: row_ins_spec, origin, spec, ox});\r\n        }\r\n\r\n        if(count_calc_method == ПоФормуле && !formula.empty()){\r\n          row_spec = new_spec_row({row_spec, elm, row_base: row_ins_spec, origin, spec, ox});\r\n        }\r\n        else if(profile_items.includes(_row.elm_type) || count_calc_method == ДляЭлемента){\r\n          calc_qty_len(row_spec, row_ins_spec, len_angl ? len_angl.len : _row.len);\r\n          if(count_calc_method == ПоСоединениям){\r\n            for(const node of [elm.rays.b, elm.rays.e]) {\r\n              const {cnn} = node;\r\n              if(cnn) {\r\n                row_spec.len -= cnn.nom_size({nom: row_spec.nom, elm, len_angl: node.len_angl(), ox}) * coefficient;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else{\r\n\r\n          if(count_calc_method == ПоПлощади){\r\n            row_spec.qty = row_ins_spec.quantity;\r\n            if(this.insert_type == enm.inserts_types.МоскитнаяСетка){\r\n              const bounds = elm.layer.bounds_inner(sz);\r\n              row_spec.len = bounds.height * coefficient;\r\n              row_spec.width = bounds.width * coefficient;\r\n              row_spec.s = (row_spec.len * row_spec.width).round(3);\r\n            }\r\n            else if(this.insert_type == enm.inserts_types.Жалюзи) {\r\n              if(elm.bounds_light) {\r\n                const bounds = elm.bounds_light();\r\n                row_spec.len = (bounds.height + offsets) * coefficient;\r\n                row_spec.width = (bounds.width + sz) * coefficient;\r\n              }\r\n              else {\r\n                row_spec.len = elm.len * coefficient;\r\n                row_spec.width = elm.height * coefficient;\r\n              }\r\n              row_spec.s = (row_spec.len * row_spec.width).round(3);\r\n            }\r\n            else{\r\n              row_spec.len = (_row.y2 - _row.y1 - sz) * coefficient;\r\n              row_spec.width = (_row.x2 - _row.x1 - sz) * coefficient;\r\n              row_spec.s = _row.s;\r\n            }\r\n          }\r\n          else if(count_calc_method == ПоПериметру){\r\n            const row_prm = {_row: {len: 0, angle_hor: 0, s: _row.s}};\r\n            const perimeter = elm.perimeter ? elm.perimeter : (\r\n              this.insert_type == enm.inserts_types.МоскитнаяСетка ? elm.layer.perimeter_inner(sz) : elm.layer.perimeter\r\n            )\r\n            perimeter.forEach((rib) => {\r\n              row_prm._row._mixin(rib);\r\n              row_prm.is_linear = () => rib.profile ? rib.profile.is_linear() : true;\r\n              if(this.check_restrictions(row_ins_spec, row_prm, true)){\r\n                row_spec = new_spec_row({elm, row_base: row_ins_spec, origin, spec, ox});\r\n                const qty = !formula.empty() && formula.execute({\r\n                  ox: ox,\r\n                  elm: rib.profile || rib,\r\n                  cnstr: len_angl && len_angl.cnstr || 0,\r\n                  inset: (len_angl && len_angl.hasOwnProperty('cnstr')) ? len_angl.origin : utils.blank.guid,\r\n                  row_ins: row_ins_spec,\r\n                  row_spec: row_spec,\r\n                  clr,\r\n                  len: rib.len\r\n                });\r\n                if(qty) {\r\n                  if(!row_spec.qty) {\r\n                    row_spec.qty = qty;\r\n                  }\r\n                }\r\n                else {\r\n                  calc_qty_len(row_spec, row_ins_spec, rib.len);\r\n                }\r\n                calc_count_area_mass(row_spec, spec, _row, row_ins_spec.angle_calc_method);\r\n              }\r\n              row_spec = null;\r\n            });\r\n\r\n          }\r\n          else if(count_calc_method == ПоШагам){\r\n\r\n            const bounds = this.insert_type == enm.inserts_types.МоскитнаяСетка ?\r\n              elm.layer.bounds_inner(sz) : {height: _row.y2 - _row.y1, width: _row.x2 - _row.x1};\r\n\r\n            const h = (!row_ins_spec.step_angle || row_ins_spec.step_angle == 180 ? bounds.height : bounds.width);\r\n            const w = !row_ins_spec.step_angle || row_ins_spec.step_angle == 180 ? bounds.width : bounds.height;\r\n            if(row_ins_spec.step){\r\n              let qty = 0;\r\n              let pos;\r\n              if(row_ins_spec.do_center && h >= row_ins_spec.step ){\r\n                pos = h / 2;\r\n                if(pos >= offsets &&  pos <= h - offsets){\r\n                  qty++;\r\n                }\r\n                for(let i = 1; i <= Math.ceil(h / row_ins_spec.step); i++){\r\n                  pos = h / 2 + i * row_ins_spec.step;\r\n                  if(pos >= offsets &&  pos <= h - offsets){\r\n                    qty++;\r\n                  }\r\n                  pos = h / 2 - i * row_ins_spec.step;\r\n                  if(pos >= offsets &&  pos <= h - offsets){\r\n                    qty++;\r\n                  }\r\n                }\r\n              }\r\n              else{\r\n                for(let i = 1; i <= Math.ceil(h / row_ins_spec.step); i++){\r\n                  pos = i * row_ins_spec.step;\r\n                  if(pos >= offsets &&  pos <= h - offsets){\r\n                    qty++;\r\n                  }\r\n                }\r\n              }\r\n\r\n              if(qty){\r\n                row_spec = new_spec_row({elm, row_base: row_ins_spec, origin, spec, ox});\r\n                calc_qty_len(row_spec, row_ins_spec, w);\r\n                row_spec.qty *= qty;\r\n                calc_count_area_mass(row_spec, spec, _row, row_ins_spec.angle_calc_method);\r\n              }\r\n              row_spec = null;\r\n            }\r\n          }\r\n          else if(count_calc_method == ДлинаПоПарам){\r\n            let len = 0;\r\n            this.selection_params.find_rows({elm: row_ins_spec.elm}, ({param}) => {\r\n              if(param.type.digits) {\r\n                ox.params.find_rows({cnstr: 0, param}, ({value}) => {\r\n                  len = value;\r\n                  return false;\r\n                });\r\n              };\r\n              if(len) return false;\r\n            });\r\n\r\n            row_spec.qty = row_ins_spec.quantity;\r\n            row_spec.len = (len - sz) * coefficient;\r\n            row_spec.width = 0;\r\n            row_spec.s = 0;\r\n          }\r\n          else if(count_calc_method == ГабаритыПоПарам){\r\n            let len = 0, width = 0;\r\n            this.selection_params.find_rows({elm: row_ins_spec.elm}, ({param}) => {\r\n              if(param.type.digits) {\r\n                ox.params.find_rows({cnstr: 0, param}, ({value}) => {\r\n                  if(!len) {\r\n                    len = value;\r\n                  }\r\n                  else if(!width) {\r\n                    width = value;\r\n                  }\r\n                  return false;\r\n                });\r\n              };\r\n              if(len && width) return false;\r\n            });\r\n            row_spec.qty = row_ins_spec.quantity;\r\n            row_spec.len = (len - sz) * coefficient;\r\n            row_spec.width = (width - sz) * coefficient;\r\n            row_spec.s = (row_spec.len * row_spec.width).round(3);\r\n          }\r\n          else{\r\n            throw new Error(\"count_calc_method: \" + row_ins_spec.count_calc_method);\r\n          }\r\n        }\r\n\r\n        if(row_spec){\r\n          if(!formula.empty()){\r\n            const qty = formula.execute({\r\n              ox: ox,\r\n              elm: elm,\r\n              cnstr: len_angl && len_angl.cnstr || 0,\r\n              inset: (len_angl && len_angl.hasOwnProperty('cnstr')) ? len_angl.origin : utils.blank.guid,\r\n              row_ins: row_ins_spec,\r\n              row_spec: row_spec,\r\n              clr,\r\n              len: len_angl ? len_angl.len : _row.len\r\n            });\r\n            if(count_calc_method == ПоФормуле){\r\n              row_spec.qty = qty;\r\n            }\r\n            else if(formula.condition_formula && !qty){\r\n              row_spec.qty = 0;\r\n            }\r\n          }\r\n          calc_count_area_mass(row_spec, spec, _row, row_ins_spec.angle_calc_method);\r\n        }\r\n      });\r\n\r\n      if(spec !== ox.specification && this.insert_type == enm.inserts_types.Жалюзи) {\r\n        const bounds = {x: 0, y: 0};\r\n        spec.forEach(({len, width}) => {\r\n          if(len && width) {\r\n            if(bounds.x < len) {\r\n              bounds.x = len;\r\n            }\r\n            if(bounds.y < width) {\r\n              bounds.y = width;\r\n            }\r\n          }\r\n        });\r\n        const {_owner} = spec;\r\n        _owner.x = bounds.y * 1000;\r\n        _owner.y = bounds.x * 1000;\r\n        _owner.s = (bounds.x * bounds.y).round(3);\r\n      }\r\n    }\r\n\r\n    get thickness() {\r\n\r\n      const {_data} = this;\r\n\r\n      if(!_data.hasOwnProperty(\"thickness\")){\r\n        _data.thickness = 0;\r\n        const nom = this.nom(null, true);\r\n        if(nom && !nom.empty()){\r\n          _data.thickness = nom.thickness;\r\n        }\r\n        else{\r\n          this.specification.forEach(({nom}) => {\r\n            if(nom) {\r\n              _data.thickness += nom.thickness;\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      return _data.thickness;\r\n    }\r\n\r\n    used_params() {\r\n      const {_data} = this;\r\n      if(_data.used_params) {\r\n        return _data.used_params;\r\n      }\r\n\r\n      const sprms = [];\r\n\r\n      this.selection_params.forEach(({param}) => {\r\n        if(!param.empty() && (!param.is_calculated || param.show_calculated) && !sprms.includes(param)){\r\n          sprms.push(param);\r\n        }\r\n      });\r\n\r\n      this.product_params.forEach(({param}) => {\r\n        if(!param.empty() && (!param.is_calculated || param.show_calculated) && !sprms.includes(param)){\r\n          sprms.push(param);\r\n        }\r\n      });\r\n\r\n      const {CatFurns, enm: {predefined_formulas: {cx_prm}}} = $p;\r\n      this.specification.forEach(({nom, algorithm}) => {\r\n        if(nom instanceof CatInserts) {\r\n          for(const param of nom.used_params()) {\r\n            !sprms.includes(param) && sprms.push(param);\r\n          }\r\n        }\r\n        else if(algorithm === cx_prm && !sprms.includes(nom)) {\r\n          sprms.push(nom);\r\n        }\r\n      });\r\n\r\n      return _data.used_params = sprms;\r\n    }\r\n\r\n  }\r\n\r\n})($p);\r\n\r\n\r\n\r\n$p.cat.insert_bind.__define({\r\n\r\n  insets: {\r\n    value(ox) {\r\n      const {sys, owner} = ox;\r\n      const res = [];\r\n      this.forEach((o) => {\r\n        o.production.forEach((row) => {\r\n          const {nom} = row;\r\n          if(sys._hierarchy(nom) || owner._hierarchy(nom)){\r\n            o.inserts.forEach(({inset, elm_type}) => {\r\n              if(!res.some((irow) => irow.inset == inset &&  irow.elm_type == elm_type)){\r\n                res.push({inset, elm_type});\r\n              }\r\n            });\r\n          }\r\n        })\r\n      })\r\n      return res;\r\n    }\r\n  }\r\n\r\n});\r\n\r\n\r\n\r\n$p.cat.nom.__define({\r\n\r\n\tsql_selection_list_flds: {\r\n\t\tvalue(initial_value){\r\n\t\t\treturn \"SELECT _t_.ref, _t_.`_deleted`, _t_.is_folder, _t_.id, _t_.article, _t_.name as presentation, _u_.name as nom_unit, _k_.name as nom_kind, _t_.thickness,\" +\r\n\t\t\t\t\" case when _t_.ref = '\" + initial_value + \"' then 0 else 1 end as is_initial_value FROM cat_nom AS _t_\" +\r\n\t\t\t\t\" left outer join cat_units as _u_ on _u_.ref = _t_.base_unit\" +\r\n\t\t\t\t\" left outer join cat_nom_kinds as _k_ on _k_.ref = _t_.nom_kind %3 %4 LIMIT 300\";\r\n\t\t}\r\n\t},\r\n\r\n\tsql_selection_where_flds: {\r\n\t\tvalue(filter){\r\n\t\t\treturn \" OR _t_.article LIKE '\" + filter + \"' OR _t_.id LIKE '\" + filter + \"' OR _t_.name LIKE '\" + filter + \"'\";\r\n\t\t}\r\n\t},\r\n\r\n});\r\n\r\n\r\n\r\n$p.cat.partners.__define({\r\n\r\n\tsql_selection_where_flds: {\r\n\t\tvalue(filter){\r\n\t\t\treturn \" OR inn LIKE '\" + filter + \"' OR name_full LIKE '\" + filter + \"' OR name LIKE '\" + filter + \"'\";\r\n\t\t}\r\n\t}\r\n});\r\n\r\n$p.CatPartners.prototype.__define({\r\n\r\n\taddr: {\r\n\t\tget() {\r\n\r\n\t\t\treturn this.contact_information._obj.reduce(function (val, row) {\r\n\r\n\t\t\t\tif(row.kind == $p.cat.contact_information_kinds.predefined(\"ЮрАдресКонтрагента\") && row.presentation)\r\n\t\t\t\t\treturn row.presentation;\r\n\r\n\t\t\t\telse if(val)\r\n\t\t\t\t\treturn val;\r\n\r\n\t\t\t\telse if(row.presentation && (\r\n\t\t\t\t\t\trow.kind == $p.cat.contact_information_kinds.predefined(\"ФактАдресКонтрагента\") ||\r\n\t\t\t\t\t\trow.kind == $p.cat.contact_information_kinds.predefined(\"ПочтовыйАдресКонтрагента\")\r\n\t\t\t\t\t))\r\n\t\t\t\t\treturn row.presentation;\r\n\r\n\t\t\t}, \"\")\r\n\r\n\t\t}\r\n\t},\r\n\r\n\tphone: {\r\n\t\tget() {\r\n\r\n\t\t\treturn this.contact_information._obj.reduce(function (val, row) {\r\n\r\n\t\t\t\tif(row.kind == $p.cat.contact_information_kinds.predefined(\"ТелефонКонтрагента\") && row.presentation)\r\n\t\t\t\t\treturn row.presentation;\r\n\r\n\t\t\t\telse if(val)\r\n\t\t\t\t\treturn val;\r\n\r\n\t\t\t\telse if(row.kind == $p.cat.contact_information_kinds.predefined(\"ТелефонКонтрагентаМобильный\") && row.presentation)\r\n\t\t\t\t\treturn row.presentation;\r\n\r\n\t\t\t}, \"\")\r\n\t\t}\r\n\t},\r\n\r\n\tlong_presentation: {\r\n\t\tget() {\r\n\t\t  const {addr, phone, inn, kpp} = this;\r\n\t\t\tlet res = this.name_full || this.name;\r\n\r\n\t\t\tif(inn){\r\n        res+= \", ИНН\" + inn;\r\n      }\r\n\t\t\tif(kpp){\r\n        res+= \", КПП\" + kpp;\r\n      }\r\n\t\t\tif(addr){\r\n        res+= \", \" + addr;\r\n      }\r\n\t\t\tif(phone){\r\n        res+= \", \" + phone;\r\n      }\r\n\t\t\treturn res;\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n$p.cat.production_params.__define({\r\n\r\n\tslist: function(prop, is_furn){\r\n\t\tvar res = [], rt, at, pmgr,\r\n\t\t\top = this.get(prop);\r\n\r\n\t\tif(op && op.type.is_ref){\r\n\t\t\tfor(rt in op.type.types)\r\n\t\t\t\tif(op.type.types[rt].indexOf(\".\") > -1){\r\n\t\t\t\t\tat = op.type.types[rt].split(\".\");\r\n\t\t\t\t\tpmgr = $p[at[0]][at[1]];\r\n\t\t\t\t\tif(pmgr){\r\n\t\t\t\t\t\tif(pmgr.class_name==\"enm.open_directions\")\r\n\t\t\t\t\t\t\tpmgr.forEach(function(v){\r\n\t\t\t\t\t\t\t\tif(v.name!=$p.enm.tso.folding)\r\n\t\t\t\t\t\t\t\t\tres.push({value: v.ref, text: v.synonym});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tpmgr.find_rows({owner: prop}, function(v){\r\n\t\t\t\t\t\t\t\tres.push({value: v.ref, text: v.presentation});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n});\r\n\r\n$p.CatProduction_params.prototype.__define({\r\n\r\n\tnoms: {\r\n\t\tget(){\r\n\t\t\tconst noms = [];\r\n\t\t\tthis.elmnts._obj.forEach(({nom}) => !$p.utils.is_empty_guid(nom) && noms.indexOf(nom) == -1 && noms.push(nom));\r\n\t\t\treturn noms;\r\n\t\t}\r\n\t},\r\n\r\n  furns: {\r\n    value(ox, cnstr = 0){\r\n      const {furn} = $p.job_prm.properties;\r\n      const {furns} = $p.cat;\r\n      const list = [];\r\n      if(furn){\r\n        const links = furn.params_links({\r\n          grid: {selection: {cnstr}},\r\n          obj: {_owner: {_owner: ox}}\r\n        });\r\n        if(links.length){\r\n          links.forEach((link) => link.values._obj.forEach(({value, by_default, forcibly}) => {\r\n            const v = furns.get(value);\r\n            v && list.push({furn: v, by_default, forcibly});\r\n          }));\r\n        }\r\n      }\r\n      return list;\r\n    }\r\n  },\r\n\r\n\tinserts: {\r\n\t\tvalue(elm_types, by_default){\r\n\t\t\tvar __noms = [];\r\n\t\t\tif(!elm_types)\r\n\t\t\t\telm_types = $p.enm.elm_types.rama_impost;\r\n\r\n\t\t\telse if(typeof elm_types == \"string\")\r\n\t\t\t\telm_types = $p.enm.elm_types[elm_types];\r\n\r\n\t\t\telse if(!Array.isArray(elm_types))\r\n\t\t\t\telm_types = [elm_types];\r\n\r\n\t\t\tthis.elmnts.forEach((row) => {\r\n\t\t\t\tif(!row.nom.empty() && elm_types.indexOf(row.elm_type) != -1 &&\r\n\t\t\t\t\t(by_default == \"rows\" || !__noms.some((e) => row.nom == e.nom)))\r\n\t\t\t\t\t__noms.push(row);\r\n\t\t\t});\r\n\r\n\t\t\tif(by_default == \"rows\")\r\n\t\t\t\treturn __noms;\r\n\r\n\t\t\t__noms.sort(function (a, b) {\r\n\r\n\t\t\t\tif(by_default){\r\n\r\n\t\t\t\t\tif (a.by_default && !b.by_default)\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\telse if (!a.by_default && b.by_default)\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn 0;\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif (a.nom.name < b.nom.name)\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\telse if (a.nom.name > b.nom.name)\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn __noms.map((e) => e.nom);\r\n\t\t}\r\n\t},\r\n\r\n\trefill_prm: {\r\n\t\tvalue(ox, cnstr = 0, force, project) {\r\n\r\n\t\t\tconst prm_ts = !cnstr ? this.product_params : this.furn_params;\r\n\t\t\tconst adel = [];\r\n\t\t\tconst auto_align = ox.calc_order.obj_delivery_state == $p.enm.obj_delivery_states.Шаблон && $p.job_prm.properties.auto_align;\r\n\t\t\tconst {params} = ox;\r\n\r\n\t\t\tfunction add_prm(proto) {\r\n        let row;\r\n        params.find_rows({cnstr: cnstr, param: proto.param}, (_row) => {\r\n          row = _row;\r\n          return false;\r\n        });\r\n\r\n        if(!row){\r\n          if(cnstr){\r\n            return;\r\n          }\r\n          row = params.add({cnstr: cnstr, param: proto.param, value: proto.value});\r\n        }\r\n\r\n        const links = proto.param.params_links({grid: {selection: {cnstr}}, obj: row});\r\n        const hide = proto.hide || links.some((link) => link.hide);\r\n        if(row.hide != hide){\r\n          row.hide = hide;\r\n        }\r\n\r\n        if(proto.forcibly && row.value != proto.value){\r\n          row.value = proto.value;\r\n        }\r\n      }\r\n\r\n\t\t\tif(!cnstr){\r\n        params.find_rows({cnstr: cnstr}, (row) => {\r\n\t\t\t\t  const {param} = row;\r\n\t\t\t\t\tif(param !== auto_align && prm_ts.find_rows({param}).length == 0){\r\n            adel.push(row);\r\n          }\r\n\t\t\t\t});\r\n\t\t\t\tadel.forEach((row) => params.del(row));\r\n\t\t\t}\r\n\r\n\t\t\tprm_ts.forEach(add_prm);\r\n\r\n      !cnstr && auto_align && add_prm({param: auto_align, value: '', hide: false});\r\n\r\n\t\t\tif(!cnstr){\r\n\t\t\t\tox.sys = this;\r\n\t\t\t\tox.owner = ox.prod_nom;\r\n\r\n\t\t\t\tox.constructions.forEach((row) => {\r\n          if(!row.furn.empty()) {\r\n\t\t\t\t\t\tlet changed = force;\r\n\t\t\t\t\t\tconst furns = this.furns(ox, row.cnstr);\r\n            if(furns.length) {\r\n              if(furns.some((frow) => {\r\n                if(frow.forcibly) {\r\n                  row.furn = frow.furn;\r\n                  return changed = true;\r\n                }\r\n              })) {\r\n                ;\r\n              }\r\n              else if(furns.some((frow) => row.furn === frow.furn)) {\r\n                ;\r\n              }\r\n              else if(furns.some((frow) => {\r\n                if(frow.by_default) {\r\n                  row.furn = frow.furn;\r\n                  return changed = true;\r\n                }\r\n              })) {\r\n                ;\r\n              }\r\n              else {\r\n                row.furn = furns[0].furn;\r\n                changed = true;\r\n              }\r\n            }\r\n\r\n            if(changed) {\r\n              if(!project && typeof window !== 'undefined' && window.paper) {\r\n                project = window.paper.project;\r\n              }\r\n              const contour = project && project.getItem({cnstr: row.cnstr});\r\n              if(contour) {\r\n                row.furn.refill_prm(contour);\r\n                contour.notify(contour, 'furn_changed');\r\n              }\r\n              else {\r\n                ox.sys.refill_prm(ox, row.cnstr);\r\n              }\r\n            }\r\n          }\r\n        });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\n\r\nclass FakeLenAngl {\r\n\r\n  constructor({len, inset}) {\r\n    this.len = len;\r\n    this.origin = inset;\r\n  }\r\n\r\n  get angle() {\r\n    return 0;\r\n  }\r\n\r\n  get alp1() {\r\n    return 0;\r\n  }\r\n\r\n  get alp2() {\r\n    return 0;\r\n  }\r\n\r\n  get cnstr() {\r\n    return 0;\r\n  }\r\n\r\n}\r\n\r\nclass FakeElm {\r\n\r\n  constructor(row_spec) {\r\n    this.row_spec = row_spec;\r\n  }\r\n\r\n  get elm() {\r\n    return 0;\r\n  }\r\n\r\n  get angle_hor() {\r\n    return 0;\r\n  }\r\n\r\n  get _row() {\r\n    return this;\r\n  }\r\n\r\n  get clr() {\r\n    const {row_spec} = this;\r\n    return row_spec instanceof $p.DocCalc_orderProductionRow ? row_spec.characteristic.clr : row_spec.clr;\r\n  }\r\n\r\n  get len() {\r\n    return this.row_spec.len;\r\n  }\r\n\r\n  get height() {\r\n    const {height, width} = this.row_spec;\r\n    return height === undefined ? width : height;\r\n  }\r\n\r\n  get depth() {\r\n    return this.row_spec.depth || 0;\r\n  }\r\n\r\n  get s() {\r\n    return this.row_spec.s;\r\n  }\r\n\r\n  get perimeter() {\r\n    const {len, height, width} = this.row_spec;\r\n    return [{len, angle: 0}, {len: height === undefined ? width : height, angle: 90}];\r\n  }\r\n\r\n  get x1() {\r\n    return 0;\r\n  }\r\n\r\n  get y1() {\r\n    return 0;\r\n  }\r\n\r\n  get x2() {\r\n    return this.height;\r\n  }\r\n\r\n  get y2() {\r\n    return this.len;\r\n  }\r\n\r\n}\r\n\r\n$p.DocCalc_order = class DocCalc_order extends $p.DocCalc_order {\r\n\r\n\r\n  after_create() {\r\n\r\n    const {enm, cat, current_user, DocCalc_order} = $p;\r\n\r\n    if(!current_user) {\r\n      return Promise.resolve(this);\r\n    }\r\n\r\n    const {acl_objs} = current_user;\r\n\r\n    acl_objs.find_rows({by_default: true, type: cat.organizations.class_name}, (row) => {\r\n      this.organization = row.acl_obj;\r\n      return false;\r\n    });\r\n\r\n    DocCalc_order.set_department.call(this);\r\n\r\n    acl_objs.find_rows({by_default: true, type: cat.partners.class_name}, (row) => {\r\n      this.partner = row.acl_obj;\r\n      return false;\r\n    });\r\n\r\n    this.contract = cat.contracts.by_partner_and_org(this.partner, this.organization);\r\n\r\n    this.manager = current_user;\r\n\r\n    this.obj_delivery_state = enm.obj_delivery_states.Черновик;\r\n\r\n    return this.number_doc ? Promise.resolve(this) : this.new_number_doc();\r\n\r\n  }\r\n\r\n  before_save() {\r\n\r\n    const {msg, pricing, utils: {blank}, cat, enm: {\r\n      obj_delivery_states: {Отклонен, Отозван, Шаблон, Подтвержден, Отправлен},\r\n      elm_types: {ОшибкаКритическая, ОшибкаИнфо},\r\n    }} = $p;\r\n\r\n    const must_be_saved = [Подтвержден, Отправлен].indexOf(this.obj_delivery_state) == -1;\r\n\r\n    if(this.posted) {\r\n      if(this.obj_delivery_state == Отклонен || this.obj_delivery_state == Отозван || this.obj_delivery_state == Шаблон) {\r\n        msg.show_msg && msg.show_msg({\r\n          type: 'alert-warning',\r\n          text: 'Нельзя провести заказ со статусом<br/>\"Отклонён\", \"Отозван\" или \"Шаблон\"',\r\n          title: this.presentation\r\n        });\r\n        return false;\r\n      }\r\n      else if(this.obj_delivery_state != Подтвержден) {\r\n        this.obj_delivery_state = Подтвержден;\r\n      }\r\n    }\r\n    else if(this.obj_delivery_state == Подтвержден) {\r\n      this.obj_delivery_state = Отправлен;\r\n    }\r\n\r\n    if(this.obj_delivery_state == Шаблон) {\r\n      this.department = blank.guid;\r\n      this.partner = blank.guid;\r\n    }\r\n    else {\r\n      if(this.department.empty()) {\r\n        msg.show_msg && msg.show_msg({\r\n          type: 'alert-warning',\r\n          text: 'Не заполнен реквизит \"офис продаж\" (подразделение)',\r\n          title: this.presentation\r\n        });\r\n        return false || must_be_saved;\r\n      }\r\n      if(this.partner.empty()) {\r\n        msg.show_msg && msg.show_msg({\r\n          type: 'alert-warning',\r\n          text: 'Не указан контрагент (дилер)',\r\n          title: this.presentation\r\n        });\r\n        return false || must_be_saved;\r\n      }\r\n    }\r\n\r\n    let doc_amount = 0, internal = 0;\r\n    const errors = this._data.errors = new Map();\r\n    this.production.forEach(({amount, amount_internal, characteristic}) => {\r\n      doc_amount += amount;\r\n      internal += amount_internal;\r\n      characteristic.specification.forEach(({nom, elm}) => {\r\n        if([ОшибкаКритическая, ОшибкаИнфо].includes(nom.elm_type)) {\r\n          if(!errors.has(characteristic)){\r\n            errors.set(characteristic, new Map());\r\n          }\r\n          if(!errors.has(nom.elm_type)){\r\n            errors.set(nom.elm_type, new Set());\r\n          }\r\n          if(!errors.get(characteristic).has(nom)){\r\n            errors.get(characteristic).set(nom, new Set());\r\n          }\r\n          errors.get(characteristic).get(nom).add(elm);\r\n          errors.get(nom.elm_type).add(nom);\r\n        }\r\n      });\r\n    });\r\n    const {rounding} = this;\r\n    const {_obj, obj_delivery_state, category} = this;\r\n    this.doc_amount = doc_amount.round(rounding);\r\n    this.amount_internal = internal.round(rounding);\r\n    this.amount_operation = pricing.from_currency_to_currency(doc_amount, this.date, this.doc_currency).round(rounding);\r\n\r\n    if (errors.size) {\r\n      let critical, text = '';\r\n      errors.forEach((errors, characteristic) => {\r\n        if (characteristic instanceof $p.CatCharacteristics) {\r\n          text += `<b>${characteristic.name}:</b><br/>`;\r\n          errors.forEach((elms, nom) => {\r\n            text += `${nom.name} - элементы:${Array.from(elms)}<br/>`;\r\n            if(nom.elm_type == ОшибкаКритическая) {\r\n              critical = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      msg.show_msg && msg.show_msg({\r\n        type: 'alert-warning',\r\n        title: 'Ошибки в заказе',\r\n        text,\r\n      });\r\n\r\n      console.error(text);\r\n\r\n      if (critical && !must_be_saved) {\r\n        if(obj_delivery_state == 'Отправлен') {\r\n          this.obj_delivery_state = 'Черновик';\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if(obj_delivery_state == 'Шаблон') {\r\n      _obj.state = 'template';\r\n    }\r\n    else if(category == 'service') {\r\n      _obj.state = 'service';\r\n    }\r\n    else if(category == 'complaints') {\r\n      _obj.state = 'complaints';\r\n    }\r\n    else if(obj_delivery_state == 'Отправлен') {\r\n      _obj.state = 'sent';\r\n    }\r\n    else if(obj_delivery_state == 'Отклонен') {\r\n      _obj.state = 'declined';\r\n    }\r\n    else if(obj_delivery_state == 'Подтвержден') {\r\n      _obj.state = 'confirmed';\r\n    }\r\n    else if(obj_delivery_state == 'Архив') {\r\n      _obj.state = 'zarchive';\r\n    }\r\n    else {\r\n      _obj.state = 'draft';\r\n    }\r\n\r\n    return this.product_rows(true)\r\n      .then(() => {\r\n        return this._manager.pouch_db\r\n          .query('linked', {startkey: [this.ref, 'cat.characteristics'], endkey: [this.ref, 'cat.characteristics\\u0fff']})\r\n          .then(({rows}) => {\r\n            let res = Promise.resolve();\r\n            let deleted = 0;\r\n            for (const {id} of rows) {\r\n              const ref = id.substr(20);\r\n              if(this.production.find_rows({characteristic: ref}).length) {\r\n                continue;\r\n              }\r\n              deleted ++;\r\n              res = res\r\n                .then(() => cat.characteristics.get(ref, 'promise'))\r\n                .then((ox) => !ox.is_new() && !ox._deleted && ox.mark_deleted(true));\r\n            }\r\n            return res.then(() => deleted);\r\n          })\r\n          .then((res) => {\r\n            res && this._manager.emit_async('svgs', this);\r\n          })\r\n          .catch((err) => null);\r\n      })\r\n      .then(() => this);\r\n\r\n  }\r\n\r\n  value_change(field, type, value) {\r\n    if(field === 'organization') {\r\n      this.organization = value;\r\n      if(this.contract.organization != value) {\r\n        this.contract = $p.cat.contracts.by_partner_and_org(this.partner, value);\r\n        !this.constructor.prototype.hasOwnProperty('new_number_doc') && this.new_number_doc();\r\n      }\r\n    }\r\n    else if(field === 'partner' && this.contract.owner != value) {\r\n      this.contract = $p.cat.contracts.by_partner_and_org(value, this.organization);\r\n    }\r\n    const ads = ['contract'];\r\n    if(field === 'obj_delivery_state' && this.clear_templates_props) {\r\n      ads.push('extra_fields');\r\n      if(value != 'Шаблон') {\r\n        this.clear_templates_props();\r\n      }\r\n    }\r\n    this._manager.emit_add_fields(this, ads);\r\n\r\n  }\r\n\r\n  del_row(row) {\r\n    if(row instanceof $p.DocCalc_orderProductionRow) {\r\n      const {characteristic} = row;\r\n      if(!characteristic.empty() && !characteristic.calc_order.empty()) {\r\n        const {production, orders, presentation, _data} = this;\r\n\r\n        const {msg} = $p;\r\n        const {leading_elm, leading_product, origin} = characteristic;\r\n        if(!leading_product.empty() && leading_product.calc_order_row && leading_product.inserts.find({cnstr: -leading_elm, inset: origin})) {\r\n          msg.show_msg && msg.show_msg({\r\n            type: 'alert-warning',\r\n            text: `Изделие <i>${characteristic.prod_name(true)}</i> не может быть удалено<br/><br/>Для удаления, пройдите в <i>${\r\n              leading_product.prod_name(true)}</i> и отредактируйте доп. вставки`,\r\n            title: presentation\r\n          });\r\n          return false;\r\n        }\r\n\r\n        const {_loading} = _data;\r\n        _data._loading = true;\r\n        production.find_rows({ordn: characteristic}).forEach(({_row}) => {\r\n          production.del(_row.row - 1);\r\n        });\r\n        orders.forEach(({invoice}) => {\r\n          if(!invoice.empty()) {\r\n            invoice.goods.find_rows({nom_characteristic: characteristic}).forEach(({_row}) => {\r\n              invoice.goods.del(_row.row - 1);\r\n            });\r\n          }\r\n        });\r\n        _data._loading = _loading;\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  after_del_row(name) {\r\n    name === 'production' && this.product_rows();\r\n    return this;\r\n  }\r\n\r\n  unload() {\r\n    this.production.forEach(({characteristic}) => {\r\n      if(!characteristic.empty() && characteristic.calc_order === this) {\r\n        characteristic.unload();\r\n      }\r\n    });\r\n    return super.unload();\r\n  }\r\n\r\n\r\n  get doc_currency() {\r\n    const currency = this.contract.settlements_currency;\r\n    return currency.empty() ? $p.job_prm.pricing.main_currency : currency;\r\n  }\r\n\r\n  set doc_currency(v) {\r\n\r\n  }\r\n\r\n  get rounding() {\r\n    const {pricing} = $p.job_prm;\r\n    if(!pricing.hasOwnProperty('rounding')) {\r\n      const parts = this.doc_currency ? this.doc_currency.parameters_russian_recipe.split(',') : [2];\r\n      pricing.rounding = parseInt(parts[parts.length - 1]);\r\n      if(isNaN(pricing.rounding)) {\r\n        pricing.rounding = 2;\r\n      }\r\n    }\r\n    return pricing.rounding;\r\n  }\r\n\r\n  get contract() {\r\n    return this._getter('contract');\r\n  }\r\n  set contract(v) {\r\n    this._setter('contract', v);\r\n    this.vat_consider = this.contract.vat_consider;\r\n    this.vat_included = this.contract.vat_included;\r\n  }\r\n\r\n  product_rows(save) {\r\n    let res = Promise.resolve();\r\n    this.production.forEach(({row, characteristic}) => {\r\n      if(!characteristic.empty() && characteristic.calc_order === this) {\r\n        if(characteristic.product !== row || characteristic._modified ||\r\n          characteristic.partner !== this.partner ||\r\n          characteristic.obj_delivery_state !== this.obj_delivery_state ||\r\n          characteristic.department !== this.department) {\r\n\r\n          characteristic.product = row;\r\n          characteristic.obj_delivery_state = this.obj_delivery_state;\r\n          characteristic.partner = this.partner;\r\n          characteristic.department = this.department;\r\n\r\n          if(!characteristic.owner.empty()) {\r\n            if(save) {\r\n              res = res.then(() => characteristic.save());\r\n            }\r\n            else {\r\n              characteristic.name = characteristic.prod_name();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  dispatching_totals() {\r\n    var options = {\r\n      reduce: true,\r\n      limit: 10000,\r\n      group: true,\r\n      keys: []\r\n    };\r\n    this.production.forEach(({nom, characteristic}) => {\r\n      if(!characteristic.empty() && !nom.is_procedure && !nom.is_service && !nom.is_accessory) {\r\n        options.keys.push([characteristic.ref, '305e374b-3aa9-11e6-bf30-82cf9717e145', 1, 0]);\r\n      }\r\n    });\r\n    return $p.adapters.pouch.remote.doc.query('server/dispatching', options)\r\n      .then(function ({rows}) {\r\n        const res = {};\r\n        rows && rows.forEach(function ({key, value}) {\r\n          if(value.plan) {\r\n            value.plan = moment(value.plan).format('L');\r\n          }\r\n          if(value.fact) {\r\n            value.fact = moment(value.fact).format('L');\r\n          }\r\n          res[key[0]] = value;\r\n        });\r\n        return res;\r\n      });\r\n  }\r\n\r\n  print_data(attr = {}) {\r\n    const {organization, bank_account, partner, contract, manager} = this;\r\n    const {individual_person} = manager;\r\n    const our_bank_account = bank_account && !bank_account.empty() ? bank_account : organization.main_bank_account;\r\n    const get_imgs = [];\r\n    const {cat: {contact_information_kinds}, utils: {blank, blob_as_text, snake_ref}} = $p;\r\n\r\n    const res = {\r\n      АдресДоставки: this.shipping_address,\r\n      ВалютаДокумента: this.doc_currency.presentation,\r\n      ДатаЗаказаФорматD: moment(this.date).format('L'),\r\n      ДатаЗаказаФорматDD: moment(this.date).format('LL'),\r\n      ДатаТекущаяФорматD: moment().format('L'),\r\n      ДатаТекущаяФорматDD: moment().format('LL'),\r\n      ДоговорДатаФорматD: moment(contract.date.valueOf() == blank.date.valueOf() ? this.date : contract.date).format('L'),\r\n      ДоговорДатаФорматDD: moment(contract.date.valueOf() == blank.date.valueOf() ? this.date : contract.date).format('LL'),\r\n      ДоговорНомер: contract.number_doc ? contract.number_doc : this.number_doc,\r\n      ДоговорСрокДействия: moment(contract.validity).format('L'),\r\n      ЗаказНомер: this.number_doc,\r\n      Контрагент: partner.presentation,\r\n      КонтрагентОписание: partner.long_presentation,\r\n      КонтрагентДокумент: '',\r\n      КонтрагентКЛДолжность: '',\r\n      КонтрагентКЛДолжностьРП: '',\r\n      КонтрагентКЛИмя: '',\r\n      КонтрагентКЛИмяРП: '',\r\n      КонтрагентКЛК: '',\r\n      КонтрагентКЛОснованиеРП: '',\r\n      КонтрагентКЛОтчество: '',\r\n      КонтрагентКЛОтчествоРП: '',\r\n      КонтрагентКЛФамилия: '',\r\n      КонтрагентКЛФамилияРП: '',\r\n      КонтрагентИНН: partner.inn,\r\n      КонтрагентКПП: partner.kpp,\r\n      КонтрагентЮрФизЛицо: '',\r\n      КратностьВзаиморасчетов: this.settlements_multiplicity,\r\n      КурсВзаиморасчетов: this.settlements_course,\r\n      ЛистКомплектацииГруппы: '',\r\n      ЛистКомплектацииСтроки: '',\r\n      Организация: organization.presentation,\r\n      ОрганизацияГород: organization.contact_information._obj.reduce((val, row) => val || row.city, '') || 'Москва',\r\n      ОрганизацияАдрес: organization.contact_information._obj.reduce((val, row) => {\r\n        if(row.kind == contact_information_kinds.predefined('ЮрАдресОрганизации') && row.presentation) {\r\n          return row.presentation;\r\n        }\r\n        else if(val) {\r\n          return val;\r\n        }\r\n        else if(row.presentation && (\r\n            row.kind == contact_information_kinds.predefined('ФактАдресОрганизации') ||\r\n            row.kind == contact_information_kinds.predefined('ПочтовыйАдресОрганизации')\r\n          )) {\r\n          return row.presentation;\r\n        }\r\n      }, ''),\r\n      ОрганизацияТелефон: organization.contact_information._obj.reduce((val, row) => {\r\n        if(row.kind == contact_information_kinds.predefined('ТелефонОрганизации') && row.presentation) {\r\n          return row.presentation;\r\n        }\r\n        else if(val) {\r\n          return val;\r\n        }\r\n        else if(row.kind == contact_information_kinds.predefined('ФаксОрганизации') && row.presentation) {\r\n          return row.presentation;\r\n        }\r\n      }, ''),\r\n      ОрганизацияБанкБИК: our_bank_account.bank.id,\r\n      ОрганизацияБанкГород: our_bank_account.bank.city,\r\n      ОрганизацияБанкКоррСчет: our_bank_account.bank.correspondent_account,\r\n      ОрганизацияБанкНаименование: our_bank_account.bank.name,\r\n      ОрганизацияБанкНомерСчета: our_bank_account.account_number,\r\n      ОрганизацияИндивидуальныйПредприниматель: organization.individual_entrepreneur.presentation,\r\n      ОрганизацияИНН: organization.inn,\r\n      ОрганизацияКПП: organization.kpp,\r\n      ОрганизацияСвидетельствоДатаВыдачи: organization.certificate_date_issue,\r\n      ОрганизацияСвидетельствоКодОргана: organization.certificate_authority_code,\r\n      ОрганизацияСвидетельствоНаименованиеОргана: organization.certificate_authority_name,\r\n      ОрганизацияСвидетельствоСерияНомер: organization.certificate_series_number,\r\n      ОрганизацияЮрФизЛицо: organization.individual_legal.presentation,\r\n      Офис: this.department.presentation,\r\n      ПродукцияЭскизы: {},\r\n      Проект: this.project.presentation,\r\n      СистемыПрофилей: this.sys_profile,\r\n      СистемыФурнитуры: this.sys_furn,\r\n      Сотрудник: manager.presentation,\r\n      СотрудникКомментарий: manager.note,\r\n      СотрудникДолжность: individual_person.Должность || 'менеджер',\r\n      СотрудникДолжностьРП: individual_person.ДолжностьРП,\r\n      СотрудникИмя: individual_person.Имя,\r\n      СотрудникИмяРП: individual_person.ИмяРП,\r\n      СотрудникОснованиеРП: individual_person.ОснованиеРП,\r\n      СотрудникОтчество: individual_person.Отчество,\r\n      СотрудникОтчествоРП: individual_person.ОтчествоРП,\r\n      СотрудникФамилия: individual_person.Фамилия,\r\n      СотрудникФамилияРП: individual_person.ФамилияРП,\r\n      СотрудникФИО: individual_person.Фамилия +\r\n      (individual_person.Имя ? ' ' + individual_person.Имя[0].toUpperCase() + '.' : '' ) +\r\n      (individual_person.Отчество ? ' ' + individual_person.Отчество[0].toUpperCase() + '.' : ''),\r\n      СотрудникФИОРП: individual_person.ФамилияРП + ' ' + individual_person.ИмяРП + ' ' + individual_person.ОтчествоРП,\r\n      СуммаДокумента: this.doc_amount.toFixed(2),\r\n      СуммаДокументаПрописью: this.doc_amount.in_words(),\r\n      СуммаДокументаБезСкидки: this.production._obj.reduce((val, row) => val + row.quantity * row.price, 0).toFixed(2),\r\n      СуммаСкидки: this.production._obj.reduce((val, row) => val + row.discount, 0).toFixed(2),\r\n      СуммаНДС: this.production._obj.reduce((val, row) => val + row.vat_amount, 0).toFixed(2),\r\n      ТекстНДС: this.vat_consider ? (this.vat_included ? 'В том числе НДС 18%' : 'НДС 18% (сверху)') : 'Без НДС',\r\n      ТелефонПоАдресуДоставки: this.phone,\r\n      СуммаВключаетНДС: contract.vat_included,\r\n      УчитыватьНДС: contract.vat_consider,\r\n      ВсегоНаименований: this.production.count(),\r\n      ВсегоИзделий: 0,\r\n      ВсегоПлощадьИзделий: 0,\r\n      Продукция: [],\r\n      Аксессуары: [],\r\n      Услуги: [],\r\n      Материалы: [],\r\n      НомерВнутр: this.number_internal,\r\n      КлиентДилера: this.client_of_dealer,\r\n      Комментарий: this.note,\r\n    };\r\n\r\n    this.extra_fields.forEach((row) => {\r\n      res['Свойство' + row.property.name.replace(/\\s/g, '')] = String(row.value);\r\n    });\r\n\r\n    res.МонтажДоставкаСамовывоз = !this.shipping_address ? 'Самовывоз' : 'Монтаж по адресу: ' + this.shipping_address;\r\n\r\n    for (let key in organization._attachments) {\r\n      if(key.indexOf('logo') != -1) {\r\n        get_imgs.push(organization.get_attachment(key)\r\n          .then((blob) => {\r\n            return blob_as_text(blob, blob.type.indexOf('svg') == -1 ? 'data_url' : '');\r\n          })\r\n          .then((data_url) => {\r\n            res.ОрганизацияЛоготип = data_url;\r\n          })\r\n          .catch($p.record_log));\r\n        break;\r\n      }\r\n    }\r\n\r\n    return this.load_production().then(() => {\r\n\r\n      let editor, imgs = Promise.resolve();\r\n      const builder_props = attr.builder_props && Object.assign({}, $p.CatCharacteristics.builder_props_defaults, attr.builder_props);\r\n      this.production.forEach((row) => {\r\n        if(!row.characteristic.empty() && !row.nom.is_procedure && !row.nom.is_service && !row.nom.is_accessory) {\r\n\r\n          res.Продукция.push(this.row_description(row));\r\n\r\n          res.ВсегоИзделий += row.quantity;\r\n          res.ВсегоПлощадьИзделий += row.quantity * row.s;\r\n\r\n          if(builder_props) {\r\n            if(!editor) {\r\n              editor = new $p.EditorInvisible();\r\n            }\r\n            imgs = imgs.then(() => {\r\n              return row.characteristic.draw(attr, editor)\r\n                .then((img) => {\r\n                  res.ПродукцияЭскизы[row.characteristic.ref] = img[snake_ref(row.characteristic.ref)].imgs.l0;\r\n                });\r\n            });\r\n          }\r\n          else {\r\n            if(row.characteristic.svg) {\r\n              res.ПродукцияЭскизы[row.characteristic.ref] = row.characteristic.svg;\r\n            }\r\n          }\r\n        }\r\n        else if(!row.nom.is_procedure && !row.nom.is_service && row.nom.is_accessory) {\r\n          res.Аксессуары.push(this.row_description(row));\r\n        }\r\n        else if(!row.nom.is_procedure && row.nom.is_service && !row.nom.is_accessory) {\r\n          res.Услуги.push(this.row_description(row));\r\n        }\r\n        else if(!row.nom.is_procedure && !row.nom.is_service && !row.nom.is_accessory) {\r\n          res.Материалы.push(this.row_description(row));\r\n        }\r\n      });\r\n      res.ВсегоПлощадьИзделий = res.ВсегоПлощадьИзделий.round(3);\r\n\r\n      return imgs.then(() => {\r\n        editor && editor.unload();\r\n        return (get_imgs.length ? Promise.all(get_imgs) : Promise.resolve([]))\r\n          .then(() => {\r\n            if(typeof QRCode === 'function') {\r\n              const svg = document.createElement('SVG');\r\n              svg.innerHTML = '<g />';\r\n              const qrcode = new QRCode(svg, {\r\n                text: 'http://www.oknosoft.ru/zd/',\r\n                width: 100,\r\n                height: 100,\r\n                colorDark: '#000000',\r\n                colorLight: '#ffffff',\r\n                correctLevel: QRCode.CorrectLevel.H,\r\n                useSVG: true\r\n              });\r\n              res.qrcode = svg.innerHTML;\r\n            }\r\n\r\n            return res;\r\n          });\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  row_description(row) {\r\n\r\n    if(!(row instanceof $p.DocCalc_orderProductionRow) && row.characteristic) {\r\n      this.production.find_rows({characteristic: row.characteristic}, (prow) => {\r\n        row = prow;\r\n        return false;\r\n      });\r\n    }\r\n    const {characteristic, nom, s, quantity, note} = row;\r\n    const res = {\r\n      ref: characteristic.ref,\r\n      НомерСтроки: row.row,\r\n      Количество: quantity,\r\n      Ед: row.unit.name || 'шт',\r\n      Цвет: characteristic.clr.name,\r\n      Размеры: row.len + 'x' + row.width + ', ' + s + 'м²',\r\n      Площадь: s,\r\n      Длина: row.len,\r\n      Ширина: row.width,\r\n      ВсегоПлощадь: s * quantity,\r\n      Примечание: note,\r\n      Комментарий: note,\r\n      СистемаПрофилей: characteristic.sys.name,\r\n      Номенклатура: nom.name_full || nom.name,\r\n      Характеристика: characteristic.name,\r\n      Заполнения: '',\r\n      Фурнитура: '',\r\n      Параметры: [],\r\n      Цена: row.price,\r\n      ЦенаВнутр: row.price_internal,\r\n      СкидкаПроцент: row.discount_percent,\r\n      СкидкаПроцентВнутр: row.discount_percent_internal,\r\n      Скидка: row.discount.round(2),\r\n      Сумма: row.amount.round(2),\r\n      СуммаВнутр: row.amount_internal.round(2)\r\n    };\r\n\r\n    characteristic.glasses.forEach((row) => {\r\n      const {name} = row.nom;\r\n      if(res.Заполнения.indexOf(name) == -1) {\r\n        if(res.Заполнения) {\r\n          res.Заполнения += ', ';\r\n        }\r\n        res.Заполнения += name;\r\n      }\r\n    });\r\n\r\n    characteristic.constructions.forEach((row) => {\r\n      const {name} = row.furn;\r\n      if(name && res.Фурнитура.indexOf(name) == -1) {\r\n        if(res.Фурнитура) {\r\n          res.Фурнитура += ', ';\r\n        }\r\n        res.Фурнитура += name;\r\n      }\r\n    });\r\n\r\n    const params = new Map();\r\n    characteristic.params.forEach((row) => {\r\n      if(row.param.include_to_description) {\r\n        params.set(row.param, row.value);\r\n      }\r\n    });\r\n    for (let [param, value] of params) {\r\n      res.Параметры.push({\r\n        param: param.presentation,\r\n        value: value.presentation || value\r\n      });\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  fill_plan() {\r\n\r\n    this.planning.clear();\r\n\r\n    const {wsql, aes, current_user: {suffix}, msg, utils} = $p;\r\n    const url = (wsql.get_user_param('windowbuilder_planning', 'string') || '/plan/') + `doc.calc_order/${this.ref}`;\r\n\r\n    const post_data = utils._clone(this._obj);\r\n    post_data.characteristics = {};\r\n\r\n    this.load_production()\r\n      .then((prod) => {\r\n        for (const cx of prod) {\r\n          post_data.characteristics[cx.ref] = utils._clone(cx._obj);\r\n        }\r\n      })\r\n      .then(() => {\r\n        const headers = new Headers();\r\n        headers.append('Authorization', 'Basic ' + btoa(unescape(encodeURIComponent(\r\n          wsql.get_user_param('user_name') + ':' + aes.Ctr.decrypt(wsql.get_user_param('user_pwd'))))));\r\n        if(suffix){\r\n          headers.append('suffix', suffix);\r\n        }\r\n        fetch(url, {\r\n          method: 'POST',\r\n          headers: headers,\r\n          body: JSON.stringify(post_data)\r\n        })\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            if (json.rows) {\r\n              this.planning.load(json.rows);\r\n            }\r\n            else{\r\n              console.log(json);\r\n            }\r\n          })\r\n          .catch(err => {\r\n            msg.show_msg({\r\n              type: \"alert-warning\",\r\n              text: err.message,\r\n              title: \"Сервис планирования\"\r\n            });\r\n            $p.record_log(err);\r\n          });\r\n      });\r\n  }\r\n\r\n  get is_read_only() {\r\n    const {obj_delivery_state, posted, _data} = this;\r\n    const {Черновик, Шаблон, Отозван, Отправлен} = $p.enm.obj_delivery_states;\r\n    let ro = false;\r\n    if(obj_delivery_state == Шаблон) {\r\n      ro = !$p.current_user.role_available('ИзменениеТехнологическойНСИ');\r\n    }\r\n    else if(posted || _data._deleted) {\r\n      ro = !$p.current_user.role_available('СогласованиеРасчетовЗаказов');\r\n    }\r\n    else if(obj_delivery_state == Отправлен) {\r\n      ro = !_data._saving_trans && !$p.current_user.role_available('СогласованиеРасчетовЗаказов');\r\n    }\r\n    else if(!obj_delivery_state.empty()) {\r\n      ro = obj_delivery_state != Черновик && obj_delivery_state != Отозван && !$p.current_user.role_available('СогласованиеРасчетовЗаказов');\r\n    }\r\n    return ro;\r\n  }\r\n\r\n  load_production(forse) {\r\n    const prod = [];\r\n    const {cat: {characteristics}, enm: {obj_delivery_states}} = $p;\r\n    this.production.forEach(({characteristic}) => {\r\n      if(!characteristic.empty() && (forse || characteristic.is_new())) {\r\n        prod.push(characteristic.ref);\r\n      }\r\n    });\r\n    return characteristics.adapter.load_array(characteristics, prod, false,\r\n        this.obj_delivery_state == obj_delivery_states.Шаблон && characteristics.adapter.local.templates)\r\n      .then(() => {\r\n        prod.length = 0;\r\n        this.production.forEach(({nom, characteristic}) => {\r\n          if(!characteristic.empty()) {\r\n            if((!nom.is_procedure && !nom.is_accessory) || characteristic.specification.count() || characteristic.constructions.count() || characteristic.coordinates.count()){\r\n              prod.push(characteristic);\r\n            }\r\n          }\r\n        });\r\n        return prod;\r\n      });\r\n  }\r\n\r\n  characteristic_saved(scheme, sattr) {\r\n    const {ox, _dp} = scheme;\r\n    const row = ox.calc_order_row;\r\n\r\n    if(!row || ox.calc_order != this) {\r\n      return;\r\n    }\r\n\r\n\r\n    row._data._loading = true;\r\n    row.nom = ox.owner;\r\n    row.note = _dp.note;\r\n    row.quantity = _dp.quantity || 1;\r\n    row.len = ox.x;\r\n    row.width = ox.y;\r\n    row.s = ox.s;\r\n    row.discount_percent = _dp.discount_percent;\r\n    row.discount_percent_internal = _dp.discount_percent_internal;\r\n    if(row.unit.owner != row.nom) {\r\n      row.unit = row.nom.storage_unit;\r\n    }\r\n    row._data._loading = false;\r\n  }\r\n\r\n  create_product_row({row_spec, elm, len_angl, params, create, grid}) {\r\n\r\n    const row = row_spec instanceof $p.DpBuyers_orderProductionRow && !row_spec.characteristic.empty() && row_spec.characteristic.calc_order === this ?\r\n      row_spec.characteristic.calc_order_row :\r\n      this.production.add({\r\n        qty: 1,\r\n        quantity: 1,\r\n        discount_percent_internal: $p.wsql.get_user_param('discount_percent_internal', 'number')\r\n      });\r\n\r\n    if(grid) {\r\n      this.production.sync_grid(grid);\r\n      grid.selectRowById(row.row);\r\n    }\r\n\r\n    if(!create) {\r\n      return row;\r\n    }\r\n\r\n    const mgr = $p.cat.characteristics;\r\n    let cx;\r\n    function fill_cx(ox) {\r\n      if(ox._deleted){\r\n        return;\r\n      }\r\n      for (let ts in mgr.metadata().tabular_sections) {\r\n        ox[ts].clear();\r\n      }\r\n      ox.leading_elm = 0;\r\n      ox.leading_product = '';\r\n      cx = Promise.resolve(ox);\r\n      return false;\r\n    }\r\n    if(!row.characteristic.empty() && !row.characteristic._deleted){\r\n      fill_cx(row.characteristic);\r\n    }\r\n\r\n    return (cx || mgr.create({\r\n      ref: $p.utils.generate_guid(),\r\n      calc_order: this,\r\n      product: row.row\r\n    }, true))\r\n      .then((ox) => {\r\n        if(row_spec instanceof $p.DpBuyers_orderProductionRow) {\r\n\r\n          if(params) {\r\n\r\n            const used_params = row_spec.inset.used_params();\r\n\r\n            params.find_rows({elm: row_spec.row}, (prow) => {\r\n              if(used_params.includes(prow.param)) {\r\n                ox.params.add(prow, true).inset = row_spec.inset;\r\n              }\r\n            });\r\n          }\r\n\r\n          elm.project = {ox};\r\n          elm.fake_origin = row_spec.inset;\r\n\r\n          ox.owner = row_spec.inset.nom(elm);\r\n          ox.origin = row_spec.inset;\r\n          ox.x = row_spec.len;\r\n          ox.y = row_spec.height;\r\n          ox.z = row_spec.depth;\r\n          ox.s = row_spec.s || row_spec.len * row_spec.height / 1000000;\r\n          ox.clr = row_spec.clr;\r\n          ox.note = row_spec.note;\r\n\r\n        }\r\n\r\n        Object.assign(row._obj, {\r\n          characteristic: ox.ref,\r\n          nom: ox.owner.ref,\r\n          unit: ox.owner.storage_unit.ref,\r\n          len: ox.x,\r\n          width: ox.y,\r\n          s: ox.s,\r\n          qty: (row_spec && row_spec.quantity) || 1,\r\n          quantity: (row_spec && row_spec.quantity) || 1,\r\n          note: ox.note,\r\n        });\r\n\r\n        ox.name = ox.prod_name();\r\n\r\n        return this.is_new() && !$p.wsql.alasql.utils.isNode ? this.save().then(() => row) : row;\r\n      });\r\n\r\n  }\r\n\r\n  process_add_product_list(dp) {\r\n\r\n    let res = Promise.resolve();\r\n    const ax = [];\r\n\r\n    dp.production.forEach((row_dp) => {\r\n      let row_prod;\r\n\r\n      if(row_dp.inset.empty()) {\r\n        row_prod = this.production.add(row_dp);\r\n        row_prod.unit = row_prod.nom.storage_unit;\r\n        if(!row_dp.clr.empty()) {\r\n          $p.cat.characteristics.find_rows({owner: row_dp.nom}, (ox) => {\r\n            if(ox.clr == row_dp.clr) {\r\n              row_prod.characteristic = ox;\r\n              return false;\r\n            }\r\n          });\r\n        }\r\n        res = res.then(() => row_prod);\r\n      }\r\n      else {\r\n        const len_angl = new FakeLenAngl(row_dp);\r\n        const elm = new FakeElm(row_dp);\r\n        res = res\r\n          .then(() => this.create_product_row({row_spec: row_dp, elm, len_angl, params: dp.product_params, create: true}))\r\n          .then((row_prod) => {\r\n            row_dp.inset.calculate_spec({elm, len_angl, ox: row_prod.characteristic});\r\n            row_prod.characteristic.specification.group_by('nom,clr,characteristic,len,width,s,elm,alp1,alp2,origin,dop', 'qty,totqty,totqty1');\r\n            row_dp.characteristic = row_prod.characteristic;\r\n            return row_prod;\r\n          });\r\n      }\r\n\r\n      res = res.then((row_prod) => {\r\n        return Promise.all($p.spec_building.specification_adjustment({\r\n          calc_order_row: row_prod,\r\n          spec: row_prod.characteristic.specification,\r\n          save: true,\r\n        }, true))\r\n          .then((tx) => [].push.apply(ax, tx));\r\n      });\r\n    });\r\n\r\n    return res.then(() => ax);\r\n  }\r\n\r\n  recalc(attr = {}, editor) {\r\n\r\n    const remove = !editor;\r\n    if(remove) {\r\n      editor = new $p.EditorInvisible();\r\n    }\r\n    const project = editor.create_scheme();\r\n    let tmp = Promise.resolve();\r\n\r\n    return this.load_production()\r\n      .then((prod) => {\r\n        this.production.forEach((row) => {\r\n          const {characteristic: cx} = row;\r\n          if(cx.empty() || cx.calc_order !== this) {\r\n            row.value_change('quantity', '', row.quantity);\r\n          }\r\n          else if(cx.coordinates.count()) {\r\n            tmp = tmp.then(() => {\r\n              return project.load(cx, true).then(() => {\r\n                project.save_coordinates({svg: false});\r\n                this.characteristic_saved(project);\r\n              });\r\n            });\r\n          }\r\n          else if(cx.leading_product.calc_order === this) {\r\n            return;\r\n          }\r\n          else {\r\n            if(!cx.origin.empty() && !cx.origin.slave) {\r\n              cx.specification.clear();\r\n              cx.origin.calculate_spec({\r\n                elm: new FakeElm(row),\r\n                len_angl: new FakeLenAngl({len: row.len, inset: cx.origin}),\r\n                ox: cx\r\n              });\r\n              row.value_change('quantity', '', row.quantity);\r\n            }\r\n            else {\r\n              row.value_change('quantity', '', row.quantity);\r\n            }\r\n          }\r\n        });\r\n        return tmp;\r\n      })\r\n      .then(() => {\r\n        project.ox = '';\r\n        if(remove) {\r\n          editor.unload();\r\n        }\r\n        else {\r\n          project.remove();\r\n        }\r\n        return attr.save ? this.save() : this;\r\n      });\r\n\r\n  }\r\n\r\n  draw(attr = {}, editor) {\r\n\r\n    const remove = !editor;\r\n    if(remove) {\r\n      editor = new $p.EditorInvisible();\r\n    }\r\n    const project = editor.create_scheme();\r\n\r\n    attr.res = {number_doc: this.number_doc};\r\n\r\n    let tmp = Promise.resolve();\r\n\r\n    return this.load_production()\r\n      .then((prod) => {\r\n        for(let ox of prod){\r\n          if(ox.coordinates.count()) {\r\n            tmp = tmp.then(() => ox.draw(attr, editor));\r\n          }\r\n        }\r\n        return tmp;\r\n      });\r\n\r\n  }\r\n\r\n  static set_department() {\r\n    const department = $p.wsql.get_user_param('current_department');\r\n    if(department) {\r\n      this.department = department;\r\n    }\r\n    const {current_user, cat} = $p;\r\n    if(current_user && this.department.empty() || this.department.is_new()) {\r\n      current_user.acl_objs && current_user.acl_objs.find_rows({by_default: true, type: cat.divisions.class_name}, (row) => {\r\n        if(this.department != row.acl_obj) {\r\n          this.department = row.acl_obj;\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n  }\r\n\r\n};\r\n\r\n$p.DocCalc_order.FakeElm = FakeElm;\r\n\r\n$p.DocCalc_order.FakeLenAngl = FakeLenAngl;\r\n\r\n$p.DocCalc_orderProductionRow = class DocCalc_orderProductionRow extends $p.DocCalc_orderProductionRow {\r\n\r\n  value_change(field, type, value, no_extra_charge) {\r\n\r\n    let {_obj, _owner, nom, characteristic, unit} = this;\r\n    let recalc;\r\n    const {rounding, _slave_recalc} = _owner._owner;\r\n    const rfield = $p.DocCalc_orderProductionRow.rfields[field];\r\n\r\n    if(rfield) {\r\n\r\n      _obj[field] = rfield === 'n' ? parseFloat(value) : '' + value;\r\n\r\n      nom = this.nom;\r\n      characteristic = this.characteristic;\r\n\r\n      if(!characteristic.empty()) {\r\n        if(!characteristic.calc_order.empty() && characteristic.owner != nom) {\r\n          characteristic.owner = nom;\r\n        }\r\n        else if(characteristic.owner != nom) {\r\n          _obj.characteristic = $p.utils.blank.guid;\r\n          characteristic = this.characteristic;\r\n        }\r\n      }\r\n\r\n      if(unit.owner != nom) {\r\n        _obj.unit = nom.storage_unit.ref;\r\n      }\r\n\r\n      const {origin} = characteristic;\r\n      if(origin && !origin.empty() && origin.slave) {\r\n        characteristic.specification.clear();\r\n        characteristic.x = this.len;\r\n        characteristic.y = this.width;\r\n        characteristic.s = this.s || this.len * this.width / 1000000;\r\n        const len_angl = new FakeLenAngl({len: this.len, inset: origin});\r\n        const elm = new FakeElm(this);\r\n        origin.calculate_spec({elm, len_angl, ox: characteristic});\r\n        recalc = true;\r\n      }\r\n\r\n      const fake_prm = {\r\n        calc_order_row: this,\r\n        spec: characteristic.specification\r\n      };\r\n      const {price} = _obj;\r\n      $p.pricing.price_type(fake_prm);\r\n      if(origin instanceof $p.DocPurchase_order) {\r\n        fake_prm.first_cost = _obj.first_cost;\r\n      }\r\n      else {\r\n        $p.pricing.calc_first_cost(fake_prm);\r\n      }\r\n      $p.pricing.calc_amount(fake_prm);\r\n      if(price && !_obj.price) {\r\n        _obj.price = price;\r\n        recalc = true;\r\n      }\r\n    }\r\n\r\n    if($p.DocCalc_orderProductionRow.pfields.includes(field) || recalc) {\r\n\r\n      if(!recalc) {\r\n        _obj[field] = parseFloat(value);\r\n      }\r\n\r\n      isNaN(_obj.price) && (_obj.price = 0);\r\n      isNaN(_obj.price_internal) && (_obj.price_internal = 0);\r\n      isNaN(_obj.discount_percent) && (_obj.discount_percent = 0);\r\n      isNaN(_obj.discount_percent_internal) && (_obj.discount_percent_internal = 0);\r\n\r\n      _obj.amount = (_obj.price * ((100 - _obj.discount_percent) / 100) * _obj.quantity).round(rounding);\r\n\r\n      if(!no_extra_charge) {\r\n        const prm = {calc_order_row: this};\r\n        let extra_charge = $p.wsql.get_user_param('surcharge_internal', 'number');\r\n\r\n        if(!$p.current_user.partners_uids.length || !extra_charge) {\r\n          $p.pricing.price_type(prm);\r\n          extra_charge = prm.price_type.extra_charge_external;\r\n        }\r\n\r\n        if(field != 'price_internal' && _obj.price) {\r\n          _obj.price_internal = (_obj.price * (100 - _obj.discount_percent) / 100 * (100 + extra_charge) / 100).round(rounding);\r\n        }\r\n      }\r\n\r\n      _obj.amount_internal = (_obj.price_internal * ((100 - _obj.discount_percent_internal) / 100) * _obj.quantity).round(rounding);\r\n\r\n      const doc = _owner._owner;\r\n      if(doc.vat_consider) {\r\n        const {НДС18, НДС18_118, НДС10, НДС10_110, НДС20, НДС20_120, НДС0, БезНДС} = $p.enm.vat_rates;\r\n        _obj.vat_rate = (nom.vat_rate.empty() ? НДС18 : nom.vat_rate).ref;\r\n        switch (this.vat_rate) {\r\n        case НДС18:\r\n        case НДС18_118:\r\n          _obj.vat_amount = (_obj.amount * 18 / 118).round(2);\r\n          break;\r\n        case НДС10:\r\n        case НДС10_110:\r\n          _obj.vat_amount = (_obj.amount * 10 / 110).round(2);\r\n          break;\r\n        case НДС20:\r\n        case НДС20_120:\r\n          _obj.vat_amount = (_obj.amount * 20 / 120).round(2);\r\n          break;\r\n        case НДС0:\r\n        case БезНДС:\r\n        case '_':\r\n        case '':\r\n          _obj.vat_amount = 0;\r\n          break;\r\n        }\r\n        if(!doc.vat_included) {\r\n          _obj.amount = (_obj.amount + _obj.vat_amount).round(2);\r\n        }\r\n      }\r\n      else {\r\n        _obj.vat_rate = '';\r\n        _obj.vat_amount = 0;\r\n      }\r\n\r\n      const amount = _owner.aggregate([], ['amount', 'amount_internal']);\r\n      amount.doc_amount = amount.amount.round(rounding);\r\n      amount.amount_internal = amount.amount_internal.round(rounding);\r\n      delete amount.amount;\r\n      Object.assign(doc, amount);\r\n      doc._manager.emit_async('update', doc, amount);\r\n\r\n      if(!_slave_recalc){\r\n        _owner._owner._slave_recalc = true;\r\n        _owner.forEach((row) => {\r\n          if(row === this) return;\r\n          const {origin} = row.characteristic;\r\n          if(origin && !origin.empty() && origin.slave) {\r\n            row.value_change('quantity', 'update', row.quantity, no_extra_charge);\r\n          }\r\n        });\r\n        _owner._owner._slave_recalc = false;\r\n      }\r\n\r\n\r\n      if(field === 'quantity' && !characteristic.empty() && !characteristic.calc_order.empty()) {\r\n        this._owner.find_rows({ordn: characteristic}, (row) => {\r\n          row.value_change('quantity', type, _obj.quantity, no_extra_charge);\r\n        });\r\n      }\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n};\r\n\r\n$p.DocCalc_orderProductionRow.rfields = {\r\n  nom: 's',\r\n  characteristic: 's',\r\n  quantity: 'n',\r\n  len: 'n',\r\n  width: 'n',\r\n  s: 'n',\r\n};\r\n\r\n$p.DocCalc_orderProductionRow.pfields = 'price,price_internal,quantity,discount_percent_internal';\r\n\r\n\r\n$p.md.once('predefined_elmnts_inited', () => {\r\n  const {DocCalc_order, doc: {calc_order}, cat: {destinations}, cch: {properties}, enm: {obj_delivery_states}, job_prm} = $p;\r\n  const dst = destinations.predefined('Документ_Расчет');\r\n  if(!dst) {\r\n    return;\r\n  }\r\n  const predefined = [\r\n    {\r\n      class_name: 'cch.properties',\r\n      ref: '198ac4ac-8453-11e9-bc71-873e65ad9246',\r\n      name: 'Параметры из системы',\r\n      caption: 'Параметры из системы',\r\n      sorting_field: 1143,\r\n      available: true,\r\n      list: 0,\r\n      destination: dst.ref,\r\n      type: {types: ['boolean']}\r\n    },\r\n    {\r\n      class_name: 'cch.properties',\r\n      ref: '28278e46-8453-11e9-bc71-873e65ad9246',\r\n      name: 'Уточнять систему',\r\n      caption: 'Уточнять систему',\r\n      sorting_field: 1144,\r\n      available: true,\r\n      list: 0,\r\n      destination: dst.ref,\r\n      type: {types: ['boolean']}\r\n    },\r\n    {\r\n      class_name: 'cch.properties',\r\n      ref: '323b3eaa-8453-11e9-bc71-873e65ad9246',\r\n      name: 'Уточнять фурнитуру',\r\n      caption: 'Уточнять фурнитуру',\r\n      sorting_field: 1145,\r\n      available: true,\r\n      list: 0,\r\n      destination: dst.ref,\r\n      type: {types: ['boolean']}\r\n    }\r\n  ];\r\n  properties.load_array(predefined);\r\n\r\n  const templates_props = predefined.map(({ref}) => properties.get(ref));\r\n\r\n  Object.defineProperties(DocCalc_order.prototype, {\r\n    refill_props: {\r\n      get() {\r\n        const row = this.extra_fields.find({property: templates_props[0]});\r\n        return row ? row.value : job_prm.builder.refill_props;\r\n      }\r\n    },\r\n    specify_sys: {\r\n      get() {\r\n        const row = this.extra_fields.find({property: templates_props[1]});\r\n        return row ? row.value : false;\r\n      }\r\n    },\r\n    specify_furn: {\r\n      get() {\r\n        const row = this.extra_fields.find({property: templates_props[2]});\r\n        return row ? row.value : false;\r\n      }\r\n    },\r\n    clear_templates_props: {\r\n      value() {\r\n        this.extra_fields.clear({property: {in: templates_props}});\r\n      }\r\n    }\r\n  });\r\n\r\n  const {extra_fields} = Object.getPrototypeOf(calc_order);\r\n  calc_order.extra_fields = function (obj) {\r\n    const res = extra_fields.call(calc_order, obj);\r\n    return obj.obj_delivery_state === obj_delivery_states.Шаблон ? res.concat(templates_props) : res;\r\n  }\r\n});\r\n\r\n\r\n\r\n(({adapters: {pouch}, classes, cat, doc, job_prm, md, pricing, utils}) => {\r\n\r\n  const _mgr = doc.calc_order;\r\n  const proto_get = _mgr.constructor.prototype.get;\r\n\r\n  function template_get(ref, do_not_create){\r\n    return proto_get.apply(this, arguments)\r\n  }\r\n\r\n  function from_files(start) {\r\n    return start ? pouch.from_files(pouch.local.templates, pouch.remote.templates) : Promise.resolve();\r\n  }\r\n\r\n  function refresh_doc(start) {\r\n    if(pouch.local.templates && pouch.remote.templates) {\r\n      return from_files(start)\r\n        .then((rres) => {\r\n          return pouch.local.templates.replicate.from(pouch.remote.templates,\r\n            {\r\n              batch_size: 300,\r\n              batches_limit: 3,\r\n            })\r\n            .on('change', (info) => {\r\n              info.db = 'templates';\r\n              pouch.emit_async('repl_state', info);\r\n              if(!start && info.ok) {\r\n                for(const {doc} of info.docs) {\r\n                  if(doc.class_name === 'doc.nom_prices_setup') {\r\n                    setTimeout(pricing.by_doc.bind(pricing, doc), 1000);\r\n                  }\r\n                }\r\n              }\r\n            })\r\n            .then((info) => {\r\n              info.db = 'templates';\r\n              pouch.emit_async('repl_state', info);\r\n              return rres;\r\n            })\r\n            .catch((err) => {\r\n              err.result.db = 'templates';\r\n              pouch.emit_async('repl_state', err.result);\r\n              $p.record_log(err);\r\n            });\r\n        });\r\n    }\r\n    else {\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n\r\n  function patch_cachable() {\r\n    const names = [\r\n      'cat.parameters_keys',\r\n      'cat.stores',\r\n      'cat.delivery_directions',\r\n      'cat.cash_flow_articles',\r\n      'cat.nonstandard_attributes',\r\n      'cat.projects',\r\n      'cat.choice_params',\r\n      'cat.nom_prices_types',\r\n      'cat.scheme_settings',\r\n      'doc.nom_prices_setup',\r\n    ];\r\n    for(const name of names) {\r\n      const meta = md.get(name);\r\n      meta.cachable = meta.cachable.replace(/^doc/, 'templates');\r\n    }\r\n  }\r\n\r\n  function direct_templates() {\r\n    if(!pouch.props._suffix || !job_prm.templates) {\r\n      !pouch.local.templates && pouch.local.__define('templates', {\r\n        get() {\r\n          return pouch.remote.doc;\r\n        },\r\n        configurable: true,\r\n        enumerable: false\r\n      });\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  function on_log_in() {\r\n\r\n    if(!pouch.props._suffix || !job_prm.templates) {\r\n      return direct_templates();\r\n    }\r\n    else {\r\n      patch_cachable();\r\n    }\r\n\r\n    const {__opts} = pouch.remote.ram;\r\n    pouch.remote.templates = new classes.PouchDB(__opts.name.replace(/ram$/, 'templates'),\r\n      {skip_setup: true, adapter: 'http', auth: __opts.auth});\r\n\r\n\r\n\r\n    if(pouch.props.direct) {\r\n      !pouch.local.templates && pouch.local.__define('templates', {\r\n        get() {\r\n          return pouch.remote.templates;\r\n        },\r\n        configurable: true,\r\n        enumerable: false\r\n      });\r\n    }\r\n    else {\r\n      pouch.local.templates = new classes.PouchDB('templates', {adapter: 'idb', auto_compaction: true, revs_limit: 3});\r\n      setInterval(refresh_doc, 600000);\r\n      return refresh_doc(true)\r\n        .then((rres) => {\r\n          return typeof rres === 'number' && pouch.rebuild_indexes('templates');\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  function user_log_out() {\r\n    if(pouch.local.templates && !pouch.local.hasOwnProperty('templates')) {\r\n      delete pouch.local.templates;\r\n    }\r\n  }\r\n\r\n  pouch.on({on_log_in, user_log_out});\r\n\r\n  pouch.once('pouch_doc_ram_loaded', direct_templates);\r\n\r\n})($p);\r\n \r\nreturn EditorInvisible;\r\n}"],"sourceRoot":""}