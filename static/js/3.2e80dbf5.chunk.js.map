{"version":3,"sources":["../node_modules/metadata-react/DynList/DynList.js","../node_modules/metadata-react/DynList/DataListToolbar.js","../node_modules/@material-ui/icons/List.js","../node_modules/@material-ui/icons/AccountTree.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","DynList","MDNRComponent","constructor","props","context","super","flatChange","setState","flat","handleFilterChange","handleSchemeChange","scheme","handlers","_mgr","_meta","fields","_mounted","set_default","columns","rx_columns","mode","state","rows","fakeRows","ranges","$p","CatScheme_settings","clear","onRowSelect","rowCount","selectedRow","loadMoreRows","startIndex","stopIndex","LIMIT","_owner","find_rows","ref","scrollSetted","parent","increment","get","nrange","merged","range","Math","max","min","push","j","set","Promise","resolve","then","newState","no_rows","network_error","test","cachable","_direct_loaded","direct_load","selector","get_search_selector","_obj","_fld","search","_search","skip","top","sorting","utils","_find_rows_with_sort","alatable","docs","count","prnt","unshift","toJSON","empty","delete","updateList","grid","selectCell","rowIdx","idx","sprm","limit","mango_selector","_raw","fromIndexer","data","Array","isArray","scroll","flag","catch","err","_timer","setTimeout","undefined","size","rowGetter","row","crange","dist","Infinity","cdist","abs","handleSettingsOpen","settings_open","handleSettingsClose","handleConfirmClose","confirm_text","handleInfoText","info_text","handleSelect","is_folder","handleAdd","event","handleEdit","force","is_empty_guid","handleIfaceState","component","name","value","open","text","title","synonym","handleRemove","handleMarkDeleted","_handleRemove","handlePrint","model","print","handleAttachments","Map","componentDidMount","handleManagerChange","_ref","class_name","metadata","show_flat","hierarchical","ov","cat","scheme_settings","get_scheme","indexer","navigator","onLine","find_rows_remote","remote","doc","_suffix","adapters","pouch","username","password","__opts","auth","append_selection","opts","method","credentials","headers","Authorization","btoa","unescape","encodeURIComponent","suffix","body","JSON","stringify","fetch","res","status","json","Error","statusText","forEach","_id","split","list_presentation","DataListToolbar","fn","render","sizes","Toolbar","RepParams","classes","registerFilterChange","width","height","GridRenderer","rowHeight","others","React","createElement","LoadingMessage","show_grid","toolbar_props","dnr","Helmet","content","property","Confirm","handleOk","handleCancel","SchemeSettingsTabs","tabParams","ReactDataGrid","el","minHeight","minWidth","columnsWidth","cellNavigationMode","rowsCount","onCellDeSelected","onCellSelected","v","onRowDoubleClick","selectionMode","onGridSort","sortColumn","sortDirection","first_sorting","propTypes","PropTypes","object","isRequired","_acl","string","bool","read_only","denyAddDel","show_search","show_variants","modal","defaultProps","contextTypes","withIface","Component","args","anchorEl","handleClick","currentTarget","handleRequestClose","handleSettingsToggle","btns","end_btns","menu_items","toolbar2row","setting_in_menu","widthUpSm","isWidthUp","disableGutters","className","toolbar","Button","variant","spaceLeft","onClick","IconButton","AddIcon","EditIcon","denyDel","RemoveIcon","ListIcon","TreeIcon","standard_period","disabled","DateRange","handleChange","flex","SchemeSettingsButtons","hide_btn","MoreVertIcon","Menu","onClose","MenuItem","ListItemIcon","SettingsIcon","MenuPrint","AttachIcon","SearchBox","compose","withStyles","withWidth","_interopRequireDefault","require","defineProperty","exports","default","_react","_default","d"],"mappings":"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","file":"static/js/3.2e80dbf5.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n *\n *\n * @module DynList\n *\n * Created by Evgeniy Malyarov on 27.03.2019.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MDNRComponent from '../common/MDNRComponent';\nimport { withIface } from 'metadata-redux';\nimport ReactDataGrid from 'react-data-grid';\nimport LoadingMessage from '../DumbLoader/LoadingMessage';\nimport DataListToolbar from './DataListToolbar';\nimport SchemeSettingsTabs from '../SchemeSettings/SchemeSettingsTabs';\nimport Confirm from '../App/Confirm';\nimport { Helmet } from 'react-helmet';\nconst LIMIT = 50;\nconst ROW_HEIGHT = 33; //const OVERSCAN_ROW = 2;\n\nclass DynList extends MDNRComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.flatChange = () => {\n      this.setState(({\n        flat\n      }) => ({\n        flat: !flat\n      }), this.handleFilterChange);\n    };\n\n    this.handleSchemeChange = scheme => {\n      const {\n        props: {\n          handlers,\n          _mgr\n        },\n        _meta: {\n          fields\n        },\n        _mounted\n      } = this;\n\n      if (!_mounted) {\n        return;\n      }\n\n      if (scheme) {\n        scheme.set_default();\n        handlers.handleSchemeChange && handlers.handleSchemeChange(scheme); // пересчитываем и перерисовываем динсписок\n\n        const columns = scheme.rx_columns({\n          mode: 'ts',\n          fields,\n          _mgr\n        });\n        this.handleFilterChange(scheme, columns);\n      }\n    };\n\n    this.handleFilterChange = (scheme, columns) => {\n      const {\n        state,\n        rows,\n        fakeRows,\n        ranges\n      } = this;\n\n      if (!(scheme instanceof $p.CatScheme_settings)) {\n        scheme = state.scheme;\n      }\n\n      if (!columns) {\n        columns = state.columns;\n      }\n\n      rows.clear();\n      fakeRows.clear();\n      ranges.length = 0;\n      this.onRowSelect({\n        scheme,\n        columns,\n        rowCount: 0,\n        selectedRow: null\n      }, () => {\n        this.loadMoreRows({\n          startIndex: 0,\n          stopIndex: LIMIT - 1\n        });\n      });\n    };\n\n    this.loadMoreRows = ({\n      startIndex,\n      stopIndex\n    }) => {\n      const {\n        props: {\n          _mgr,\n          _owner,\n          find_rows\n        },\n        state: {\n          scheme,\n          columns,\n          ref,\n          scrollSetted,\n          flat,\n          parent\n        },\n        rows,\n        fakeRows,\n        ranges\n      } = this;\n\n      if (startIndex < 0) {\n        startIndex = 0;\n      }\n\n      if (stopIndex < startIndex) {\n        stopIndex = startIndex;\n      }\n\n      let increment = stopIndex - startIndex;\n\n      if (!increment && rows.get(startIndex)) {\n        return;\n      }\n\n      const nrange = {\n        startIndex,\n        stopIndex\n      };\n      let merged;\n\n      for (const range of ranges) {\n        // если запрашиваемый диапазон внутри полученного ранее - выходим\n        if (range.stopIndex >= nrange.stopIndex && range.startIndex <= nrange.startIndex) {\n          return;\n        }\n\n        if (range.stopIndex >= nrange.startIndex && range.stopIndex <= nrange.stopIndex) {\n          range.stopIndex = Math.max(range.stopIndex, nrange.stopIndex);\n          merged = true;\n        }\n\n        if (range.startIndex <= nrange.stopIndex && range.startIndex >= nrange.startIndex) {\n          range.startIndex = Math.min(range.startIndex, nrange.startIndex);\n          merged = true;\n        }\n      }\n\n      if (!merged) {\n        ranges.push(nrange);\n      }\n\n      for (let j = startIndex; j < stopIndex; j++) {\n        fakeRows.set(j, {});\n      }\n\n      return Promise.resolve().then(() => {\n        const newState = {\n          no_rows: false,\n          network_error: null\n        };\n\n        if (scrollSetted) {\n          newState.scrollSetted = false;\n          newState.ref = '';\n        }\n\n        this.setState(newState); // в зависимости от типа кеширования...\n\n        if (/ram$/.test(_mgr.cachable) || _mgr._direct_loaded || _mgr.direct_load) {\n          // фильтруем в озу\n          const selector = _mgr.get_search_selector({\n            _obj: _owner ? _owner._obj || _owner.props && _owner.props._obj : null,\n            _meta: _owner ? _owner._meta : {},\n            _fld: _owner && _owner.props._fld,\n            search: scheme._search,\n            skip: startIndex,\n            top: increment + 1,\n            sorting: scheme.sorting,\n            flat,\n            parent\n          });\n\n          if (selector.top < LIMIT / 2) {\n            selector.top = LIMIT / 2;\n          }\n\n          return (_mgr.direct_load && !_mgr._direct_loaded ? _mgr.direct_load() : Promise.resolve()).then(() => $p.utils._find_rows_with_sort.call(_mgr, _mgr.alatable, selector)).then(({\n            docs,\n            count\n          }) => {\n            if (!flat && parent && !startIndex) {\n              let prnt = parent;\n\n              do {\n                docs.unshift(prnt.toJSON());\n                count++;\n                prnt = prnt.parent;\n              } while (!prnt.empty());\n            }\n\n            for (let j = startIndex; j <= stopIndex; j++) {\n              fakeRows.delete(j);\n            }\n\n            this.updateList(docs, startIndex, count);\n\n            if (!startIndex && docs.length) {\n              this.setState({\n                selectedRow: this.rows.get(0)\n              }, () => this.grid.selectCell({\n                rowIdx: 0,\n                idx: 0\n              }));\n            }\n          });\n        } else {\n          // выполняем запрос\n          const sprm = {\n            columns,\n            skip: startIndex,\n            limit: increment + 1,\n            _owner\n          };\n\n          if (sprm.limit < LIMIT / 2) {\n            sprm.limit = LIMIT / 2;\n          }\n\n          const selector = _mgr.mango_selector ? _mgr.mango_selector(scheme, sprm) : scheme.mango_selector(sprm); // если указано начальное значение списка, первый запрос делаем со ссылкой\n\n          if (ref && !scrollSetted) {\n            selector.ref = ref;\n          }\n\n          selector._raw = true;\n          return (find_rows ? find_rows(selector, scheme) : this.fromIndexer(selector)).then(data => {\n            if (!this._mounted) return;\n\n            for (let j = startIndex; j <= stopIndex; j++) {\n              fakeRows.delete(j);\n            }\n\n            if (Array.isArray(data)) {\n              this.updateList(data, startIndex);\n            } else {\n              const {\n                docs,\n                scroll,\n                flag,\n                count\n              } = data;\n              this.updateList(docs, startIndex, count);\n\n              if (ref && !scrollSetted) {\n                const newState = {\n                  scrollSetted: true,\n                  ref: ''\n                };\n                this.setState(newState, () => {\n                  //selectRow\n                  this.grid.selectCell({\n                    rowIdx: scroll,\n                    idx: 0\n                  });\n                });\n              }\n            }\n          }).catch(err => {\n            this.setState({\n              network_error: err\n            });\n\n            if (this._mounted) {\n              this._timer = setTimeout(this.handleFilterChange, 2600);\n            }\n          });\n        }\n      });\n    };\n\n    this.updateList = (data, startIndex, rowCount) => {\n      const {\n        rows\n      } = this; // обновляем массив результата\n\n      for (let i = 0; i < data.length; i++) {\n        // Append one because first row is header.\n        rows.set(i + startIndex, data[i]);\n      } // Обновить количество записей.\n\n\n      if (this._mounted) {\n        if (rowCount === undefined) {\n          rowCount = rows.size;\n        }\n\n        const newState = {\n          no_rows: !rowCount,\n          rowCount\n        };\n        this.setState(newState);\n      }\n    };\n\n    this.rowGetter = i => {\n      if (i < 0) {\n        return undefined;\n      }\n\n      const {\n        rows\n      } = this;\n      const row = rows.get(i);\n\n      if (!row) {\n        const {\n          fakeRows,\n          ranges,\n          state: {\n            rowCount\n          }\n        } = this; // todo: если i > диапазона, читаем вперёд, иначе - назад\n\n        if (!fakeRows.get(i)) {\n          if (rowCount && i > rowCount - LIMIT / 2) {\n            this.loadMoreRows({\n              startIndex: rowCount - LIMIT,\n              stopIndex: rowCount + 1\n            });\n          } else {\n            // ищем ближайший диапазон\n            let dist = Infinity;\n            let crange;\n\n            for (const range of ranges) {\n              const cdist = Math.min(Math.abs(range.startIndex - i), Math.abs(range.stopIndex - i));\n\n              if (cdist < dist) {\n                crange = range;\n                dist = cdist;\n              }\n            } // определяем направление\n\n\n            if (crange && i <= crange.startIndex) {\n              let lim = crange.startIndex - i;\n\n              if (lim < LIMIT) {\n                this.loadMoreRows({\n                  startIndex: crange.startIndex - LIMIT,\n                  stopIndex: crange.startIndex\n                });\n              } else {\n                this.loadMoreRows({\n                  startIndex: i - LIMIT / 2,\n                  stopIndex: i + LIMIT / 2 + 1\n                });\n              }\n            } else if (crange && i >= crange.stopIndex) {\n              let lim = i - crange.stopIndex;\n\n              if (lim < LIMIT) {\n                this.loadMoreRows({\n                  startIndex: crange.stopIndex,\n                  stopIndex: crange.stopIndex + LIMIT\n                });\n              } else {\n                this.loadMoreRows({\n                  startIndex: i - LIMIT / 2,\n                  stopIndex: i + LIMIT / 2\n                });\n              }\n            } else {\n              this.loadMoreRows({\n                startIndex: i,\n                stopIndex: i + LIMIT\n              });\n            }\n          }\n        }\n\n        return fakeRows.get(i);\n      }\n\n      return row;\n    };\n\n    this.handleSettingsOpen = () => {\n      this.setState({\n        settings_open: true\n      });\n    };\n\n    this.handleSettingsClose = () => {\n      this.setState({\n        settings_open: false\n      });\n    };\n\n    this.handleConfirmClose = () => {\n      this.setState({\n        confirm_text: ''\n      });\n    };\n\n    this.handleInfoText = info_text => {\n      if (typeof info_text !== 'string') {\n        info_text = '';\n      }\n\n      this.setState({\n        info_text\n      });\n    };\n\n    this.handleSelect = () => {\n      const {\n        selectedRow: row,\n        props: {\n          handlers,\n          _mgr\n        },\n        state: {\n          flat,\n          parent\n        },\n        _mounted\n      } = this;\n\n      if (!_mounted) {\n        return;\n      }\n\n      if (row) {\n        if (!flat && parent && row.is_folder) {\n          this.setState({\n            parent: row.ref == parent ? parent.parent : _mgr.get(row.ref)\n          }, () => this.handleFilterChange());\n        } else if (handlers.handleSelect) {\n          handlers.handleSelect(row, _mgr);\n        }\n      } else {\n        this.handleInfoText('Не выбрана строка');\n      }\n    };\n\n    this.handleAdd = event => {\n      const {\n        handlers,\n        _mgr\n      } = this.props;\n      handlers.handleAdd && handlers.handleAdd(_mgr, event);\n    };\n\n    this.handleEdit = force => () => {\n      const {\n        _meta,\n        selectedRow: row,\n        props: {\n          handlers,\n          _mgr\n        },\n        state: {\n          flat,\n          parent\n        }\n      } = this;\n\n      if (!row || $p.utils.is_empty_guid(row.ref)) {\n        return handlers.handleIfaceState({\n          component: '',\n          name: 'alert',\n          value: {\n            open: true,\n            text: 'Укажите строку для редактирования',\n            title: _meta.synonym\n          }\n        });\n      }\n\n      if (!force && !flat && parent && row.is_folder) {\n        this.setState({\n          parent: row.ref == parent ? parent.parent : _mgr.get(row.ref)\n        }, () => this.handleFilterChange());\n      } else if (handlers.handleEdit) {\n        handlers.handleEdit({\n          row,\n          ref: row.ref,\n          _mgr\n        });\n      }\n    };\n\n    this.handleRemove = () => {\n      const {\n        _meta,\n        selectedRow: row,\n        props: {\n          handlers,\n          _mgr\n        }\n      } = this;\n\n      if (!row || $p.utils.is_empty_guid(row.ref)) {\n        handlers.handleIfaceState({\n          component: '',\n          name: 'alert',\n          value: {\n            open: true,\n            text: 'Укажите строку для удаления',\n            title: _meta.synonym\n          }\n        });\n      } else if (handlers.handleMarkDeleted) {\n        this._handleRemove = () => {\n          this.setState({\n            confirm_text: ''\n          }, () => {\n            Promise.resolve().then(() => handlers.handleMarkDeleted({\n              row,\n              ref: row.ref,\n              _mgr\n            })).then(this.handleFilterChange).catch(err => this.setState({\n              network_error: err\n            }));\n          });\n        };\n\n        this.setState({\n          confirm_text: 'Удалить объект?'\n        });\n      }\n    };\n\n    this.handlePrint = model => {\n      const {\n        selectedRow: row,\n        props: {\n          _mgr\n        }\n      } = this;\n      row && _mgr.print(row.ref, model);\n    };\n\n    this.handleAttachments = () => {\n      const {\n        selectedRow: row,\n        props: {\n          handlers,\n          _mgr\n        }\n      } = this;\n      row && handlers.handleAttachments && handlers.handleAttachments(row, _mgr);\n    };\n\n    this.state = {\n      selectedRow: null,\n      scrollSetted: false,\n      rowCount: 0,\n      settings_open: false,\n      network_error: '',\n      no_rows: false,\n      ref: '',\n      scheme: null,\n      columns: []\n    };\n    /** Set of grid rows. */\n\n    this.rows = new Map();\n    this.fakeRows = new Map();\n    this.ranges = [];\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.handleManagerChange(this.props);\n  }\n\n  // при изменении менеджера данных\n  handleManagerChange({\n    _mgr,\n    _meta,\n    _ref\n  }) {\n    const {\n      class_name\n    } = _mgr;\n    const {\n      flat,\n      parent,\n      _owner\n    } = this.props;\n    this._meta = _meta || _mgr.metadata();\n    this.show_flat = this._meta.hierarchical;\n    const newState = {\n      ref: _ref || '',\n      scrollSetted: false,\n      flat: flat || !this.show_flat,\n      parent: parent || _mgr.get()\n    };\n\n    if (!newState.flat && _owner && _owner.props) {\n      const ov = (_owner._obj || _owner.props && _owner.props._obj)[_owner.props._fld];\n\n      if (ov && !ov.empty()) {\n        newState.parent = ov.parent;\n      }\n    }\n\n    this.setState(newState);\n    $p.cat.scheme_settings.get_scheme(class_name).then(this.handleSchemeChange);\n  } // при изменении настроек или варианта компоновки\n\n\n  // получает набор банных из индексера либо спрашивает у менеджера, если оффлайн\n  fromIndexer(selector) {\n    const {\n      props: {\n        _mgr,\n        indexer\n      },\n      state: {\n        scheme\n      }\n    } = this;\n\n    if (!navigator.onLine || !scheme || !indexer) {\n      return _mgr.find_rows_remote(selector);\n    }\n\n    const {\n      remote: {\n        doc\n      },\n      props: {\n        _suffix\n      }\n    } = $p.adapters.pouch;\n    const {\n      username,\n      password\n    } = doc.__opts.auth;\n    scheme.append_selection(selector);\n    const opts = {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        Authorization: `Basic ${btoa(unescape(encodeURIComponent(username + ':' + password)))}`,\n        suffix: _suffix || '0'\n      },\n      body: JSON.stringify(selector)\n    };\n    return fetch('/r/_find', opts).then(res => {\n      if (res.status <= 201) {\n        return res.json();\n      } else {\n        return res.text().then(text => {\n          throw new Error(`${res.statusText}: ${text}`);\n        });\n      }\n    }).then(data => {\n      data.docs.forEach(doc => {\n        if (!doc.ref) {\n          doc.ref = doc._id.split('|')[1];\n          delete doc._id;\n        }\n      });\n      return data;\n    });\n  } // получает строку по индексу\n\n\n  // возвращает текущую строку динсписка\n  get selectedRow() {\n    const {\n      state: {\n        selectedRow\n      },\n      rows\n    } = this;\n    return typeof selectedRow === 'number' ? rows.get(selectedRow) : selectedRow;\n  } // обработчик выбора значения в списке\n\n\n  get ltitle() {\n    const {\n      _mgr\n    } = this.props;\n    return `${_mgr.metadata().list_presentation || _mgr.metadata().synonym} (список)`;\n  }\n\n  get Toolbar() {\n    return DataListToolbar;\n  }\n\n  onRowSelect(newState, fn) {\n    this.setState(newState, fn);\n    this.props.onRowSelect && this.props.onRowSelect(newState);\n  }\n\n  render() {\n    const {\n      state,\n      props,\n      context,\n      sizes,\n      handleFilterChange,\n      handleSchemeChange,\n      Toolbar,\n      show_flat\n    } = this;\n    const {\n      columns,\n      scheme,\n      confirm_text,\n      info_text,\n      settings_open,\n      rowCount,\n      flat\n    } = state;\n    const {\n      _mgr: {\n        RepParams\n      },\n      classes,\n      title,\n      registerFilterChange,\n      width,\n      height,\n      GridRenderer,\n      rowHeight,\n      ...others\n    } = props;\n\n    if (!scheme) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Чтение настроек компоновки...\"\n      });\n    } else if (!columns || !columns.length) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Ошибка настроек компоновки...\"\n      });\n    }\n\n    registerFilterChange && registerFilterChange(handleFilterChange);\n    const show_grid = !settings_open || sizes.height > 572;\n    const toolbar_props = {\n      scheme,\n      ...others,\n      settings_open,\n      flat,\n      show_flat,\n      flatChange: this.flatChange,\n      handleSelect: this.handleSelect,\n      handleAdd: this.handleAdd,\n      handleEdit: this.handleEdit(true),\n      handleRemove: this.handleRemove,\n      handlePrint: this.handlePrint,\n      //handleAttachments: this.handleAttachments,\n      handleSettingsOpen: this.handleSettingsOpen,\n      handleSettingsClose: this.handleSettingsClose,\n      handleSchemeChange,\n      handleFilterChange\n    };\n    return /*#__PURE__*/React.createElement(\"div\", null, !context.dnr && /*#__PURE__*/React.createElement(Helmet, {\n      key: \"helmet\",\n      title: title\n    }, /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Форма списка\"\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      property: \"og:title\",\n      content: title\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      property: \"og:description\",\n      content: \"Форма списка\"\n    })), // диалог предупреждений при удалении\n    confirm_text && /*#__PURE__*/React.createElement(Confirm, {\n      key: \"confirm\",\n      title: this._meta.synonym,\n      text: confirm_text,\n      handleOk: this._handleRemove,\n      handleCancel: this.handleConfirmClose,\n      open: true\n    }), // диалог информации\n    info_text && /*#__PURE__*/React.createElement(Confirm, {\n      key: \"info\",\n      title: this._meta.synonym,\n      text: info_text,\n      handleOk: this.handleInfoText,\n      handleCancel: this.handleInfoText,\n      open: true\n    }), /*#__PURE__*/React.createElement(Toolbar, _extends({\n      key: \"toolbar\"\n    }, toolbar_props)), // панель настроек компоновки\n    settings_open && /*#__PURE__*/React.createElement(SchemeSettingsTabs, {\n      key: \"settings\",\n      height: show_grid ? 272 : (sizes.height || 500) - 104,\n      scheme: scheme,\n      tabParams: RepParams && /*#__PURE__*/React.createElement(RepParams, {\n        scheme: scheme,\n        handleFilterChange: handleFilterChange\n      }),\n      handleSchemeChange: handleSchemeChange\n    }), /*#__PURE__*/React.createElement(ReactDataGrid, {\n      key: \"grid\",\n      ref: el => this.grid = el,\n      rowHeight: rowHeight || ROW_HEIGHT,\n      minHeight: sizes.height - 50 - (settings_open ? 320 : 0),\n      minWidth: context.dnr && Math.max(sizes.width, sizes.columnsWidth),\n      cellNavigationMode: \"changeRow\",\n      columns: columns,\n      rowGetter: this.rowGetter,\n      rowsCount: rowCount,\n      onCellDeSelected: () => this.onRowSelect({\n        selectedRow: null\n      }),\n      onCellSelected: v => this.onRowSelect({\n        selectedRow: this.rows.get(v.rowIdx) || v.rowIdx\n      }),\n      onRowDoubleClick: props.selectionMode ? this.handleSelect : this.handleEdit(),\n      onGridSort: (sortColumn, sortDirection) => {\n        scheme.first_sorting(sortColumn, sortDirection);\n        this.handleFilterChange();\n      }\n    }));\n  }\n\n}\n\nDynList.propTypes = {\n  // данные\n  _mgr: PropTypes.object.isRequired,\n  // Менеджер данных\n  _acl: PropTypes.string,\n  // Права на чтение-изменение\n  _meta: PropTypes.object,\n  // Описание метаданных. Если не указано, используем метаданные менеджера\n  _ref: PropTypes.string,\n  // Ссылка, на которую надо спозиционироваться\n  _owner: PropTypes.object,\n  // Поле - владелец. У него должны быть _obj, _fld и _meta\n  // а внутри _meta могут быть choice_params и choice_links\n  // настройки внешнего вида и поведения\n  selectionMode: PropTypes.bool,\n  // Режим выбора из списка. Если истина - дополнительно рисуем кнопку выбора\n  read_only: PropTypes.bool,\n  // Элемент только для чтения\n  denyAddDel: PropTypes.bool,\n  // Запрет добавления и удаления строк (скрывает кнопки в панели, отключает обработчики)\n  show_search: PropTypes.bool,\n  // Показывать поле поиска\n  show_variants: PropTypes.bool,\n  // Показывать список вариантов настройки динсписка\n  modal: PropTypes.bool,\n  // Показывать список в модальном диалоге\n  // Redux actions\n  handlers: PropTypes.object.isRequired // обработчики редактирования объекта\n\n};\nDynList.defaultProps = {\n  denyAddDel: false,\n  read_only: false,\n  minHeight: 220\n};\nDynList.contextTypes = {\n  dnr: PropTypes.object\n};\nexport default withIface(DynList);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveIcon from '@material-ui/icons/DeleteOutline';\nimport EditIcon from '@material-ui/icons/Edit';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AttachIcon from '@material-ui/icons/AttachFile';\nimport SelectIcon from '@material-ui/icons/PlaylistAddCheck';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport TreeIcon from '@material-ui/icons/AccountTree';\nimport ListIcon from '@material-ui/icons/List';\nimport SchemeSettingsButtons from '../SchemeSettings/SchemeSettingsButtons';\nimport SearchBox from '../SchemeSettings/SearchBox';\nimport DateRange from '../SchemeSettings/DateRange';\nimport { compose } from 'redux';\nimport classnames from 'classnames';\nimport withStyles from '../Header/toolbar';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport MenuPrint from './MenuPrint';\n\nclass DataListToolbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: undefined,\n      open: false\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        open: true,\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleRequestClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleSettingsToggle = () => {\n      const {\n        props\n      } = this;\n\n      if (props.settings_open) {\n        props.handleSettingsClose();\n      } else {\n        props.handleSettingsOpen();\n      }\n\n      this.handleRequestClose();\n    };\n  }\n\n  render() {\n    const {\n      props,\n      state\n    } = this;\n    const {\n      classes,\n      scheme,\n      width,\n      btns,\n      end_btns,\n      menu_items,\n      toolbar2row,\n      flat,\n      show_flat,\n      setting_in_menu\n    } = props;\n    const widthUpSm = isWidthUp('sm', width);\n    return [/*#__PURE__*/React.createElement(Toolbar, {\n      key: \"toolbar1\",\n      disableGutters: true,\n      className: classes.toolbar\n    }, props.selectionMode && /*#__PURE__*/React.createElement(Button, {\n      key: \"select\",\n      title: \"Выбрать из списка\",\n      size: \"small\",\n      variant: \"outlined\",\n      className: classes.spaceLeft,\n      onClick: props.handleSelect\n    }, \"Выбрать\"), !props.denyAddDel && /*#__PURE__*/React.createElement(IconButton, {\n      key: \"create\",\n      title: \"Создать объект\",\n      onClick: props.handleAdd\n    }, /*#__PURE__*/React.createElement(AddIcon, null)), /*#__PURE__*/React.createElement(IconButton, {\n      key: \"edit\",\n      title: \"Открыть форму объекта\",\n      onClick: props.handleEdit\n    }, /*#__PURE__*/React.createElement(EditIcon, null)), !props.denyAddDel && !props.denyDel && /*#__PURE__*/React.createElement(IconButton, {\n      key: \"del\",\n      title: \"Пометить на удаление\",\n      onClick: props.handleRemove\n    }, /*#__PURE__*/React.createElement(RemoveIcon, null)), show_flat && /*#__PURE__*/React.createElement(IconButton, {\n      key: \"flat\",\n      title: flat ? 'Включить иерархию' : 'Включить плоский список',\n      onClick: props.flatChange\n    }, flat ? /*#__PURE__*/React.createElement(ListIcon, null) : /*#__PURE__*/React.createElement(TreeIcon, null)), !scheme.standard_period.empty() && widthUpSm && /*#__PURE__*/React.createElement(IconButton, {\n      disabled: true\n    }, \"|\"), !scheme.standard_period.empty() && widthUpSm && /*#__PURE__*/React.createElement(DateRange, {\n      _obj: scheme,\n      _fld: 'date',\n      _meta: {\n        synonym: 'Период'\n      },\n      classes: classes,\n      handleChange: props.handleFilterChange\n    }), (!toolbar2row || widthUpSm) && btns\n    /* дополнительные кнопки */\n    , /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.flex\n    }), /*#__PURE__*/React.createElement(SchemeSettingsButtons, {\n      handleSettingsOpen: props.handleSettingsOpen,\n      handleSettingsClose: props.handleSettingsClose,\n      handleSchemeChange: props.handleSchemeChange,\n      handleFilterChange: props.handleFilterChange,\n      settings_open: props.settings_open,\n      classes: classes,\n      scheme: scheme,\n      show_search: props.show_search && (!toolbar2row || widthUpSm),\n      show_variants: props.show_variants,\n      hide_btn: !widthUpSm || setting_in_menu\n    }), (!toolbar2row || widthUpSm) && end_btns\n    /* дополнительные кнопки */\n    , /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleClick,\n      title: \"Дополнительно\"\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, null)), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: state.anchorEl,\n      open: state.open,\n      onClose: this.handleRequestClose\n    }, (!widthUpSm || setting_in_menu) && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleSettingsToggle\n    }, /*#__PURE__*/React.createElement(ListItemIcon, null, /*#__PURE__*/React.createElement(SettingsIcon, null)), \"Настройки\"), props.handlePrint && /*#__PURE__*/React.createElement(MenuPrint, {\n      scheme: scheme,\n      handlePrint: props.handlePrint\n    }), props.handleAttachments && /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: props.handleAttachments\n    }, /*#__PURE__*/React.createElement(ListItemIcon, null, /*#__PURE__*/React.createElement(AttachIcon, null)), \"Вложения\"), menu_items\n    /* дополнительные пункты меню */\n    )), toolbar2row && !widthUpSm && /*#__PURE__*/React.createElement(Toolbar, {\n      key: \"toolbar2\",\n      disableGutters: true,\n      className: classes.toolbar\n    }, btns\n    /* дополнительные кнопки */\n    , /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.flex\n    }), end_btns\n    /* дополнительные кнопки */\n    , /*#__PURE__*/React.createElement(SearchBox, {\n      scheme: scheme,\n      handleFilterChange: props.handleFilterChange,\n      isWidthUp: widthUpSm\n    }))];\n  }\n\n}\n\nDataListToolbar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  selectionMode: PropTypes.bool,\n  // режим выбора из списка. Если истина - дополнительно рисум кнопку выбора\n  denyAddDel: PropTypes.bool,\n  // Запрет добавления и удаления строк (скрывает кнопки в панели, отключает обработчики)\n  handleSchemeChange: PropTypes.func.isRequired,\n  // обработчик при изменении настроек компоновки\n  scheme: PropTypes.object.isRequired,\n  // значение настроек компоновки\n  handleAdd: PropTypes.func,\n  // обработчик добавления объекта\n  handleEdit: PropTypes.func,\n  // обработчик открфтия формы редактора\n  handleRemove: PropTypes.func,\n  // обработчик удаления строки\n  handlePrint: PropTypes.func,\n  // обработчик открытия диалога печати\n  handleAttachments: PropTypes.func // обработчик открытия диалога присоединенных файлов\n\n} : {};\nDataListToolbar.defaultProps = {\n  show_search: true\n};\nexport default compose(withStyles, withWidth())(DataListToolbar);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z\"\n}), 'List');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');\n\nexports.default = _default;"],"sourceRoot":""}