{"version":3,"sources":["../node_modules/metadata-react/Markdown/styles.js","../node_modules/metadata-react/Markdown/MarkdownElementLight.js","../node_modules/metadata-react/Markdown/parseMarkdown.js","../node_modules/metadata-react/Markdown/MarkdownDocsLight.js","../node_modules/marked/src/defaults.js","../node_modules/marked/src/helpers.js","../node_modules/marked/src/Tokenizer.js","../node_modules/marked/src/Renderer.js","../node_modules/marked/src/TextRenderer.js","../node_modules/marked/src/Slugger.js","../node_modules/marked/src/marked.js","../node_modules/marked/src/Lexer.js","../node_modules/marked/src/rules.js","../node_modules/marked/src/Parser.js"],"names":["anchorLinkStyle","theme","size","opacity","display","padding","spacing","color","palette","text","hint","secondary","width","fill","withStyles","root","fontFamily","typography","marginTop","marginBottom","primary","position","margin","backgroundColor","background","paper","borderRadius","overflow","lineHeight","fontSize","display2","display1","headline","title","maxWidth","overflowX","borderCollapse","borderSpacing","fontWeight","fontWeightMedium","borderBottom","lightDivider","textAlign","paddingRight","whiteSpace","borderLeft","A400","textDecoration","flip","name","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","MarkdownElement","props","classes","className","mdtitle","handleNavigate","handleIfaceState","disconnect","CustomBtn","other","React","createElement","classNames","onClick","evt","tagName","url","URL","href","origin","location","preventDefault","stopPropagation","pathname","dangerouslySetInnerHTML","__html","marked","propTypes","withIface","headerRegExp","titleRegExp","emptyRegExp","MarkdownDocs","markdown","subtitle","htitle","h1","img","descr","canonical","footer","TopButton","contents","replace","split","filter","content","test","getContents","ltitle","matches","match","getTitle","component","value","AppContent","Helmet","rel","property","header","Typography","variant","map","getDefaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","xhtml","module","exports","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape","html","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","resolveUrl","base","rtrim","relativeBase","indexOf","str","c","invert","l","suffLen","currChar","substr","escape","encode","edit","regex","opt","obj","val","getRegex","RegExp","cleanUrl","prot","decodeURIComponent","e","encodeURI","noopTest","exec","merge","splitCells","tableRow","count","cells","offset","escaped","curr","splice","push","trim","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","require","outputLink","cap","link","raw","type","constructor","options","space","src","rules","block","newline","code","tokens","lastToken","pop","trimRight","codeBlockStyle","fences","lang","heading","depth","nptable","item","align","hr","blockquote","list","bull","isordered","ordered","start","loose","items","itemMatch","addBack","istask","ischecked","next","bullet","slice","join","undefined","task","checked","pre","def","tag","table","lheading","paragraph","inline","inLink","inRawBlock","lastParenIndex","linkLen","_escapes","reflink","links","nolink","strong","em","codespan","br","del","autolink","prevCapZero","_backpedal","inlineText","infostring","out","quote","slugger","slug","body","listitem","checkbox","tablerow","tablecell","flags","image","seen","originalSlug","Lexer","Parser","Tokenizer","Renderer","TextRenderer","Slugger","callback","Error","toString","pending","lex","done","err","parse","token","message","setOptions","use","extension","opts","prop","prevRenderer","args","ret","prevTokenizer","parser","lexer","charCodeAt","Math","random","create","normal","blockTokens","top","errMsg","error","j","k","l2","row","inlineTokens","_paragraph","_label","_title","_tag","_comment","_punctuation","_scheme","_email","_attribute","_href","_extended_email","textRenderer","l3","cell","itemBody","parseInline","unshift"],"mappings":"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","file":"static/js/11.78344176.chunk.js","sourcesContent":["import { withStyles } from '@material-ui/styles';\n\nconst anchorLinkStyle = (theme, size) => ({\n  '& .anchor-link-style': {\n    opacity: 0,\n    // To prevent the link to get the focus.\n    display: 'none'\n  },\n  '&:hover .anchor-link-style': {\n    display: 'inline-block',\n    opacity: 1,\n    padding: theme.spacing(),\n    color: theme.palette.text.hint,\n    '&:hover': {\n      color: theme.palette.text.secondary\n    },\n    '& svg': {\n      width: size,\n      fill: 'currentColor'\n    }\n  }\n});\n\nconst styles = theme => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    padding: `0 ${theme.spacing()}px`,\n    color: theme.palette.text.primary,\n    '& .anchor-link': {\n      marginTop: -theme.spacing(12),\n      // Offset for the anchor.\n      position: 'absolute'\n    },\n    '& pre': {\n      margin: `${theme.spacing(3)}px 0`,\n      padding: '12px 18px',\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: 3,\n      overflow: 'auto'\n    },\n    '& code': {\n      display: 'inline-block',\n      lineHeight: 1.6,\n      fontFamily: 'Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n      padding: '3px 6px',\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.background.paper,\n      fontSize: 14\n    },\n    '& p code, & ul code, & pre code': {\n      fontSize: 14,\n      lineHeight: 1.6\n    },\n    '& h1 code, & h2 code, & h3 code, & h4 code': {\n      fontSize: 'inherit',\n      lineHeight: 'inherit'\n    },\n    '& h1': { ...theme.typography.display2,\n      fontSize: '2.2rem',\n      color: theme.palette.text.secondary,\n      margin: '0 0 0.7em 0',\n      ...anchorLinkStyle(theme, 20)\n    },\n    '& h2': { ...theme.typography.display1,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em',\n      ...anchorLinkStyle(theme, 18)\n    },\n    '& h3': { ...theme.typography.headline,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em',\n      ...anchorLinkStyle(theme, 16)\n    },\n    '& h4': { ...theme.typography.title,\n      color: theme.palette.text.secondary,\n      margin: '1em 0 0.7em',\n      ...anchorLinkStyle(theme, 14)\n    },\n    '& p, & ul, & ol': {\n      lineHeight: 1.6\n    },\n    '& img': {\n      maxWidth: '100%'\n    },\n    '& table': {\n      width: '100%',\n      display: 'block',\n      overflowX: 'auto',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      overflow: 'hidden'\n    },\n    '& thead': {\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary\n    },\n    '& tbody': {\n      lineHeight: 1.5,\n      color: theme.palette.text.primary\n    },\n    '& td': {\n      borderBottom: `1px solid ${theme.palette.text.lightDivider}`,\n      padding: `${theme.spacing()}px ${theme.spacing(5)}px ${theme.spacing()}px ${theme.spacing(3)}px`,\n      textAlign: 'left'\n    },\n    '& td:last-child': {\n      paddingRight: theme.spacing(3)\n    },\n    '& td compact': {\n      paddingRight: theme.spacing(3)\n    },\n    '& td code': {\n      lineHeight: 1.6\n    },\n    '& th': {\n      whiteSpace: 'pre',\n      borderBottom: `1px solid ${theme.palette.text.lightDivider}`,\n      padding: `0 ${theme.spacing(5)}px 0 ${theme.spacing(3)}px`,\n      textAlign: 'left'\n    },\n    '& th:last-child': {\n      paddingRight: theme.spacing(3)\n    },\n    '& strong': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& blockquote': {\n      borderLeft: `5px solid ${theme.palette.text.hint}`,\n      background: theme.palette.background.paper,\n      padding: `${theme.spacing() / 2}px ${theme.spacing(3)}px`,\n      margin: `${theme.spacing(3)}px 0`\n    },\n    '& a, & a code': {\n      // Style taken from the Link component\n      color: theme.palette.secondary.A400,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    }\n  }\n});\n\nexport default withStyles(styles, {\n  flip: false,\n  name: 'Markdown'\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\nimport classNames from 'classnames';\nimport withStyles from './styles';\nimport { withIface } from 'metadata-redux';\n\nfunction MarkdownElement(props) {\n  const {\n    classes,\n    className,\n    text,\n    mdtitle,\n    title,\n    handleNavigate,\n    handleIfaceState,\n    disconnect,\n    CustomBtn,\n    ...other\n  } = props;\n\n  function anchorCkick(evt) {\n    if (evt.target.tagName === 'A') {\n      const url = new URL(evt.target.href);\n\n      if (url.origin === location.origin) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        handleNavigate(url.pathname);\n      } else if (!evt.target.target) {\n        evt.target.target = '_blank';\n      }\n    }\n  }\n  /* eslint-disable react/no-danger */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classNames(classes.root, 'markdown-body', className),\n    onClick: anchorCkick,\n    title: mdtitle || title,\n    dangerouslySetInnerHTML: {\n      __html: marked(text)\n    }\n  }, other));\n  /* eslint-enable */\n}\n\nMarkdownElement.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  handleNavigate: PropTypes.func.isRequired\n} : {};\nexport default withStyles(withIface(MarkdownElement));","const headerRegExp = /---\\n([\\s\\S]*)\\n---/;\nconst titleRegExp = /# (.*)\\n/;\nconst headerKeyValueRegExp = /(.*): (.*)/g;\nconst emptyRegExp = /^\\s*$/;\nexport function getHeaders(markdown) {\n  let header = markdown.match(headerRegExp);\n\n  if (!header) {\n    return {\n      components: []\n    };\n  }\n\n  header = header[1];\n  let regexMatchs;\n  const headers = {}; // eslint-disable-next-line no-cond-assign\n\n  while ((regexMatchs = headerKeyValueRegExp.exec(header)) !== null) {\n    headers[regexMatchs[1]] = regexMatchs[2];\n  }\n\n  if (headers.components) {\n    headers.components = headers.components.split(', ').sort();\n  } else {\n    headers.components = [];\n  }\n\n  return headers;\n}\nexport function getContents(markdown) {\n  return (markdown || '').replace(headerRegExp, '') // Remove header information\n  .split(/^{{|}}$/gm) // Split markdown into an array, separating demos\n  .filter(content => !emptyRegExp.test(content)); // Remove empty lines\n}\nexport function getTitle(markdown) {\n  const matches = markdown.match(titleRegExp);\n  return matches ? matches[1] : 'Metadata.js';\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { withStyles } from '@material-ui/styles';\nimport { withIface } from 'metadata-redux';\nimport Typography from '@material-ui/core/Typography';\nimport AppContent from '../App/AppContent';\nimport MarkdownElement from './MarkdownElementLight';\nimport { getContents, getTitle } from './parseMarkdown';\nconst styles = {\n  root: {\n    marginBottom: 100\n  },\n  header: {\n    display: 'flex'\n  },\n  width: {\n    width: '100%'\n  }\n};\n\nfunction MarkdownDocs(props) {\n  const {\n    classes,\n    markdown,\n    subtitle,\n    title,\n    htitle,\n    h1,\n    img,\n    descr,\n    canonical,\n    footer,\n    handleIfaceState,\n    TopButton\n  } = props;\n  const contents = getContents(markdown);\n  const ltitle = htitle || `${getTitle(markdown)}${subtitle ? ' - ' + subtitle : ''}`;\n\n  if (title != ltitle) {\n    handleIfaceState({\n      component: '',\n      name: 'title',\n      value: ltitle\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(AppContent, {\n    className: classes.root\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    title: ltitle\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: descr || h1\n  }), canonical && /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"canonical\",\n    href: canonical\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: ltitle\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: descr || h1\n  }), img && /*#__PURE__*/React.createElement(\"meta\", {\n    property: \"og:image\",\n    content: img\n  })), h1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header\n  }, /*#__PURE__*/React.createElement(Typography, {\n    key: \"h1\",\n    variant: \"h4\",\n    component: \"h1\",\n    color: \"primary\",\n    className: classes.width\n  }, h1), TopButton), contents.map(content => /*#__PURE__*/React.createElement(MarkdownElement, {\n    key: content,\n    text: content\n  })), footer);\n}\n\nMarkdownDocs.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classes: PropTypes.object.isRequired,\n  markdown: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  // заголовок в табе браузера\n  subtitle: PropTypes.string,\n  // суффикс проекта в заголовке\n  h1: PropTypes.string,\n  // заголовок статьи\n  descr: PropTypes.string,\n  // html meta description\n  footer: PropTypes.node // кнопки share соцсетей, прочие элементы в подвале\n\n} : {};\nexport default withStyles(styles)(withIface(MarkdownDocs));","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  rtrim,\n  splitCells,\n  escape,\n  findClosingBracket\n} = require('./helpers.js');\n\nfunction outputLink(cap, link, raw) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n\n  if (cap[0].charAt(0) !== '!') {\n    return {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text: cap[1]\n    };\n  } else {\n    return {\n      type: 'image',\n      raw,\n      text: escape(cap[1]),\n      href,\n      title\n    };\n  }\n}\n\n/**\n * Tokenizer\n */\nmodule.exports = class Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap) {\n      if (cap[0].length > 1) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n      return { raw: '\\n' };\n    }\n  }\n\n  code(src, tokens) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const lastToken = tokens[tokens.length - 1];\n      // An indented code block cannot interrupt a paragraph.\n      if (lastToken && lastToken.type === 'paragraph') {\n        tokens.pop();\n        lastToken.text += '\\n' + cap[0].trimRight();\n        lastToken.raw += '\\n' + cap[0];\n        return lastToken;\n      } else {\n        const text = cap[0].replace(/^ {4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic\n            ? rtrim(text, '\\n')\n            : text\n        };\n      }\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      return {\n        type: 'code',\n        raw: cap[0],\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: cap[2]\n      };\n    }\n  }\n\n  nptable(src) {\n    const cap = this.rules.block.nptable.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n        raw: cap[0]\n      };\n\n      if (item.header.length === item.align.length) {\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *> ?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  list(src) {\n    const cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw = cap[0];\n      const bull = cap[2];\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw,\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false,\n        items: []\n      };\n\n      // Get each top-level item.\n      const itemMatch = cap[0].match(this.rules.block.item);\n\n      let next = false,\n        item,\n        space,\n        b,\n        addBack,\n        loose,\n        istask,\n        ischecked;\n\n      const l = itemMatch.length;\n      for (let i = 0; i < l; i++) {\n        item = itemMatch[i];\n        raw = item;\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = this.rules.block.bullet.exec(itemMatch[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            addBack = itemMatch.slice(i + 1).join('\\n');\n            list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          list.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        list.items.push({\n          raw,\n          task: istask,\n          checked: ischecked,\n          loose: loose,\n          text: item\n        });\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      return {\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n      };\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1]\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0]\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src, inLink, inRawBlock) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!inLink && /^<a /i.test(cap[0])) {\n        inLink = true;\n      } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n        inLink = false;\n      }\n      if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = true;\n      } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink,\n        inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n        const linkLen = start + cap[1].length + lastParenIndex;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      const token = outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0]);\n      return token;\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      const token = outputLink(cap, link, cap[0]);\n      return token;\n    }\n  }\n\n  strong(src) {\n    const cap = this.rules.inline.strong.exec(src);\n    if (cap) {\n      return {\n        type: 'strong',\n        raw: cap[0],\n        text: cap[4] || cap[3] || cap[2] || cap[1]\n      };\n    }\n  }\n\n  em(src) {\n    const cap = this.rules.inline.em.exec(src);\n    if (cap) {\n      return {\n        type: 'em',\n        raw: cap[0],\n        text: cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]\n      };\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text: escape(cap[2].trim(), true)\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[1]\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, inRawBlock, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  }\n\n  html(html) {\n    return html;\n  }\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  }\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Tokenizer = require('./Tokenizer.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(extension) {\n  const opts = merge({}, extension);\n  if (extension.renderer) {\n    const renderer = marked.defaults.renderer || new Renderer();\n    for (const prop in extension.renderer) {\n      const prevRenderer = renderer[prop];\n      renderer[prop] = (...args) => {\n        let ret = extension.renderer[prop].apply(renderer, args);\n        if (ret === false) {\n          ret = prevRenderer.apply(renderer, args);\n        }\n        return ret;\n      };\n    }\n    opts.renderer = renderer;\n  }\n  if (extension.tokenizer) {\n    const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n    for (const prop in extension.tokenizer) {\n      const prevTokenizer = tokenizer[prop];\n      tokenizer[prop] = (...args) => {\n        let ret = extension.tokenizer[prop].apply(tokenizer, args);\n        if (ret === false) {\n          ret = prevTokenizer.apply(tokenizer, args);\n        }\n        return ret;\n      };\n    }\n    opts.tokenizer = tokenizer;\n  }\n  marked.setOptions(opts);\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.Tokenizer = Tokenizer;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","const Tokenizer = require('./Tokenizer.js');\nconst { defaults } = require('./defaults.js');\nconst { block, inline } = require('./rules.js');\n\n/**\n * smartypants text replacement\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    this.blockTokens(src, this.tokens, true);\n\n    this.inline(this.tokens);\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = [], top = true) {\n    src = src.replace(/^ +$/gm, '');\n    let token, i, l;\n\n    while (src) {\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src, tokens)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (token = this.tokenizer.nptable(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.blockTokens(token.text, [], top);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        l = token.items.length;\n        for (i = 0; i < l; i++) {\n          token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (top && (token = this.tokenizer.def(src))) {\n        src = src.substring(token.raw.length);\n        if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (token = this.tokenizer.paragraph(src))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n\n  inline(tokens) {\n    let i,\n      j,\n      k,\n      l2,\n      row,\n      token;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'paragraph':\n        case 'text':\n        case 'heading': {\n          token.tokens = [];\n          this.inlineTokens(token.text, token.tokens);\n          break;\n        }\n        case 'table': {\n          token.tokens = {\n            header: [],\n            cells: []\n          };\n\n          // header\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            token.tokens.header[j] = [];\n            this.inlineTokens(token.header[j], token.tokens.header[j]);\n          }\n\n          // cells\n          l2 = token.cells.length;\n          for (j = 0; j < l2; j++) {\n            row = token.cells[j];\n            token.tokens.cells[j] = [];\n            for (k = 0; k < row.length; k++) {\n              token.tokens.cells[j][k] = [];\n              this.inlineTokens(row[k], token.tokens.cells[j][k]);\n            }\n          }\n\n          break;\n        }\n        case 'blockquote': {\n          this.inline(token.tokens);\n          break;\n        }\n        case 'list': {\n          l2 = token.items.length;\n          for (j = 0; j < l2; j++) {\n            this.inline(token.items[j].tokens);\n          }\n          break;\n        }\n        default: {\n          // do nothing\n        }\n      }\n    }\n\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = [], inLink = false, inRawBlock = false) {\n    let token;\n\n    while (src) {\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n        src = src.substring(token.raw.length);\n        inLink = token.inLink;\n        inRawBlock = token.inRawBlock;\n        tokens.push(token);\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type === 'link') {\n          token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        if (token.type === 'link') {\n          token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // strong\n      if (token = this.tokenizer.strong(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // em\n      if (token = this.tokenizer.em(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^_([^\\s_<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s*<\\[])\\*(?!\\*)|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\[\\*])\\*(?![\\]`punctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","const Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.tokens.header[j]),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.cells.length;\n          for (j = 0; j < l2; j++) {\n            row = token.tokens.cells[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k]),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens[0].type === 'text') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n};\n"],"sourceRoot":""}