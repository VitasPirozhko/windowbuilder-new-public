{"version":3,"sources":["components/DeliveryAddr/styles.js","components/DeliveryAddr/connect.js","components/DeliveryAddr/GoogleMap.js","components/DeliveryAddr/YaMap.js","components/DeliveryAddr/YaSuggest.js","components/DeliveryAddr/DadataTyped/index.tsx","components/DeliveryAddr/DeliveryAddr.js","components/DeliveryAddr/index.js"],"names":["geo_map","$p","job_prm","builder","withStyles","theme","entered","minHeight","secondary","marginTop","spacing","coordinates","includes","width","groupTitle","fontWeight","listitem","paddingTop","paddingBottom","doc","calc_order","cat","delivery_areas","classes","BaseDataObj","delivery","constructor","keys","rest_path","this","geonames","postalCodeLookup","postalcode","fetch","then","res","json","geoLookup","lat","lng","dadata","specify","address","yandex","geocode","suggestions","query","kind","method","body","JSON","stringify","count","headers","Accept","Authorization","token","geolocate","lon","components","v","c","region","region_with_type","locality","area_with_type","city","city_long","city_with_type","house","house_type_full","postal_code","street","street_with_type","raw","format_suggestions","response","featureMember","GeoObjectCollection","length","Address","AddressDetails","Country","GeoObject","metaDataProperty","GeocoderMetaData","p1","Point","pos","split","map","parseFloat","p2","pos2","data","value","formatted","replace","CountryName","geo_lat","geo_lon","name","Components","distance","dlat","dlng","Math","sqrt","nearest","point","tmp","Infinity","pts","points","forEach","_obj","ppts","row","latitude","longitude","l","push","poly","polygon","pointsWithinPolygon","features","err","record_log","td","coord_presentation","FakeAddrObj","delivery_area","shipping_address","address_fields","super","_data","_is_new","_getter","_setter","compose","connect","state","props","handleCalck","dialog","ref","_mgr","obj","Promise","resolve","Object","assign","by_ref","reject","msg","text","title","handleCancel","handlers","handleIfaceState","component","GoogleMap","React","Component","componentDidMount","mapRef","process_address_fields","maps","google","el","mapParams","center","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","Map","init_map","reflectCenter","latLng","setCenter","marker","setPosition","coordinatesFin","marker_dragend","getPosition","destroy","componentWillUnmount","ulisten","render","larger","style","height","YaMap","context","cteateMap","script","controls","ymaps","geometry","type","draggable","events","add","dragend","geoObjects","getZoom","checkZoomRange","setCoordinates","originalEvent","target","poly_area","Polygon","hintContent","cursor","interactivityModel","fillColor","strokeColor","strokeOpacity","strokeWidth","opacity","reflectArea","properties","set","poly_direction","visible","owner","co","getCoordinates","refresh_grid","coordinatesChange","catch","s","document","createElement","src","async","listener","removeEventListener","ready","setState","addEventListener","head","appendChild","FormGroup","CircularProgress","size","Typography","variant","color","gutterBottom","marginLeft","YaSuggest","handleSelect","item","displayName","onChange","onInputChange","fake","suggestView","panelClosed","request","addr","setTimeout","onFlatChange","flat","flatChange","delayedSelect","exec","delay","clearTimeout","bind","onInputKey","e","key","stopPropagation","init","inited","SuggestView","results","assemble_addr","flex","right","className","TextField","cn","margin","label","inputRef","onKeyDown","onBlur","marginRight","maxWidth","ReactDadata","textInput","xhr","onInputFocus","inputFocused","fetchSuggestions","onInputBlur","event","inputQuery","suggestionsVisible","validate","onKeyPress","which","preventDefault","suggestionIndex","newSuggestionIndex","newInputQuery","selectSuggestion","abort","XMLHttpRequest","open","setRequestHeader","requestPayload","fromBound","toBound","Error","from_bound","to_bound","restrict_value","location","region_fias_id","city_fias_id","settlement_fias_id","street_fias_id","locations","send","onreadystatechange","readyState","status","responseJson","parse","onSuggestionClick","index","setCursorToEnd","element","valueLength","selectionStart","selectionEnd","focus","getHighlightWords","wordsToPass","words","filter","word","indexOf","isValid","autoload","classNames","FormControl","fullWidth","InputLabel","Input","join","disabled","placeholder","input","onFocus","aria-label","inputProps","autoComplete","autocomplete","suggestion","suggestionClass","onMouseDown","highlightClassName","autoEscape","searchWords","textToHighlight","Toolbtn","suggest_type","handleSuggestType","lbl","toUpperCase","IconButton","onClick","startsWith","DeliveryAddr","handleOk","call","message","wsql","set_user_param","handleErrClose","queryClose","_modified","dadataChange","qc_geo","postalcodes","assemble_address_fields","findArea","trim","test","area","cpresentation","unrestricted_value","coordinatesKeyPress","onDataChange","fields","forceUpdate","t","get_user_param","wnd","setText","elmnts","toolbar","setValue","WndAddressData","on","off","round","assemble_lat_lng","content","ComponentMap","coordin","root","DataField","_fld","Dialog","initFullScreen","large","onClose","actions","Button","toolbtns"],"mappings":"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","file":"static/js/22.cda7ae09.chunk.js","sourcesContent":["/**\r\n * ### Карточка покупателя\r\n * стили оформления\r\n *\r\n * Created by Evgeniy Malyarov on 14.03.2018.\r\n */\r\n\r\nimport {withStyles} from '@material-ui/styles';\r\nconst {geo_map} = $p.job_prm.builder;\r\n\r\nconst styles = theme => ({\r\n  entered: {\r\n    minHeight: 120,\r\n  },\r\n  secondary: {\r\n    marginTop: -theme.spacing(1.5),\r\n  },\r\n  coordinates: {\r\n    marginTop: geo_map.includes('without_area') ? 5 : theme.spacing(),\r\n    width: 230,\r\n  },\r\n  groupTitle: {\r\n    fontWeight: 'bold',\r\n  },\r\n  listitem: {\r\n    paddingTop: theme.spacing(),\r\n    paddingBottom: theme.spacing(),\r\n  }\r\n});\r\n\r\nexport default withStyles(styles);\r\n","/**\r\n * ### Адрес доставки\r\n * обработчики событий и модификаторы данных\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport {connect} from 'react-redux';\r\nimport withStyles from './styles';\r\nimport {compose} from 'redux';\r\n\r\nimport {points, polygon} from '@turf/helpers';\r\nimport pointsWithinPolygon from '@turf/points-within-polygon';\r\n\r\nconst {doc: {calc_order}, cat: {delivery_areas}, classes: {BaseDataObj}} = $p;\r\n\r\nclass DeliveryManager {\r\n\r\n  constructor() {\r\n    const {keys, rest_path} = $p.job_prm;\r\n\r\n    this.geonames = {\r\n      postalCodeLookup(postalcode) {\r\n        return fetch(`https://light.oknosoft.ru/geonames/postalCodeLookupJSON?postalcode=${postalcode}&country=RU&username=${keys.geonames}`)\r\n          .then(res => res.json());\r\n      },\r\n      geoLookup({lat, lng}) {\r\n        return fetch(`https://light.oknosoft.ru/geonames/addressJSON?lat=${lat}&lng=${lng}&username=${keys.geonames}`)\r\n          .then(res => res.json());\r\n      }\r\n    };\r\n\r\n    this.dadata = {\r\n\r\n      get token() {\r\n        return keys.dadata;\r\n      },\r\n\r\n      specify(address) {\r\n        if(keys.yandex) {\r\n          return yandex.geocode(address);\r\n        }\r\n        else {\r\n          return this.suggestions(address);\r\n        }\r\n      },\r\n\r\n      suggestions(query, kind = 'address') {\r\n        return fetch(`https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/${kind}?5`, {\r\n          method: 'post',\r\n          body: JSON.stringify({query, count: 1}),\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Token ${this.token}`\r\n          }\r\n        })\r\n          .then(res => res.json());\r\n      },\r\n\r\n      geolocate([lat, lon]) {\r\n        return fetch(`https://suggestions.dadata.ru/suggestions/api/4_1/rs/geolocate/address`, {\r\n          method: 'post',\r\n          body: JSON.stringify({lat, lon, count: 1}),\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Token ${this.token}`\r\n          }\r\n        })\r\n          .then(res => res.json());\r\n      },\r\n\r\n      components(v, c) {\r\n        v.region = c.region_with_type;\r\n        v.locality = c.area_with_type;\r\n        v.city = c.city;\r\n        v.city_long = c.city_with_type || c.city;\r\n        v.house = c.house_type_full && c.house ? c.house_type_full + ' ' + c.house : '';\r\n        v.postal_code = c.postal_code || '';\r\n        v.street = c.street_with_type || c.street || '';\r\n      },\r\n\r\n      address(raw) {\r\n        return fetch(`${rest_path}proxy/dadata`, {\r\n          method: 'post',\r\n          body: JSON.stringify({body: raw}),\r\n        })\r\n          .then(res => res.json());\r\n      }\r\n    };\r\n\r\n    const yandex = this.yandex = {\r\n\r\n      format_suggestions(response) {\r\n        const {featureMember} = response.GeoObjectCollection;\r\n        if(featureMember && featureMember.length) {\r\n          const {Address, AddressDetails: {Country}} = featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData;\r\n          const p1 = featureMember[0].GeoObject.Point;\r\n          let pos = p1 && p1.pos.split(' ').map(v => parseFloat(v));\r\n          if(featureMember.length > 3) {\r\n            const p2 = featureMember[1] && featureMember[1].GeoObject.Point;\r\n            let pos2 = p2 && p2.pos.split(' ').map(v => parseFloat(v));\r\n            pos[0] = (pos[0] + pos2[0]) / 2;\r\n            pos[1] = (pos[1] + pos2[1]) / 2;\r\n          }\r\n\r\n          const res = {\r\n            data: {\r\n              postal_code: Address.postal_code || '',\r\n              house_type_full: 'дом',\r\n              region_with_type: '',\r\n              area_with_type: '',\r\n              city: '',\r\n              house: '',\r\n              street_with_type: '',\r\n            },\r\n            value: Address.formatted.replace(`${Country.CountryName}, `, ''),\r\n          };\r\n          if(pos && pos.length > 1) {\r\n            res.data.geo_lat = pos[1];\r\n            res.data.geo_lon = pos[0];\r\n          }\r\n          for(const {kind, name} of Address.Components) {\r\n            switch (kind) {\r\n            case 'province':\r\n              res.data.region_with_type = name;\r\n              break;\r\n            case 'area':\r\n              res.data.area_with_type = name;\r\n              break;\r\n            case 'locality':\r\n              res.data.city = name;\r\n              break;\r\n            case 'street':\r\n              res.data.street_with_type = name;\r\n              break;\r\n            case 'district':\r\n              if(!res.data.street_with_type) {\r\n                res.data.street_with_type = name;\r\n              }\r\n              break;\r\n            case 'house':\r\n              res.data.house = name;\r\n              break;\r\n            }\r\n          }\r\n\r\n          return {suggestions: [res]};\r\n        }\r\n        return {suggestions: []};\r\n      },\r\n\r\n      geolocate([lat, lon]) {\r\n        return fetch(`https://geocode-maps.yandex.ru/1.x/?apikey=${keys.yandex}&geocode=${lon},${lat}&format=json`)\r\n          .then(res => res.json())\r\n          .then(({response}) => this.format_suggestions(response));\r\n\r\n        // return ymaps.geocode([lat, lon], {results: 1})\r\n        //   .then();\r\n      },\r\n\r\n      geocode(address) {\r\n        return fetch(`https://geocode-maps.yandex.ru/1.x/?apikey=${keys.yandex}&geocode=${address}&format=json`)\r\n          .then(res => res.json())\r\n          .then(({response}) => this.format_suggestions(response));\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n  distance(p1, p2) {\r\n    const dlat = p1.lat - p2.lat;\r\n    const dlng = p1.lng - p2.lng;\r\n    return Math.sqrt(dlat * dlat + dlng * dlng);\r\n  }\r\n\r\n  // ищет ближайший по координатам\r\n  nearest(point) {\r\n    let tmp, distance = Infinity;\r\n    const pts  = points([[point.lat, point.lng]]);\r\n\r\n    delivery_areas.forEach((doc) => {\r\n\r\n      // сначала, анализируем периметр\r\n      const {_obj} = doc.coordinates;\r\n      if(_obj.length > 2) {\r\n        try{\r\n          const ppts = _obj.map((row) => [row.latitude, row.longitude]);\r\n          const l = ppts.length - 1;\r\n          if(ppts[l][0] !== ppts[0][0] || ppts[l][1] !== ppts[0][1]) {\r\n            ppts.push(ppts[0]);\r\n          }\r\n          const poly = polygon([ppts]);\r\n          if(pointsWithinPolygon(pts, poly).features.length) {\r\n            tmp = doc;\r\n            return true;\r\n          }\r\n        }\r\n        catch (err) {\r\n          $p.record_log({err, doc});\r\n        }\r\n      }\r\n\r\n      // если не вошло и в пеример, ищем ближайший центр\r\n      const td = this.distance(point, {lat: doc.latitude, lng: doc.longitude});\r\n      if(!tmp || td < distance) {\r\n        distance = td;\r\n        tmp = doc;\r\n      }\r\n    });\r\n\r\n    return [tmp, point];\r\n  }\r\n\r\n  coord_presentation() {\r\n\r\n  }\r\n}\r\n\r\nconst delivery = new DeliveryManager();\r\n\r\nclass FakeAddrObj extends BaseDataObj{\r\n\r\n  constructor({_obj: {delivery_area, coordinates, shipping_address, address_fields}}) {\r\n    super({delivery_area, coordinates, shipping_address, address_fields}, calc_order, false, true);\r\n    this._data._is_new = false;\r\n  }\r\n\r\n\r\n  get delivery_area() {\r\n    return this._getter('delivery_area');\r\n  }\r\n  set delivery_area(v) {\r\n    this._setter('delivery_area', v);\r\n  }\r\n\r\n  get coordinates() {\r\n    return this._getter('coordinates');\r\n  }\r\n  set coordinates(v) {\r\n    this._setter('coordinates', v);\r\n  }\r\n\r\n  get shipping_address() {\r\n    return this._getter('shipping_address');\r\n  }\r\n  set shipping_address(v) {\r\n    this._setter('shipping_address', v);\r\n  }\r\n\r\n  get address_fields() {\r\n    return this._getter('address_fields');\r\n  }\r\n  set address_fields(v) {\r\n    this._setter('address_fields', v);\r\n  }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    handleCalck() {\r\n      const {props:{dialog: {ref, _mgr}}, obj} = this;\r\n      if(!obj.shipping_address) {\r\n        return Promise.reject({msg: {text: 'Уточните адрес доставки выбором из выпадающего списка', title: 'Пустой адрес'}});\r\n      }\r\n      if(!obj.coordinates) {\r\n        return Promise.reject({msg: {text: 'Укажите координаты адреса', title: 'Пустые координаты'}});\r\n      }\r\n      return Promise.resolve(Object.assign(_mgr.by_ref[ref], obj._obj));\r\n    },\r\n\r\n    handleCancel() {\r\n      props.handlers.handleIfaceState({\r\n        component: 'DataObjPage',\r\n        name: 'dialog',\r\n        value: null,\r\n      });\r\n    },\r\n\r\n    delivery,\r\n\r\n    FakeAddrObj,\r\n  };\r\n}\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//   return {};\r\n// }\r\n\r\nexport default compose(\r\n  withStyles,\r\n  connect(mapStateToProps /*, mapDispatchToProps */),\r\n);\r\n","/**\r\n * Компонент карты\r\n *\r\n * @module GoogleMap\r\n *\r\n * Created by Evgeniy Malyarov on 18.06.2019.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/* global google */\r\n\r\nclass GoogleMap extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const {v, mapRef} = this.props;\r\n    v.process_address_fields()\r\n      .then(() => {\r\n        const {maps} = google;\r\n        if(this.el && maps && !this.map) {\r\n\r\n          const mapParams = {\r\n            center: new maps.LatLng(v.latitude, v.longitude),\r\n            zoom: v.street ? 14 : 11,\r\n            mapTypeId: maps.MapTypeId.ROADMAP\r\n          };\r\n\r\n          this.map = new maps.Map(this.el, mapParams);\r\n\r\n          v.init_map(this.map, mapParams.center);\r\n\r\n          mapRef(this.map);\r\n          this.map.reflectCenter = function ([lat, lng]) {\r\n            const latLng = new maps.LatLng(lat, lng);\r\n            this.setCenter(latLng);\r\n            v.marker.setPosition(latLng);\r\n          };\r\n          this.map.coordinatesFin = () => {\r\n            v.marker_dragend({latLng: v.marker.getPosition()});\r\n          };\r\n        }\r\n        else if(this.map && !this.el) {\r\n          this.map.destroy;\r\n        }\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.v.ulisten();\r\n  }\r\n\r\n  render() {\r\n    const {larger} = this.props;\r\n    return <div\r\n      style={{width: '100%', height: `calc(100% - ${larger ? 60 : 116}px)`}}\r\n      ref={(el) => this.el = el}\r\n    />;\r\n  }\r\n\r\n}\r\n\r\nGoogleMap.propTypes = {\r\n  v: PropTypes.object,\r\n  mapRef: PropTypes.func,\r\n  larger: PropTypes.bool,\r\n};\r\n\r\nexport default GoogleMap;\r\n","/**\r\n * Карта\r\n *\r\n * @module YaMap\r\n *\r\n * Created by Evgeniy Malyarov on 15.02.2019.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n/* global ymaps */\r\n\r\nclass YaMap extends React.Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      script: typeof ymaps !== 'undefined',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(!this.state.script) {\r\n      const s = document.createElement('script');\r\n      s.type = 'text/javascript';\r\n      s.src = `https://api-maps.yandex.ru/2.1/?apikey=${$p.job_prm.keys.yandex}&lang=ru_RU`;\r\n      s.async = false;\r\n      const listener = () => {\r\n        s.removeEventListener('load', listener);\r\n        ymaps.ready(() => this.setState({script: true}));\r\n      };\r\n      s.addEventListener('load', listener, false);\r\n      document.head.appendChild(s);\r\n    }\r\n  }\r\n\r\n  cteateMap = () => {\r\n    if(this.el && this.state.script && !this.map) {\r\n      const {v, mapRef} = this.props;\r\n      v.process_address_fields()\r\n        .then(() => {\r\n          const mapParams = {\r\n            center: v.coordinates,\r\n            zoom: v.street ? 16 : 11,\r\n            controls: ['geolocationControl', 'zoomControl'],\r\n          };\r\n\r\n          this.map = new ymaps.Map(this.el, mapParams);\r\n\r\n          // Создание геообъекта с типом точка (метка).\r\n          const point = new ymaps.GeoObject({\r\n              geometry: {\r\n                type: \"Point\", // тип геометрии - точка\r\n                coordinates: v.coordinates, // координаты точки\r\n              },\r\n            },\r\n            {\r\n              draggable: true,\r\n            });\r\n          point.events.add(['dragend'], this.dragend);\r\n\r\n          // Размещение метки на карте.\r\n          this.map.geoObjects.add(point);\r\n          mapRef(this.map);\r\n          this.map.reflectCenter = function ([lat, lng]) {\r\n            this.setCenter([lat, lng], this.getZoom() >= 15 ? this.getZoom() : (v.street  ? 16 : 11), {checkZoomRange: true});\r\n            point.geometry.setCoordinates([lat, lng]);\r\n          };\r\n          this.map.coordinatesFin = () => {\r\n            this.dragend({originalEvent: {target: point}});\r\n          };\r\n\r\n          // добавляем полигоны периметров района и направления доставки\r\n          v.poly_area = new ymaps.Polygon([\r\n            // Координаты внешнего контура.\r\n            [],\r\n            ], {\r\n            hintContent: \"Район доставки\"\r\n          }, {\r\n            cursor: 'auto',\r\n            interactivityModel: 'default#transparent',\r\n            fillColor: '#c0d0e0',\r\n            strokeColor: '#709070',\r\n            strokeOpacity: 0.4,\r\n            strokeWidth: 3,\r\n            opacity: 0.3\r\n          });\r\n          this.map.geoObjects.add(v.poly_area);\r\n          this.map.reflectArea = () => {\r\n            const {coordinates: {_obj}, name}  = v.delivery_area;\r\n            v.poly_area.geometry.setCoordinates([_obj.map((row) => [row.latitude, row.longitude])]);\r\n            v.poly_area.properties.set('hintContent', name);\r\n          };\r\n          this.map.reflectArea();\r\n\r\n          v.poly_direction = new ymaps.Polygon([[]], {\r\n            hintContent: \"Направление доставки\"\r\n          }, {\r\n            visible: false,\r\n            cursor: 'auto',\r\n            interactivityModel: 'default#transparent',\r\n            fillColor: '#ccaaff',\r\n            strokeColor: '#aa80ff',\r\n            strokeOpacity: 0.4,\r\n            strokeWidth: 2,\r\n            opacity: 0.2\r\n          });\r\n          this.map.geoObjects.add(v.poly_direction);\r\n        });\r\n    }\r\n    else if(this.map && !this.el) {\r\n      this.map.destroy;\r\n    }\r\n  }\r\n\r\n  dragend = ({originalEvent}) => {\r\n    const {props: {v}} = this;\r\n    const {props: {delivery}, obj} = v.owner;\r\n    const co = originalEvent.target.geometry.getCoordinates();\r\n    delivery.yandex.geolocate(co)\r\n      .then(({suggestions}) => {\r\n        if(suggestions.length && suggestions[0].data) {\r\n          const data = suggestions[0];\r\n          delivery.dadata.components(v, data.data);\r\n          v.owner.refresh_grid(co);\r\n        }\r\n        else {\r\n          obj.coordinates = JSON.stringify(co);\r\n          v.owner.coordinatesChange({});\r\n        }\r\n      })\r\n      .catch(() => null);\r\n  };\r\n\r\n  render() {\r\n    const {state: {script}, props: {larger}} = this;\r\n    return script ?\r\n      <div\r\n        style={{width: '100%', height: `calc(100% - ${larger ? 60 : 116}px)`}}\r\n        ref={(el) => {\r\n          this.el = el;\r\n          this.cteateMap();\r\n        }}\r\n      />\r\n      :\r\n      <FormGroup row>\r\n        <CircularProgress size={24}/>\r\n        <Typography variant=\"subtitle1\" color=\"primary\" gutterBottom style={{marginLeft: 8}}>\r\n          Загрузка карты\r\n        </Typography>\r\n      </FormGroup>;\r\n  }\r\n\r\n}\r\n\r\nYaMap.propTypes = {\r\n  v: PropTypes.object,\r\n  mapRef: PropTypes.func,\r\n  larger: PropTypes.bool,\r\n};\r\n\r\nexport default YaMap;\r\n","/**\r\n * Подсказки\r\n *\r\n * @module YaSuggest\r\n *\r\n * Created by Evgeniy Malyarov on 08.09.2019.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {withStyles} from '@material-ui/styles';\r\nimport cn from 'classnames';\r\n\r\n/* global ymaps */\r\n\r\nconst styles = {\r\n  flex: {\r\n    flex: '1 1 auto',\r\n  },\r\n  right: {\r\n    marginRight: 4\r\n  },\r\n  width: {\r\n    maxWidth: 140\r\n  }\r\n};\r\n\r\nclass YaSuggest extends React.Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      query: props.query || '',\r\n      flat: '',\r\n    };\r\n  }\r\n\r\n  init(fake) {\r\n    if(this.addr && !this.inited) {\r\n      this.suggestView = new ymaps.SuggestView(this.addr, {results: 10});\r\n      this.suggestView.events.add('select', this.handleSelect);\r\n      this.inited = true;\r\n    }\r\n    const {v} = this.props;\r\n    if(fake && this.flat && v.flat) {\r\n      const query = this.props.v.assemble_addr();\r\n      this.suggestView && this.suggestView.state.set({panelClosed: true, request: query});\r\n      this.setState({query, flat: v.flat});\r\n    }\r\n  }\r\n\r\n  handleSelect = ({originalEvent}) => {\r\n    if(originalEvent && originalEvent.item) {\r\n      const {value, displayName} = originalEvent.item;\r\n      this.setState({query: value});\r\n      if (this.props.onChange) {\r\n        this.props.onChange({value, displayName, data: {}});\r\n      }\r\n    }\r\n  };\r\n\r\n  onInputChange = ({target, fake}) => {\r\n    const {value} = target;\r\n    if(fake && this.suggestView) {\r\n      this.suggestView.state.set({panelClosed: true, request: value});\r\n    }\r\n    this.setState({query: value}, () => {\r\n      if(fake && this.addr) {\r\n        setTimeout(() => {\r\n          this.suggestView.state.set({panelClosed: true});\r\n        }, 300);\r\n      }\r\n    });\r\n  };\r\n\r\n  onFlatChange = ({target, fake}) => {\r\n    this.setState({flat: target.value});\r\n    !fake && this.props.flatChange({target});\r\n  };\r\n\r\n  delayedSelect = (exec) => {\r\n    this.delay && clearTimeout(this.delay);\r\n    if(exec) {\r\n      this.handleSelect({originalEvent: {item: this.addr}});\r\n    }\r\n    else {\r\n      this.delay = setTimeout(this.delayedSelect.bind(this, true), 100);\r\n    }\r\n  };\r\n\r\n  onInputKey = (e) => {\r\n    if(e.key === 'Enter' || e.key === 'Tab') {\r\n      this.delayedSelect();\r\n    }\r\n    else if(e.key === 'Escape') {\r\n      e.stopPropagation();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {classes: {width, flex, right}} = this.props;\r\n    let {query, flat} = this.state;\r\n    return (\r\n      <FormGroup row className={flex}>\r\n        <TextField\r\n          className={cn(flex, right)}\r\n          margin=\"dense\"\r\n          label=\"Населенный пункт, улица, дом\"\r\n          inputRef={(el) => {\r\n            this.addr = el;\r\n            if(typeof ymaps !== 'undefined') {\r\n              this.init();\r\n            }\r\n          }}\r\n          value={query}\r\n          onChange={this.onInputChange}\r\n          onKeyDown={this.onInputKey}\r\n          onBlur={this.delayedSelect}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          className={cn(width, right)}\r\n          inputRef={ (el) => {this.flat = el;} }\r\n          label=\"Квартира\"\r\n          value={flat}\r\n          onChange={this.onFlatChange}\r\n        />\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nYaSuggest.propTypes = {\r\n  classes: PropTypes.object,\r\n  v: PropTypes.object,\r\n  flatChange: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  query: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(YaSuggest);\r\n","import * as React from 'react';\r\nimport * as Highlighter from 'react-highlight-words';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputBase  from '@material-ui/core/Input';\r\nimport './react-dadata.css';\r\n\r\ndeclare module 'react' {\r\n  interface InputHTMLAttributes<T> {\r\n    validate?: (value: string) => void\r\n  }\r\n}\r\n\r\nexport class ReactDadata extends React.PureComponent<ReactDadata.Props, ReactDadata.State> {\r\n\r\n  /**\r\n   * HTML-input\r\n   */\r\n  protected textInput?: HTMLInputElement;\r\n\r\n  /**\r\n   * XMLHttpRequest instance\r\n   */\r\n  protected xhr?: XMLHttpRequest;\r\n\r\n  constructor(props: ReactDadata.Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: this.props.query ? this.props.query : '',\r\n      inputQuery: this.props.query ? this.props.query : '',\r\n      inputFocused: false,\r\n      suggestions: [],\r\n      suggestionIndex: -1,\r\n      suggestionsVisible: true,\r\n      isValid: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.autoload && this.state.query) {\r\n      this.fetchSuggestions();\r\n    }\r\n  };\r\n\r\n  onInputFocus = () => {\r\n    this.setState({inputFocused: true});\r\n    if (this.state.suggestions.length == 0) {\r\n      this.fetchSuggestions();\r\n    }\r\n  };\r\n\r\n  onInputBlur = () => {\r\n    this.setState({inputFocused: false});\r\n    if (this.state.suggestions.length == 0) {\r\n      this.fetchSuggestions();\r\n    }\r\n  };\r\n\r\n  onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value;\r\n    this.setState({query: value, inputQuery: value, suggestionsVisible: true}, () => {\r\n      if (this.props.validate){\r\n        this.props.validate(value);\r\n      }\r\n      this.fetchSuggestions();\r\n    });\r\n  };\r\n\r\n  onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.which == 40) {\r\n      // Arrow down\r\n      event.preventDefault();\r\n      if (this.state.suggestionIndex < this.state.suggestions.length) {\r\n        const newSuggestionIndex = this.state.suggestionIndex + 1;\r\n        if(this.state.suggestions[newSuggestionIndex]) {\r\n          const newInputQuery = this.state.suggestions[newSuggestionIndex].value;\r\n          this.setState({suggestionIndex: newSuggestionIndex, query: newInputQuery});\r\n        }\r\n      }\r\n    } else if (event.which == 38) {\r\n      // Arrow up\r\n      event.preventDefault();\r\n      if (this.state.suggestionIndex >= 0) {\r\n        const newSuggestionIndex = this.state.suggestionIndex - 1;\r\n        const newInputQuery = newSuggestionIndex == -1 ? this.state.inputQuery : this.state.suggestions[newSuggestionIndex].value;\r\n        this.setState({suggestionIndex: newSuggestionIndex, query: newInputQuery})\r\n      }\r\n    } else if (event.which == 13) {\r\n      // Enter\r\n      event.preventDefault();\r\n      if (this.state.suggestionIndex >= 0) {\r\n        this.selectSuggestion(this.state.suggestionIndex);\r\n      }\r\n    }\r\n  };\r\n\r\n  fetchSuggestions = () => {\r\n    const kind = this.props.kind || 'address';\r\n    if (this.xhr) {\r\n      this.xhr.abort();\r\n    }\r\n    this.xhr = new XMLHttpRequest();\r\n    this.xhr.open(\"POST\", `https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/${kind}?5`);\r\n    this.xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    this.xhr.setRequestHeader(\"Authorization\", `Token ${this.props.token}`);\r\n    this.xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    let requestPayload: any = {\r\n      query: this.state.query,\r\n      count: this.props.count ? this.props.count : 10,\r\n    };\r\n    // Checking for granular suggestions\r\n    if (this.props.fromBound && this.props.toBound) {\r\n      // When using granular suggestion, all dadata components have to receive address property that contains shared address info.\r\n      if (!this.props.address) {\r\n        throw new Error(\"You have to pass address property with DaData address object to connect separate components\");\r\n      }\r\n      requestPayload.from_bound = {value: this.props.fromBound};\r\n      requestPayload.to_bound = {value: this.props.toBound};\r\n      requestPayload.restrict_value = true;\r\n\r\n      if (this.props.address.data) {\r\n        // Define location limitation\r\n        let location: any = {};\r\n        if (this.props.address.data.region_fias_id) {\r\n          location.region_fias_id = this.props.address.data.region_fias_id;\r\n        }\r\n        if (this.props.address.data.city_fias_id) {\r\n          location.city_fias_id = this.props.address.data.city_fias_id;\r\n        }\r\n        if (this.props.address.data.settlement_fias_id) {\r\n          location.settlement_fias_id = this.props.address.data.settlement_fias_id;\r\n        }\r\n        if (this.props.address.data.street_fias_id) {\r\n          location.street_fias_id = this.props.address.data.street_fias_id;\r\n        }\r\n        requestPayload.locations = [location];\r\n      }\r\n    }\r\n    this.xhr.send(JSON.stringify(requestPayload));\r\n\r\n    this.xhr.onreadystatechange = () => {\r\n      if (!this.xhr || this.xhr.readyState != 4) {\r\n        return;\r\n      }\r\n\r\n      if (this.xhr.status == 200) {\r\n        const responseJson = JSON.parse(this.xhr.response);\r\n        if (responseJson && responseJson.suggestions) {\r\n          this.setState({suggestions: responseJson.suggestions, suggestionIndex: -1});\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n  onSuggestionClick = (index: number, event: React.MouseEvent<HTMLDivElement>) => {\r\n    event.stopPropagation();\r\n    this.selectSuggestion(index);\r\n  };\r\n\r\n  selectSuggestion = (index: number) => {\r\n    if (this.state.suggestions.length >= index - 1) {\r\n      this.setState({query: this.state.suggestions[index].value, suggestionsVisible: false, inputQuery: this.state.suggestions[index].value}, () => {\r\n        this.fetchSuggestions();\r\n        setTimeout(() => this.setCursorToEnd(this.textInput), 100);\r\n      });\r\n\r\n      if (this.props.onChange) {\r\n        this.props.onChange(this.state.suggestions[index]);\r\n      }\r\n    }\r\n  };\r\n\r\n  setCursorToEnd = (element) => {\r\n    const valueLength = element.value.length;\r\n    if (element.selectionStart || element.selectionStart == '0') {\r\n      // Firefox/Chrome\r\n      element.selectionStart = valueLength;\r\n      element.selectionEnd = valueLength;\r\n      element.focus();\r\n    }\r\n  };\r\n\r\n  getHighlightWords = (): Array<string> => {\r\n    const wordsToPass = ['г', 'респ', 'ул', 'р-н', 'село', 'деревня', 'поселок', 'пр-д', 'пл', 'к', 'кв', 'обл', 'д'];\r\n    let words = this.state.inputQuery.replace(',', '').split(' ');\r\n    words = words.filter((word) => {\r\n      return wordsToPass.indexOf(word) < 0;\r\n    });\r\n    return words;\r\n  };\r\n\r\n  render() {\r\n    const {props} = this;\r\n    let classNames = ['react-dadata__input'];\r\n    if (props.className) {\r\n      classNames.push(props.className)\r\n    }\r\n\r\n    return (\r\n      <div className=\"react-dadata react-dadata__container\">\r\n        <FormControl fullWidth margin=\"dense\">\r\n          <InputLabel>{props.label}</InputLabel>\r\n          <InputBase\r\n            className={classNames.join(' ')}\r\n            disabled={props.disabled}\r\n            placeholder={props.placeholder ? props.placeholder : ''}\r\n            value={this.state.query}\r\n            inputRef={ (input) => {\r\n              this.textInput = input as HTMLInputElement;\r\n            } }\r\n            onChange={this.onInputChange}\r\n            onKeyPress={this.onKeyPress}\r\n            onKeyDown={this.onKeyPress}\r\n            onFocus={this.onInputFocus}\r\n            onBlur={this.onInputBlur}\r\n            aria-label={props.kind || 'address'}\r\n            inputProps={{\r\n              validate: props.validate,\r\n              autoComplete: props.autocomplete ? props.autocomplete : 'off'\r\n            }}\r\n          />\r\n        </FormControl>\r\n        {this.state.inputFocused && this.state.suggestionsVisible && this.state.suggestions && this.state.suggestions.length > 0 && <div className=\"react-dadata__suggestions\">\r\n          <div className=\"react-dadata__suggestion-note\">Выберите вариант или продолжите ввод</div>\r\n          {this.state.suggestions.map((suggestion, index) => {\r\n            let suggestionClass = 'react-dadata__suggestion';\r\n            if (index == this.state.suggestionIndex) {\r\n              suggestionClass += ' react-dadata__suggestion--current';\r\n            }\r\n            return <div key={suggestion.value} onMouseDown={this.onSuggestionClick.bind(this, index)} className={suggestionClass}><Highlighter highlightClassName=\"react-dadata--highlighted\" autoEscape={true} searchWords={this.getHighlightWords()} textToHighlight={suggestion.value}/></div>\r\n          })}\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n *\r\n *\r\n * @module DeliveryAddr\r\n *\r\n * Created by Evgeniy Malyarov on 13.02.2019.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from 'metadata-react/App/Dialog';\r\nimport connect from './connect';\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport DataField from 'metadata-react/DataField';\r\nimport TextField  from '@material-ui/core/TextField';\r\nimport IconButton  from '@material-ui/core/IconButton';\r\nimport LiveHelp from '@material-ui/icons/LiveHelp';\r\nimport GoogleMap from './GoogleMap';\r\nimport YaMap from './YaMap';\r\nimport YaSuggest from './YaSuggest';\r\nimport {ReactDadata} from './DadataTyped/index.tsx';\r\n\r\nfunction Toolbtn({suggest_type, handleSuggestType}) {\r\n  const lbl = suggest_type[0].toUpperCase() + ' ';\r\n  return <IconButton\r\n    title={`Источник подсказок: ${suggest_type}`}\r\n    onClick={handleSuggestType}>\r\n    <span style={{color: lbl.startsWith('D') ? 'blue' : 'red'}}>{lbl}</span>\r\n    <LiveHelp/>\r\n  </IconButton>;\r\n}\r\n\r\nToolbtn.propTypes = {\r\n  suggest_type: PropTypes.string.isRequired,\r\n  handleSuggestType: PropTypes.func.isRequired,\r\n};\r\n\r\nclass DeliveryAddr extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    const {handleCancel, handleCalck, FakeAddrObj, dialog: {ref, _mgr}} = props;\r\n    const t = this;\r\n    t.handleCancel = handleCancel.bind(t);\r\n    t.handleCalck = handleCalck.bind(t);\r\n    t.obj = new FakeAddrObj(_mgr.by_ref[ref]);\r\n    t.state = {\r\n      msg: null,\r\n      queryClose: false,\r\n      cpresentation: t.cpresentation(),\r\n      suggest_type: $p.wsql.get_user_param('suggest_type') || 'dadata',\r\n    };\r\n    t.wnd = {\r\n      setText() {},\r\n      elmnts: {\r\n        get map() {\r\n          return t.map;\r\n        },\r\n        toolbar: {\r\n          setValue() {\r\n            t.obj.coordinates = JSON.stringify([t.v.latitude, t.v.longitude]);\r\n            t.setState({cpresentation: t.cpresentation()});\r\n          }\r\n        }\r\n      }\r\n    };\r\n    t.v = new $p.classes.WndAddressData(t);\r\n    _mgr.on('update', this.onDataChange);\r\n    t.geo_map = $p.job_prm.builder.geo_map;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dialog._mgr.off('update', this.onDataChange);\r\n  }\r\n\r\n  refresh_grid(co) {\r\n    const {obj, v, dadata} = this;\r\n    if(co) {\r\n      v.latitude = co[0];\r\n      v.longitude = co[1];\r\n    }\r\n    v.assemble_address_fields(true);\r\n    dadata && dadata.onInputChange({\r\n      fake: true,\r\n      target: {value: obj.shipping_address}\r\n    });\r\n    const data = {area: true};\r\n    if(co) {\r\n      data.data = true;\r\n      data.value = obj.shipping_address;\r\n    }\r\n    this.findArea({\r\n      lat: v.latitude,\r\n      lng: v.longitude,\r\n      data,\r\n    });\r\n  }\r\n\r\n  cpresentation() {\r\n    let res = '';\r\n    try {\r\n      const point = JSON.parse(this.obj.coordinates);\r\n      res = `${point[0].round(9)}, ${point[1].round(9)}`;\r\n    }\r\n    catch (e) {}\r\n    return res;\r\n  }\r\n\r\n  handleOk = () => {\r\n    this.props.handleCalck.call(this)\r\n      .then(this.handleCancel)\r\n      .catch((err) => {\r\n        this.setState({msg: err.msg || err.message});\r\n      });\r\n  };\r\n\r\n  handleSuggestType = () => {\r\n    let {suggest_type} = this.state;\r\n    if(suggest_type === 'dadata') {\r\n      suggest_type = 'yandex';\r\n    }\r\n    else {\r\n      suggest_type = 'dadata';\r\n    }\r\n    $p.wsql.set_user_param('suggest_type', suggest_type);\r\n    this.setState({suggest_type});\r\n  };\r\n\r\n  handleCalck = () => {\r\n    this.props.handleCalck.call(this)\r\n      .catch((err) => {\r\n        this.setState({msg: err.msg});\r\n      });\r\n  };\r\n\r\n  handleErrClose = () => {\r\n    this.setState({msg: null, queryClose: false});\r\n  };\r\n\r\n  queryClose = () => {\r\n    if(this.obj._data._modified) {\r\n      this.setState({queryClose: true});\r\n    }\r\n    else {\r\n      this.handleCancel();\r\n    }\r\n  };\r\n\r\n  dadataChange = (data) => {\r\n    const {props: {delivery}, v} = this;\r\n    let nearest;\r\n    if(data.data && (data.data.qc_geo == 0 || data.data.qc_geo == 1)) {\r\n      nearest = Promise.resolve();\r\n    }\r\n    else if(data.value) {\r\n      nearest = delivery.dadata.specify(data.value)\r\n        .then(({suggestions}) => {\r\n          if(suggestions && suggestions[0].data.geo_lat && suggestions[0].data.geo_lon) {\r\n            if(!Object.keys(data.data).length) {\r\n              Object.assign(data.data, suggestions[0].data);\r\n              delivery.dadata.components(v, data.data);\r\n              v.assemble_address_fields(true);\r\n              //v.owner.refresh_grid(co);\r\n            }\r\n            else {\r\n              data.data.geo_lat = suggestions[0].data.geo_lat;\r\n              data.data.geo_lon = suggestions[0].data.geo_lon;\r\n            }\r\n            return;\r\n          }\r\n          else if(data.data && data.data.postal_code) {\r\n            return delivery.geonames.postalCodeLookup(data.data.postal_code)\r\n              .then(({postalcodes}) => {\r\n                data.data.geo_lat = postalcodes[0].lat;\r\n                data.data.geo_lon = postalcodes[0].lng;\r\n              });\r\n          }\r\n        });\r\n    }\r\n    nearest && nearest.then(() => this.findArea({\r\n      lat: parseFloat(data.data.geo_lat),\r\n      lng: parseFloat(data.data.geo_lon),\r\n      data,\r\n    }));\r\n  };\r\n\r\n  flatChange = ({target}) => {\r\n    const {v} = this;\r\n    v.flat = target.value.trim();\r\n    if(v.flat) {\r\n      if(/^\\d+$/.test(v.flat)) {\r\n        v.flat = 'кв ' + v.flat;\r\n      }\r\n    }\r\n    v.assemble_address_fields(false);\r\n  };\r\n\r\n  findArea = ({lat, lng, data}) => {\r\n    const {obj, props: {delivery}, map} = this;\r\n    const [area, point] = delivery.nearest({lat, lng});\r\n    if(data.data || data.area) {\r\n      obj.delivery_area = area;\r\n    }\r\n    if(data.data) {\r\n      obj.coordinates = JSON.stringify([point.lat, point.lng]);\r\n      this.setState({cpresentation: this.cpresentation()});\r\n      obj.shipping_address = data.value || data.unrestricted_value;\r\n      map && map.reflectCenter([point.lat, point.lng]);\r\n    }\r\n  };\r\n\r\n  coordinatesChange = ({target}) => {\r\n    this.setState({cpresentation: target ? target.value : this.cpresentation()});\r\n  };\r\n\r\n  coordinatesKeyPress = ({key}) => {\r\n    if(key === 'Enter') {\r\n      this.coordinatesFin();\r\n    }\r\n  };\r\n\r\n  onDataChange = (obj, fields) => {\r\n    if(obj === this.obj) {\r\n      if('delivery_area' in fields || 'coordinates' in fields) {\r\n        this.forceUpdate();\r\n      }\r\n      if('delivery_area' in fields && this.map) {\r\n        this.map.reflectArea();\r\n      }\r\n    }\r\n  };\r\n\r\n  mapRef = (map) => {\r\n    this.map = map;\r\n    if(this.state.suggest_type === 'yandex') {\r\n      this.dadata.init(true);\r\n    }\r\n  };\r\n\r\n  coordinatesFin() {\r\n    try{\r\n      const {v, map, state: {cpresentation}} = this;\r\n      const co = v.assemble_lat_lng(cpresentation);\r\n      if(co) {\r\n        map && map.reflectCenter([co.lat, co.lng]);\r\n        this.obj.coordinates = JSON.stringify([co.lat, co.lng]);\r\n        this.setState({cpresentation: this.cpresentation()});\r\n\r\n        map.coordinatesFin();\r\n      }\r\n    }\r\n    catch (e) {}\r\n  }\r\n\r\n  content() {\r\n    const {obj, state: {cpresentation, suggest_type}, props: {delivery, classes}, geo_map} = this;\r\n    const ComponentMap = geo_map.includes('google') ? GoogleMap : YaMap;\r\n    const addr = suggest_type === 'dadata' ?\r\n      <ReactDadata\r\n        key=\"row_addr\"\r\n        label=\"Населенный пункт, улица, дом, квартира\"\r\n        ref={(el) => this.dadata = el}\r\n        token={delivery.dadata.token}\r\n        query={obj.shipping_address}\r\n        onChange={this.dadataChange}\r\n      />\r\n      :\r\n    <YaSuggest\r\n      key=\"row_addr\"\r\n      ref={(el) => this.dadata = el}\r\n      query={obj.shipping_address}\r\n      v={this.v}\r\n      onChange={this.dadataChange}\r\n      flatChange={this.flatChange}\r\n    />;\r\n    const coordin = <TextField\r\n      value={cpresentation}\r\n      label=\"Координаты\"\r\n      classes={{root: classes.coordinates}}\r\n      onChange={this.coordinatesChange}\r\n      onBlur={this.coordinatesFin}\r\n      onKeyPress={this.coordinatesKeyPress}\r\n    />;\r\n    return [\r\n      !geo_map.includes('without_area') && <FormGroup key=\"row1\" row>\r\n        <DataField _obj={obj} _fld=\"delivery_area\"/>\r\n        {coordin}\r\n      </FormGroup>,\r\n      !geo_map.includes('without_area') && addr,\r\n      geo_map.includes('without_area') && <FormGroup key=\"row\" row>\r\n        {addr}\r\n        {coordin}\r\n      </FormGroup>,\r\n      <ComponentMap\r\n        key=\"map\"\r\n        mapRef={this.mapRef}\r\n        v={this.v}\r\n        larger={geo_map.includes('without_area')}\r\n      />\r\n    ];\r\n  }\r\n\r\n  render() {\r\n\r\n    const {handleCancel, handleErrClose, obj: {_data}, state: {msg, queryClose, suggest_type}} = this;\r\n\r\n\r\n    return <Dialog\r\n      open\r\n      initFullScreen\r\n      large\r\n      title={`Адрес доставки${_data._modified ? ' *' : ''}`}\r\n      onClose={this.queryClose}\r\n      actions={[\r\n        <Button key=\"ok\" onClick={this.handleOk} color=\"primary\">Ок</Button>,\r\n        <Button key=\"cancel\" onClick={handleCancel} color=\"primary\">Отмена</Button>\r\n      ]}\r\n      toolbtns={<Toolbtn suggest_type={suggest_type} handleSuggestType={this.handleSuggestType}/>}\r\n    >\r\n      {this.content()}\r\n      {msg &&\r\n      <Dialog\r\n        open\r\n        title={msg.title}\r\n        onClose={handleErrClose}\r\n        actions={[\r\n          <Button key=\"ok\" onClick={handleErrClose} color=\"primary\">Ок</Button>,\r\n        ]}\r\n      >\r\n        {msg.text || msg}\r\n      </Dialog>}\r\n      {queryClose &&\r\n      <Dialog\r\n        open\r\n        title=\"Закрыть форму ввода адреса?\"\r\n        onClose={handleErrClose}\r\n        actions={[\r\n          <Button key=\"ok\" onClick={handleCancel} color=\"primary\">Ок</Button>,\r\n          <Button key=\"cancel\" onClick={handleErrClose} color=\"primary\">Отмена</Button>\r\n        ]}\r\n      >\r\n        Внесённые изменения будут потеряны\r\n      </Dialog>}\r\n    </Dialog>;\r\n\r\n  }\r\n}\r\n\r\nDeliveryAddr.propTypes = {\r\n  dialog: PropTypes.object.isRequired,\r\n  delivery: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  handlers: PropTypes.object.isRequired,\r\n  handleCalck: PropTypes.func.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  FakeAddrObj: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(DeliveryAddr);\r\n","import DeliveryAddr from './DeliveryAddr';\r\n\r\nexport default DeliveryAddr;\r\n"],"sourceRoot":""}