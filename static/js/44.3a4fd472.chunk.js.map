{"version":3,"sources":["../node_modules/metadata-react/FrmReport/RepToolbar.js","../node_modules/metadata-react/FrmReport/RepTabularSection.js","../node_modules/metadata-react/FrmReport/Report.js","../node_modules/metadata-react/FrmReport/index.js"],"names":["RepToolbar","Component","constructor","props","context","super","this","handleChange","handleSchemeChange","scheme","state","anchorEl","undefined","menuOpen","export_handlers","call","render","handleSave","handleClose","handlePrint","_obj","_tabular","classes","settings_open","ToolbarExt","React","createElement","Toolbar","disableGutters","className","toolbar","Button","size","onClick","disabled","standard_period","empty","IconButton","DateRange","_fld","_meta","synonym","Typography","color","flex","SchemeSettingsButtons","handleSettingsOpen","handleSettingsClose","show_variants","handleMenuOpen","title","MoreVertIcon","Menu","open","onClose","handleMenuClose","MenuItem","PrintIcon","handleExportCSV","CopyIcon","handleExportJSON","CloudDownloadIcon","handleExportXLS","FileDownloadIcon","propTypes","withStyles","RepTabularSection","_props","getRows","i","rows","onRowExpandToggle","args","expanded","Object","assign","columnGroupName","row","isExpanded","shouldExpand","setState","onCellExpand","slice","rowKey","rowData","rowIndex","indexOf","subRows","expandArgs","children","updateSubRowDetails","treeDepth","splice","length","getSubRowDetails","rowItem","_columns","key","group","field","siblingIndex","numberSiblings","RowRenderer","renderBaseRow","formatted","conditional_appearance","find_rows","use","crow","check","style","JSON","parse","css","e","parentTreeDepth","forEach","sr","_metadata","shouldComponentUpdate","tabular","count","_rows","_count","clear","expandRoot","dims","srows","expandAll","level","rootRow","idx","_level","minHeight","hideHeader","ReactDataGrid","columns","enableCellSelect","rowGetter","rowsCount","rowHeight","headerRowHeight","rowRenderer","Report","MDNRComponent","calculate","then","_result","Promise","reject","Error","handleColumns","read_only","rx_columns","mode","fields","_mgr","_meta2","_obj2","create","metadata","resolve","$p","cat","scheme_settings","get_scheme","class_name","autoexec","registerRep","name","RepParams","_manager","LoadingMessage","text","pheight","height","show_grid","ignoreTitle","Helmet","content","property","hideToolbar","SchemeSettingsTabs","width","tabParams","ref","el","PropTypes","object","isRequired","string","_acl","bool","func","withIface"],"mappings":"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","file":"static/js/44.3a4fd472.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport RunIcon from '@material-ui/icons/PlayArrow';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PrintIcon from '@material-ui/icons/Print';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport FileDownloadIcon from '@material-ui/icons/ArrowDropDownCircle';\nimport { export_handlers } from '../plugin';\nimport SchemeSettingsButtons from '../SchemeSettings/SchemeSettingsButtons';\nimport DateRange from '../SchemeSettings/DateRange';\nimport withStyles from '../Header/toolbar';\n\nclass RepToolbar extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = () => {\n      this.props.handleSchemeChange(this.props.scheme);\n    };\n\n    this.state = {\n      anchorEl: undefined,\n      menuOpen: false\n    };\n    export_handlers.call(this);\n  }\n\n  render() {\n    const {\n      props,\n      state,\n      handleChange\n    } = this;\n    const {\n      handleSave,\n      handleClose,\n      handlePrint,\n      _obj,\n      _tabular,\n      classes,\n      scheme,\n      settings_open,\n      ToolbarExt\n    } = props;\n    return /*#__PURE__*/React.createElement(Toolbar, {\n      disableGutters: true,\n      className: classes.toolbar\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleSave,\n      disabled: settings_open\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-play fa-fw\"\n    }), \" Сформировать\"), !scheme.standard_period.empty() && /*#__PURE__*/React.createElement(IconButton, {\n      disabled: true\n    }, \"|\"), !scheme.standard_period.empty() && /*#__PURE__*/React.createElement(DateRange, {\n      _obj: scheme,\n      _fld: 'date',\n      _meta: {\n        synonym: 'Период'\n      },\n      classes: classes,\n      handleChange: handleChange\n    }), ToolbarExt && /*#__PURE__*/React.createElement(ToolbarExt, null), /*#__PURE__*/React.createElement(Typography, {\n      color: \"inherit\",\n      className: classes.flex\n    }, \" \"), /*#__PURE__*/React.createElement(SchemeSettingsButtons, {\n      handleSettingsOpen: props.handleSettingsOpen,\n      handleSettingsClose: props.handleSettingsClose,\n      handleSchemeChange: props.handleSchemeChange,\n      settings_open: settings_open,\n      classes: classes,\n      scheme: scheme,\n      show_variants: true\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleMenuOpen,\n      title: \"Дополнительно\"\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, null)), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: state.anchorEl,\n      open: state.menuOpen,\n      onClose: this.handleMenuClose\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      disabled: true,\n      onClick: handlePrint\n    }, /*#__PURE__*/React.createElement(PrintIcon, null), \"  Печать\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleExportCSV\n    }, /*#__PURE__*/React.createElement(CopyIcon, null), \"  Копировать CSV\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleExportJSON\n    }, /*#__PURE__*/React.createElement(CloudDownloadIcon, null), \"  Копировать JSON\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleExportXLS\n    }, /*#__PURE__*/React.createElement(FileDownloadIcon, null), \"  Экспорт в XLS\")));\n  }\n\n}\n\nRepToolbar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  handleSave: PropTypes.func.isRequired,\n  // обработчик формирования отчета\n  handlePrint: PropTypes.func.isRequired,\n  // обработчик открытия диалога печати\n  handleClose: PropTypes.func.isRequired,\n  // команда закрытия формы\n  handleSettingsOpen: PropTypes.func.isRequired,\n  handleSettingsClose: PropTypes.func.isRequired,\n  handleSchemeChange: PropTypes.func.isRequired,\n  // обработчик при изменении настроек компоновки\n  _obj: PropTypes.object,\n  // объект данных - отчет DataProcessorObj\n  _tabular: PropTypes.string.isRequired,\n  // имя табчасти с данными\n  scheme: PropTypes.object.isRequired,\n  // значение настроек компоновки CatSchemeSettings\n  settings_open: PropTypes.bool,\n  // открыта панель настроек\n  ToolbarExt: PropTypes.func\n} : {};\n;\nexport default withStyles(RepToolbar);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDataGrid from 'react-data-grid';\nexport default class RepTabularSection extends Component {\n  constructor(_props, context) {\n    super(_props, context);\n\n    this.getRows = i => {\n      return this.state.rows[i];\n    };\n\n    this.onRowExpandToggle = args => {\n      const expanded = Object.assign({}, this.state.expanded);\n      expanded[args.columnGroupName] = Object.assign({}, expanded[args.columnGroupName]);\n      expanded[args.columnGroupName][args.row] = {\n        isExpanded: args.shouldExpand\n      };\n      this.setState({\n        expanded: expanded\n      });\n    };\n\n    this.onCellExpand = args => {\n      let rows = this.state.rows.slice(0);\n      let rowKey = args.rowData.row;\n      let rowIndex = rows.indexOf(args.rowData);\n      let subRows = args.expandArgs.children;\n      let expanded = Object.assign({}, this.state.expanded);\n\n      if (expanded && !expanded[rowKey]) {\n        expanded[rowKey] = true;\n        this.updateSubRowDetails(subRows, args.rowData.treeDepth);\n        rows.splice(rowIndex + 1, 0, ...subRows);\n      } else if (expanded[rowKey]) {\n        expanded[rowKey] = false;\n        rows.splice(rowIndex + 1, subRows.length);\n      }\n\n      this.setState({\n        expanded,\n        rows\n      });\n    };\n\n    this.getSubRowDetails = rowItem => {\n      const {\n        _columns\n      } = this.props;\n      const {\n        key\n      } = _columns[0];\n      let isExpanded = this.state.expanded[rowItem.row] ? this.state.expanded[rowItem.row] : false;\n      return {\n        group: rowItem.children && rowItem.children.length > 0,\n        expanded: isExpanded,\n        children: rowItem.children,\n        field: key,\n        treeDepth: rowItem.treeDepth || 0,\n        siblingIndex: rowItem.siblingIndex,\n        numberSiblings: rowItem.numberSiblings\n      };\n    };\n\n    this.RowRenderer = ({\n      renderBaseRow,\n      ...props\n    }) => {\n      let formatted;\n      const {\n        scheme\n      } = this.props;\n      scheme.conditional_appearance.find_rows({\n        use: true\n      }, crow => {\n        if (crow.check(props.row)) {\n          try {\n            formatted = /*#__PURE__*/React.createElement(\"div\", {\n              style: JSON.parse(crow.css)\n            }, renderBaseRow(props));\n          } catch (e) {}\n\n          return false;\n        }\n      });\n      return formatted || renderBaseRow(props);\n    };\n\n    this.updateSubRowDetails = (subRows, parentTreeDepth) => {\n      let treeDepth = parentTreeDepth || 0;\n      subRows.forEach((sr, i) => {\n        sr.treeDepth = treeDepth + 1;\n        sr.siblingIndex = i;\n        sr.numberSiblings = subRows.length;\n        sr.children && this.updateSubRowDetails(sr.children, sr.treeDepth);\n      });\n    };\n\n    const {\n      _obj,\n      _tabular,\n      _meta\n    } = _props;\n    const that = this;\n    this.state = {\n      _meta: _meta || _obj._metadata(_tabular),\n      rows: [],\n      expanded: {}\n    };\n  }\n\n  shouldComponentUpdate({\n    scheme\n  }) {\n    if (scheme !== this.props.scheme) {\n      // в случае непустого результата - чистим\n      const {\n        _obj,\n        _tabular\n      } = this.props;\n      const tabular = _obj[_tabular];\n\n      if (tabular && tabular.count()) {\n        if (tabular._rows) {\n          tabular._rows.length = tabular._rows._count = 0;\n        }\n\n        tabular.clear();\n      }\n\n      this.state.rows.length = 0;\n      this.state.expanded = {};\n    }\n\n    return true;\n  }\n\n  expandRoot() {\n    const {\n      _obj,\n      _tabular,\n      scheme\n    } = this.props;\n    const dims = scheme.dims();\n    const rows = _obj[_tabular]._rows || [];\n\n    if (rows.length && dims.length\n    /*&& !dims[0]*/\n    ) {\n        const srows = rows.slice(0);\n        const subRows = rows[0].children;\n        srows.splice(1, 0, ...subRows);\n        this.updateSubRowDetails(subRows, 1);\n        this.setState({\n          expanded: {\n            '0': true\n          },\n          rows: srows\n        });\n      } else {\n      this.setState({\n        expanded: {},\n        rows\n      });\n    }\n  }\n\n  expandAll(level = 0) {\n    const dims = this.props.scheme.dims();\n    const {\n      expanded,\n      rows\n    } = this.state;\n\n    if (rows.length && dims.length) {\n      const srows = rows.slice(0);\n      rows.slice(0).forEach((rootRow, idx) => {\n        if (rootRow._level || !rootRow.children || expanded[rootRow.row]) {\n          return;\n        }\n\n        const subRows = rootRow.children;\n        srows.splice(srows.indexOf(rootRow) + 1, 0, ...subRows);\n        this.updateSubRowDetails(subRows, 1);\n        expanded[rootRow.row] = true;\n      });\n      this.setState({\n        expanded,\n        rows: srows\n      });\n    }\n  }\n\n  render() {\n    const {\n      props,\n      state,\n      RowRenderer\n    } = this;\n    const {\n      _columns,\n      minHeight,\n      hideHeader\n    } = props; // rowRenderer={RowRenderer}\n    // onRowExpandToggle={onRowExpandToggle}\n    // rowGroupRenderer={RowGroupRenderer}\n\n    return /*#__PURE__*/React.createElement(ReactDataGrid, {\n      columns: _columns,\n      enableCellSelect: true,\n      rowGetter: this.getRows,\n      rowsCount: state.rows.length,\n      getSubRowDetails: this.getSubRowDetails,\n      onCellExpand: this.onCellExpand,\n      minHeight: minHeight || 220,\n      rowHeight: 33,\n      headerRowHeight: hideHeader ? 1 : 33,\n      rowRenderer: RowRenderer\n    });\n  }\n\n}\nRepTabularSection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  _obj: PropTypes.object.isRequired,\n  _tabular: PropTypes.string.isRequired,\n  _meta: PropTypes.object,\n  _columns: PropTypes.array.isRequired,\n  // колонки\n  handleRowChange: PropTypes.func\n} : {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MDNRComponent from '../common/MDNRComponent';\nimport LoadingMessage from '../DumbLoader/LoadingMessage';\nimport RepToolbar from './RepToolbar';\nimport RepTabularSection from './RepTabularSection';\nimport SchemeSettingsTabs from '../SchemeSettings/SchemeSettingsTabs';\nimport { Helmet } from 'react-helmet';\nimport { withIface } from 'metadata-redux';\n\nclass Report extends MDNRComponent {\n  constructor(_props, context) {\n    super(_props, context);\n\n    this.handleSave = () => {\n      const {\n        _obj,\n        scheme\n      } = this.state;\n\n      if (scheme && !scheme.empty()) {\n        if (_obj.scheme !== scheme) {\n          _obj.scheme = scheme;\n        }\n\n        return _obj.calculate().then(() => this._result.expandRoot());\n      } else {\n        return Promise.reject(new Error('Пустая схема компоновки'));\n      }\n    };\n\n    this.handlePrint = () => {};\n\n    this.handleClose = () => {};\n\n    this.handleSettingsOpen = () => {\n      this.setState({\n        settings_open: true\n      });\n    };\n\n    this.handleSettingsClose = () => {\n      this.setState({\n        settings_open: false\n      });\n    };\n\n    this.handleSchemeChange = scheme => {\n      const {\n        props,\n        state: {\n          _obj,\n          _meta\n        }\n      } = this;\n      const {\n        handleSchemeChange,\n        handleColumns,\n        read_only\n      } = props;\n\n      const _columns = scheme.rx_columns({\n        mode: 'ts',\n        fields: _meta.fields,\n        _obj,\n        read_only\n      });\n\n      handleColumns && handleColumns(_columns); // в этом методе\n\n      handleSchemeChange && handleSchemeChange(this, scheme); // обновляем state, shouldComponentUpdate берём из MDNRComponent\n\n      this.setState({\n        scheme,\n        _columns\n      }, () => this.shouldComponentUpdate(props));\n    };\n\n    const {\n      _mgr,\n      _meta: _meta2,\n      _obj: _obj2\n    } = _props;\n\n    const _tabular = _props._tabular || _mgr._tabular || 'data';\n\n    this.state = {\n      _obj: _obj2 || _mgr.create(),\n      _meta: _meta2 || _mgr.metadata(_tabular),\n      _tabular,\n      settings_open: false\n    };\n    (_props.scheme ? Promise.resolve(_props.scheme) : $p.cat.scheme_settings.get_scheme(_mgr.class_name + `.${_tabular}`)).then(this.handleSchemeChange).then(() => {\n      if (_props.autoexec) {\n        Promise.resolve().then(() => this.handleSave());\n      }\n    });\n    _props.registerRep && _props.registerRep(this);\n  }\n\n  get ltitle() {\n    const {\n      _mgr\n    } = this.props;\n    const {\n      scheme\n    } = this.state;\n    return _mgr.metadata().synonym + (scheme && scheme.name ? ` (${scheme.name})` : '');\n  }\n\n  render() {\n    const {\n      props,\n      state\n    } = this;\n    const {\n      _obj,\n      _columns,\n      _tabular,\n      scheme,\n      settings_open\n    } = state;\n    const {\n      RepParams\n    } = _obj._manager;\n\n    if (!scheme) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Чтение настроек компоновки...\"\n      });\n    } else if (!_obj) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Чтение объекта данных...\"\n      });\n    } else if (!_columns || !_columns.length) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Ошибка настроек компоновки...\"\n      });\n    }\n\n    const pheight = props.height || props.minHeight || 500;\n    const show_grid = !settings_open || pheight > 572;\n    return [!props.ignoreTitle && /*#__PURE__*/React.createElement(Helmet, {\n      key: \"helmet\",\n      title: props.title\n    }, /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Отчет\"\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      property: \"og:title\",\n      content: props.title\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      property: \"og:description\",\n      content: \"Отчет\"\n    })), !props.hideToolbar && /*#__PURE__*/React.createElement(RepToolbar, {\n      key: \"toolbar\",\n      _obj: _obj,\n      _tabular: _tabular,\n      _columns: _columns,\n      scheme: scheme,\n      settings_open: settings_open,\n      ToolbarExt: props.ToolbarExt,\n      handleSettingsOpen: this.handleSettingsOpen,\n      handleSettingsClose: this.handleSettingsClose,\n      handleSchemeChange: this.handleSchemeChange,\n      handleSave: this.handleSave,\n      handlePrint: this.handlePrint,\n      handleClose: this.handleClose\n    }), settings_open && /*#__PURE__*/React.createElement(SchemeSettingsTabs, {\n      key: \"tabs\",\n      height: show_grid ? 272 : pheight - 104,\n      width: props.width,\n      scheme: scheme,\n      tabParams: RepParams && /*#__PURE__*/React.createElement(RepParams, {\n        _obj: _obj,\n        scheme: scheme\n      }),\n      handleSchemeChange: this.handleSchemeChange\n    }), show_grid && /*#__PURE__*/React.createElement(RepTabularSection, {\n      key: \"tabular\",\n      ref: el => this._result = el,\n      _obj: _obj,\n      _tabular: _tabular,\n      _columns: _columns,\n      scheme: scheme,\n      minHeight: pheight - 52 - (settings_open ? 320 : 0),\n      hideHeader: props.hideHeader\n    })];\n  }\n\n}\n\nReport.propTypes = {\n  _mgr: PropTypes.object.isRequired,\n  // менеджер отчета\n  _obj: PropTypes.object,\n  // объект данных - отчет DataProcessorObj\n  _meta: PropTypes.object,\n  // метаданные можно переопределить\n  _tabular: PropTypes.string,\n  // имя табчасти, в которой живут данные отчета\n  _acl: PropTypes.string,\n  // права текущего пользователя\n  read_only: PropTypes.bool,\n  // морозит ячейки\n  autoexec: PropTypes.bool,\n  // запускает формирование отчета после монтирования компонента\n  ignoreTitle: PropTypes.bool,\n  // запрет установки заголовка приложения\n  handlePrint: PropTypes.func,\n  // внешний обработчик печати\n  handleSchemeChange: PropTypes.func,\n  // внешний обработчик при изменении настроек компоновки\n  handleColumns: PropTypes.func,\n  // внешний обработчик при расчете свойств колонок - чтобы переопределить editors и formatters\n  registerRep: PropTypes.func,\n  // регистрация ссылки на объект отчета в родительском компоненте\n  ToolbarExt: PropTypes.func\n};\nexport default withIface(Report);","import Report from './Report';\nexport default Report;"],"sourceRoot":""}