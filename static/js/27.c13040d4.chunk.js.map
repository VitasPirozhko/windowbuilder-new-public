{"version":3,"sources":["components/CalcOrder/ChangeRecalc/SelectProd.js","components/CalcOrder/ChangeRecalc/MainProps.js","components/CalcOrder/ChangeRecalc/PropField.js","components/CalcOrder/ChangeRecalc/SubProps.js","components/CalcOrder/ChangeRecalc/Stepper.js","components/CalcOrder/ChangeRecalc/ChangeRecalc.js","components/CalcOrder/ChangeRecalc/index.js","../node_modules/metadata-react/DataField/stylesPropertyGrid.js"],"names":["SelectProd","React","Component","constructor","props","context","super","$p","cat","scheme_settings","find_rows","obj","scheme","name","endsWith","this","rowSelection","production","dp","showCheckbox","enableShiftSelect","selectBy","keys","rowKey","markKey","values","use","map","r","row","render","TabularSection","_obj","_tabular","denyAddDel","hideToolbar","Typography","key","color","useStyles","makeStyles","theme","group","alignItems","paddingBottom","spacing","synonim","width","switch","PropFld","classes","checked","handleChange","fld","title","FormGroup","className","FormControlLabel","control","Switch","onChange","label","DataField","_fld","read_only","MainProps","state","setState","useState","sys","use_sys","furn","use_furn","inset","use_inset","clr","use_clr","target","withStyles","extClasses","fullWidth","isTabular","SubProps","product_params","params","Map","aparams","forEach","characteristic","hide","param","value","caption","show_calculated","is_calculated","get","set","Set","add","size","push","Array","from","sort","a","b","sorting_field","load","fields","_owner","_metadata","_name","res","grid","selection","notify","prow","links","params_links","e","length","some","link","_meta","Object","assign","synonym","types","type","oselect","linked_values","choice_params","path","in","v","ctrl_type","root","backButton","marginRight","instructions","marginTop","marginBottom","cont","minHeight","HorizontalStepper","setReady","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","stepIndex","getStepContent","Button","disabled","onClick","prevActiveStep","variant","ChangeRecalc","ref","_mgr","dialog","ready","handleCalck","cmd","ui","dialogs","alert","text","handleCancel","handlers","handleIfaceState","component","buyers_order","create","coordinates","count","empty","elm_type","enm","elm_types","Рама","constructions","glasses","is_sandwich","elm","find","Dialog","open","initFullScreen","large","onClose","actions","shrink","lshrink","formControl","lformControl","input","iroot","checkbox","transform","top","left","position","marginLeft","minWidth","paddingRight","paddingTop","borderBottom","borderRadius"],"mappings":"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","file":"static/js/27.c13040d4.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TabularSection from 'metadata-react/TabularSection';\r\n\r\nclass SelectProd extends React.Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    $p.cat.scheme_settings.find_rows({obj: 'dp.buyers_order.production'}, (scheme) => {\r\n      if(scheme.name.endsWith('select_prod')) {\r\n        this.scheme = scheme;\r\n      }\r\n    });\r\n  }\r\n\r\n  rowSelection() {\r\n    const {production} = this.props.dp;\r\n    return {\r\n      showCheckbox: true,\r\n      enableShiftSelect: true,\r\n      selectBy: {\r\n        keys: {\r\n          rowKey: 'row',\r\n          markKey: 'use',\r\n          values: production.find_rows({use: true}).map(r => r.row),\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {dp} = this.props;\r\n\r\n    return this.scheme ?\r\n      <TabularSection\r\n        _obj={dp}\r\n        _tabular=\"production\"\r\n        scheme={this.scheme}\r\n        rowSelection={this.rowSelection()}\r\n        denyAddDel\r\n        hideToolbar\r\n      />\r\n      :\r\n      <Typography key=\"err-nom\" color=\"error\">\r\n        {`Не найден элемент scheme_settings {obj: \"dp.buyers_order.production\", name: \"production.select_prod\"}`}\r\n      </Typography>;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default SelectProd;\r\n","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DataField from 'metadata-react/DataField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  group: {\r\n    alignItems: 'flex-end',\r\n    paddingBottom: theme.spacing(),\r\n  },\r\n  synonim: {\r\n    paddingBottom: theme.spacing(),\r\n    width: 180,\r\n  },\r\n  switch: {\r\n    width: 170,\r\n  }\r\n}));\r\n\r\nfunction PropFld({classes, checked, handleChange, dp, fld, title}) {\r\n  return <FormGroup row className={classes.group}>\r\n    <Typography className={classes.synonim}>{title}</Typography>\r\n    <FormControlLabel\r\n      className={classes.switch}\r\n      control={<Switch checked={checked} onChange={handleChange} name={fld} />}\r\n      label={checked ? 'Установить' : 'Не изменять'}\r\n    />\r\n    <DataField _obj={dp} _fld={fld} read_only={!checked} />\r\n  </FormGroup>;\r\n}\r\n\r\nexport default function MainProps({dp}) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useState({\r\n    sys: dp.use_sys,\r\n    furn: dp.use_furn,\r\n    inset: dp.use_inset,\r\n    clr: dp.use_clr,\r\n  });\r\n\r\n  const handleChange = ({target}) => {\r\n    setState({...state, [target.name]: target.checked});\r\n    dp[`use_${target.name}`] = target.checked;\r\n  };\r\n\r\n  return <FormGroup>\r\n    <PropFld classes={classes} checked={state.sys} handleChange={handleChange} dp={dp} fld=\"sys\" title=\"Система профилей:\"/>\r\n    <PropFld classes={classes} checked={state.clr} handleChange={handleChange} dp={dp} fld=\"clr\" title=\"Цвет:\"/>\r\n    <PropFld classes={classes} checked={state.furn} handleChange={handleChange} dp={dp} fld=\"furn\" title=\"Фурнитура:\"/>\r\n    <PropFld classes={classes} checked={state.inset} handleChange={handleChange} dp={dp} fld=\"inset\" title=\"Заполнения:\"/>\r\n  </FormGroup>;\r\n}\r\n","/**\r\n * Вариант оформления поля ввода\r\n *\r\n * @module PropField\r\n *\r\n * Created by Evgeniy Malyarov on 24.02.2020.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DataField from 'metadata-react/DataField';\r\nimport withStyles, {extClasses} from 'metadata-react/DataField/stylesPropertyGrid';\r\n\r\nfunction PropField({classes, ...props}) {\r\n  return <DataField extClasses={extClasses(classes)} fullWidth isTabular={false} {...props}/>;\r\n}\r\n\r\nPropField.propTypes = {\r\n  classes: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(PropField);\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PropField from './PropField';\r\n\r\nclass SubProps extends React.Component{\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    const {production, product_params} = props.dp;\r\n    const params = new Map();\r\n    const aparams = [];\r\n    production.forEach((row) => {\r\n      if(!row.use) {\r\n        return;\r\n      }\r\n      row.characteristic.params.find_rows(({hide: false}), ({param, value}) => {\r\n        if(!param.caption || (!param.show_calculated && param.is_calculated)) {\r\n          return;\r\n        }\r\n        if(!params.get(param)) {\r\n          params.set(param, new Set());\r\n        }\r\n        params.get(param).add(value);\r\n      });\r\n    });\r\n\r\n    for(const [param, value] of params) {\r\n      if(value.size === 1) {\r\n        aparams.push({param, value: Array.from(value)[0]});\r\n      }\r\n    }\r\n    aparams.sort((a, b) => {\r\n      if(a.sorting_field > b.sorting_field) {\r\n        return 1;\r\n      }\r\n      if(a.sorting_field < b.sorting_field) {\r\n        return -1;\r\n      }\r\n      if(a.name > b.name) {\r\n        return 1;\r\n      }\r\n      if(a.name < b.name) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    product_params.load(aparams);\r\n  }\r\n\r\n  render() {\r\n    const {product_params} = this.props.dp;\r\n    const {fields} = product_params._owner._metadata(product_params._name);\r\n    const res = [];\r\n    const grid = {selection: {}};\r\n    let notify;\r\n\r\n    product_params.forEach((prow) => {\r\n      const {param} = prow;\r\n      let links;\r\n      let hide = false;\r\n      try {\r\n        links = param.params_links({grid, obj: prow});\r\n      }\r\n      catch (e) {\r\n        links = [];\r\n      }\r\n\r\n      // если для параметра есть связи - сокрытие по связям\r\n      if(!hide){\r\n        if(links.length) {\r\n          hide = links.some((link) => link.hide);\r\n        }\r\n        else {\r\n          hide = prow.hide;\r\n        }\r\n      }\r\n\r\n      const _meta = Object.assign({}, fields.value);\r\n      _meta.synonym = param.caption || param.name;\r\n\r\n      const {types} = param.type;\r\n      let oselect = types.length === 1 && types[0] === 'cat.property_values';\r\n\r\n      // проверим вхождение значения в доступные и при необходимости изменим\r\n      if (links.length) {\r\n        const values = [];\r\n        if(param.linked_values(links, prow, values)) {\r\n          notify = true;\r\n        }\r\n        if(values.length) {\r\n          if(values.length < 50) {\r\n            oselect = true;\r\n          }\r\n          if(!_meta.choice_params) {\r\n            _meta.choice_params = [];\r\n          }\r\n          // дополняем отбор\r\n          _meta.choice_params.push({\r\n            name: 'ref',\r\n            path: {in: values.map((v) => v.value)}\r\n          });\r\n        }\r\n      }\r\n      if (prow.hide !== hide) {\r\n        prow.hide = hide;\r\n        notify = true;\r\n      }\r\n\r\n      if(hide) {\r\n        return;\r\n      }\r\n\r\n      res.push(<PropField\r\n        key={`prm-${prow.row}`}\r\n        _obj={prow}\r\n        _fld=\"value\"\r\n        _meta={_meta}\r\n        ctrl_type={oselect ? 'oselect' : void 0}\r\n      />);\r\n    });\r\n    return res;\r\n  }\r\n\r\n}\r\n\r\nexport default SubProps;\r\n","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport SelectProd from './SelectProd';\r\nimport MainProps from './MainProps';\r\nimport SubProps from './SubProps';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(),\r\n    marginBottom: theme.spacing(),\r\n  },\r\n  cont: {\r\n    minHeight: 320,\r\n    marginBottom: theme.spacing(),\r\n  }\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Выбор изделий', 'Основные свойства', 'Дополнительные свойства'];\r\n}\r\n\r\nfunction getStepContent(stepIndex, props) {\r\n  switch (stepIndex) {\r\n  case 0:\r\n    return <SelectProd {...props}/>;\r\n  case 1:\r\n    return <MainProps {...props}/>;\r\n  case 2:\r\n    return <SubProps {...props}/>;\r\n  default:\r\n    return 'Unknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function HorizontalStepper({setReady, ...props}) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setReady(activeStep === steps.length - 2);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    setReady(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        <div className={classes.cont}>\r\n          {getStepContent(activeStep, props)}\r\n        </div>\r\n        <div>\r\n          <Button\r\n            disabled={activeStep === 0}\r\n            onClick={handleBack}\r\n            className={classes.backButton}\r\n          >\r\n            Назад\r\n          </Button>\r\n          <Button\r\n            disabled={activeStep === steps.length - 1}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleNext}>\r\n            Далее\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Пересчет заказа с подменой систем и параметров\r\n *\r\n * @module ChangeRecalc\r\n *\r\n * Created by Evgeniy Malyarov on 05.05.2020.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from 'metadata-react/App/Dialog';\r\nimport Stepper from './Stepper';\r\n\r\nconst title = 'Пересчет с заменой параметров';\r\n\r\nclass ChangeRecalc extends React.Component {\r\n\r\n  constructor(props, context) {\r\n    const {ref, _mgr} = props.dialog;\r\n    super(props, context);\r\n    this.state = {ready: false};\r\n    this.obj = _mgr.get(ref);\r\n    const dp = this.dp = $p.dp.buyers_order.create();\r\n    dp.production.load(this.obj.production);\r\n    dp.production.forEach((row) => {\r\n      const {characteristic} = row;\r\n      row.use = characteristic.coordinates.count();\r\n      if(dp.sys.empty() && !characteristic.sys.empty()) {\r\n        dp.sys = characteristic.sys;\r\n      }\r\n      if(dp.clr.empty()) {\r\n        characteristic.coordinates.find_rows({elm_type: $p.enm.elm_types.Рама}, (row) => {\r\n          if(!row.clr.empty()) {\r\n            dp.clr = row.clr;\r\n            return false;\r\n          }\r\n        })\r\n      }\r\n      if(dp.furn.empty()) {\r\n        characteristic.constructions.forEach((row) => {\r\n          if(!row.furn.empty()) {\r\n            dp.furn = row.furn;\r\n            return false;\r\n          }\r\n        })\r\n      }\r\n      if(dp.inset.empty()) {\r\n        characteristic.glasses.find_rows({is_sandwich: false}, ({elm}) => {\r\n          const row = characteristic.coordinates.find({elm});\r\n          if(row) {\r\n            dp.inset = row.inset;\r\n            return false;\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  setReady = (ready) => {\r\n    this.setState({ready});\r\n  };\r\n\r\n  handleCalck = () => {\r\n    const {dialog: {ref, cmd, _mgr}} = this.props;\r\n    $p.ui.dialogs.alert({title, text: 'Не релизовано'});\r\n    this.handleCancel();\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.handlers.handleIfaceState({\r\n      component: 'DataObjPage',\r\n      name: 'dialog',\r\n      value: null,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {state: {ready}, dp, obj} = this;\r\n    return <Dialog\r\n      open\r\n      initFullScreen\r\n      large\r\n      title={title}\r\n      onClose={this.handleCancel}\r\n      actions={[\r\n        <Button\r\n          key=\"ok\"\r\n          disabled={!ready}\r\n          onClick={this.handleCalck}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >Выполнить</Button>,\r\n        <Button key=\"cancel\" onClick={this.handleCancel} color=\"primary\">Отмена</Button>\r\n      ]}\r\n    >\r\n      <Stepper setReady={this.setReady} dp={dp} obj={obj}/>\r\n    </Dialog>;\r\n  }\r\n}\r\n\r\nexport default ChangeRecalc;\r\n","import ChangeRecalc from './ChangeRecalc';\r\n\r\nexport default ChangeRecalc;\r\n","/**\n * Стилизация DataField под PropertyGrid\n *\n * @module stylesPropertyGrid\n *\n * Created by Evgeniy Malyarov on 19.02.2020.\n */\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = theme => ({\n  lshrink: {\n    transform: 'translate(0, 12px)'\n  },\n  lformControl: {\n    top: 0,\n    left: 0,\n    position: 'absolute',\n    transform: 'translate(0, 12px)'\n  },\n  iroot: {\n    marginLeft: '40%',\n    'label + &': {\n      marginTop: 0\n    }\n  },\n  control: {\n    minWidth: 300,\n    paddingRight: theme.spacing(),\n    paddingTop: 2,\n    borderBottom: '1px solid #e8e8e8'\n  },\n  checkbox: {\n    borderRadius: 'unset'\n  }\n});\n\nexport const extClasses = classes => ({\n  label: {\n    shrink: classes.lshrink,\n    formControl: classes.lformControl\n  },\n  input: {\n    root: classes.iroot\n  },\n  control: {\n    root: classes.control\n  },\n  checkbox: {\n    root: classes.checkbox\n  }\n});\nexport default withStyles(styles);"],"sourceRoot":""}