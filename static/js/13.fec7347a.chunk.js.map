{"version":3,"sources":["../node_modules/metadata-react/FrmReport/RepToolbar.js","../node_modules/metadata-react/FrmReport/RepTabularSection.js","../node_modules/metadata-react/FrmReport/Report.js","../node_modules/metadata-react/FrmReport/index.js"],"names":["RepToolbar","props","context","handleChange","handleSchemeChange","scheme","state","anchorEl","undefined","menuOpen","export_handlers","call","this","handleSave","handlePrint","handleClose","classes","_obj","_tabular","settings_open","ToolbarExt","React","createElement","Toolbar","disableGutters","className","toolbar","Button","size","onClick","disabled","standard_period","empty","IconButton","DateRange","_fld","_meta","synonym","Typography","color","flex","SchemeSettingsButtons","handleSettingsOpen","handleSettingsClose","show_variants","handleMenuOpen","title","MoreVertIcon","Menu","open","onClose","handleMenuClose","MenuItem","PrintIcon","handleExportCSV","CopyIcon","handleExportJSON","CloudDownloadIcon","handleExportXLS","FileDownloadIcon","Component","propTypes","withStyles","RepTabularSection","_props","getRows","i","rows","onRowExpandToggle","args","expanded","Object","assign","columnGroupName","row","isExpanded","shouldExpand","setState","onCellExpand","slice","rowKey","rowData","rowIndex","indexOf","subRows","expandArgs","children","updateSubRowDetails","treeDepth","splice","length","getSubRowDetails","rowItem","key","_columns","group","field","siblingIndex","numberSiblings","RowRenderer","formatted","renderBaseRow","conditional_appearance","find_rows","use","crow","check","style","JSON","parse","css","e","parentTreeDepth","forEach","sr","_metadata","tabular","count","_rows","_count","clear","dims","srows","rootRow","idx","_level","minHeight","hideHeader","ReactDataGrid","columns","enableCellSelect","rowGetter","rowsCount","rowHeight","headerRowHeight","rowRenderer","Report","calculate","then","_result","expandRoot","Promise","reject","Error","handleColumns","read_only","rx_columns","mode","fields","shouldComponentUpdate","_mgr","_meta2","_obj2","create","metadata","resolve","$p","cat","scheme_settings","get_scheme","class_name","autoexec","registerRep","RepParams","_manager","LoadingMessage","text","pheight","height","show_grid","ignoreTitle","Helmet","name","content","property","hideToolbar","SchemeSettingsTabs","width","tabParams","ref","el","MDNRComponent","PropTypes","object","isRequired","string","_acl","bool","func","withIface"],"mappings":"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","file":"static/js/13.fec7347a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport RunIcon from '@material-ui/icons/PlayArrow';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PrintIcon from '@material-ui/icons/Print';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport FileDownloadIcon from '@material-ui/icons/ArrowDropDownCircle';\nimport { export_handlers } from '../plugin';\nimport SchemeSettingsButtons from '../SchemeSettings/SchemeSettingsButtons';\nimport DateRange from '../SchemeSettings/DateRange';\nimport withStyles from '../Header/toolbar';\n\nclass RepToolbar extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = () => {\n      this.props.handleSchemeChange(this.props.scheme);\n    };\n\n    this.state = {\n      anchorEl: undefined,\n      menuOpen: false\n    };\n    export_handlers.call(this);\n  }\n\n  render() {\n    const {\n      props,\n      state,\n      handleChange\n    } = this;\n    const {\n      handleSave,\n      handleClose,\n      handlePrint,\n      _obj,\n      _tabular,\n      classes,\n      scheme,\n      settings_open,\n      ToolbarExt\n    } = props;\n    return /*#__PURE__*/React.createElement(Toolbar, {\n      disableGutters: true,\n      className: classes.toolbar\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleSave,\n      disabled: settings_open\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-play fa-fw\"\n    }), \" Сформировать\"), !scheme.standard_period.empty() && /*#__PURE__*/React.createElement(IconButton, {\n      disabled: true\n    }, \"|\"), !scheme.standard_period.empty() && /*#__PURE__*/React.createElement(DateRange, {\n      _obj: scheme,\n      _fld: 'date',\n      _meta: {\n        synonym: 'Период'\n      },\n      classes: classes,\n      handleChange: handleChange\n    }), ToolbarExt && /*#__PURE__*/React.createElement(ToolbarExt, null), /*#__PURE__*/React.createElement(Typography, {\n      color: \"inherit\",\n      className: classes.flex\n    }, \" \"), /*#__PURE__*/React.createElement(SchemeSettingsButtons, {\n      handleSettingsOpen: props.handleSettingsOpen,\n      handleSettingsClose: props.handleSettingsClose,\n      handleSchemeChange: props.handleSchemeChange,\n      settings_open: settings_open,\n      classes: classes,\n      scheme: scheme,\n      show_variants: true\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleMenuOpen,\n      title: \"Дополнительно\"\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, null)), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: state.anchorEl,\n      open: state.menuOpen,\n      onClose: this.handleMenuClose\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      disabled: true,\n      onClick: handlePrint\n    }, /*#__PURE__*/React.createElement(PrintIcon, null), \"  Печать\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleExportCSV\n    }, /*#__PURE__*/React.createElement(CopyIcon, null), \"  Копировать CSV\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleExportJSON\n    }, /*#__PURE__*/React.createElement(CloudDownloadIcon, null), \"  Копировать JSON\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleExportXLS\n    }, /*#__PURE__*/React.createElement(FileDownloadIcon, null), \"  Экспорт в XLS\")));\n  }\n\n}\n\nRepToolbar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  handleSave: PropTypes.func.isRequired,\n  // обработчик формирования отчета\n  handlePrint: PropTypes.func.isRequired,\n  // обработчик открытия диалога печати\n  handleClose: PropTypes.func.isRequired,\n  // команда закрытия формы\n  handleSettingsOpen: PropTypes.func.isRequired,\n  handleSettingsClose: PropTypes.func.isRequired,\n  handleSchemeChange: PropTypes.func.isRequired,\n  // обработчик при изменении настроек компоновки\n  _obj: PropTypes.object,\n  // объект данных - отчет DataProcessorObj\n  _tabular: PropTypes.string.isRequired,\n  // имя табчасти с данными\n  scheme: PropTypes.object.isRequired,\n  // значение настроек компоновки CatSchemeSettings\n  settings_open: PropTypes.bool,\n  // открыта панель настроек\n  ToolbarExt: PropTypes.func\n} : {};\n;\nexport default withStyles(RepToolbar);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDataGrid from 'react-data-grid';\nexport default class RepTabularSection extends Component {\n  constructor(_props, context) {\n    super(_props, context);\n\n    this.getRows = i => {\n      return this.state.rows[i];\n    };\n\n    this.onRowExpandToggle = args => {\n      const expanded = Object.assign({}, this.state.expanded);\n      expanded[args.columnGroupName] = Object.assign({}, expanded[args.columnGroupName]);\n      expanded[args.columnGroupName][args.row] = {\n        isExpanded: args.shouldExpand\n      };\n      this.setState({\n        expanded: expanded\n      });\n    };\n\n    this.onCellExpand = args => {\n      let rows = this.state.rows.slice(0);\n      let rowKey = args.rowData.row;\n      let rowIndex = rows.indexOf(args.rowData);\n      let subRows = args.expandArgs.children;\n      let expanded = Object.assign({}, this.state.expanded);\n\n      if (expanded && !expanded[rowKey]) {\n        expanded[rowKey] = true;\n        this.updateSubRowDetails(subRows, args.rowData.treeDepth);\n        rows.splice(rowIndex + 1, 0, ...subRows);\n      } else if (expanded[rowKey]) {\n        expanded[rowKey] = false;\n        rows.splice(rowIndex + 1, subRows.length);\n      }\n\n      this.setState({\n        expanded,\n        rows\n      });\n    };\n\n    this.getSubRowDetails = rowItem => {\n      const {\n        _columns\n      } = this.props;\n      const {\n        key\n      } = _columns[0];\n      let isExpanded = this.state.expanded[rowItem.row] ? this.state.expanded[rowItem.row] : false;\n      return {\n        group: rowItem.children && rowItem.children.length > 0,\n        expanded: isExpanded,\n        children: rowItem.children,\n        field: key,\n        treeDepth: rowItem.treeDepth || 0,\n        siblingIndex: rowItem.siblingIndex,\n        numberSiblings: rowItem.numberSiblings\n      };\n    };\n\n    this.RowRenderer = ({\n      renderBaseRow,\n      ...props\n    }) => {\n      let formatted;\n      const {\n        scheme\n      } = this.props;\n      scheme.conditional_appearance.find_rows({\n        use: true\n      }, crow => {\n        if (crow.check(props.row)) {\n          try {\n            formatted = /*#__PURE__*/React.createElement(\"div\", {\n              style: JSON.parse(crow.css)\n            }, renderBaseRow(props));\n          } catch (e) {}\n\n          return false;\n        }\n      });\n      return formatted || renderBaseRow(props);\n    };\n\n    this.updateSubRowDetails = (subRows, parentTreeDepth) => {\n      let treeDepth = parentTreeDepth || 0;\n      subRows.forEach((sr, i) => {\n        sr.treeDepth = treeDepth + 1;\n        sr.siblingIndex = i;\n        sr.numberSiblings = subRows.length;\n        sr.children && this.updateSubRowDetails(sr.children, sr.treeDepth);\n      });\n    };\n\n    const {\n      _obj,\n      _tabular,\n      _meta\n    } = _props;\n    const that = this;\n    this.state = {\n      _meta: _meta || _obj._metadata(_tabular),\n      rows: [],\n      expanded: {}\n    };\n  }\n\n  shouldComponentUpdate({\n    scheme\n  }) {\n    if (scheme !== this.props.scheme) {\n      // в случае непустого результата - чистим\n      const {\n        _obj,\n        _tabular\n      } = this.props;\n      const tabular = _obj[_tabular];\n\n      if (tabular && tabular.count()) {\n        if (tabular._rows) {\n          tabular._rows.length = tabular._rows._count = 0;\n        }\n\n        tabular.clear();\n      }\n\n      this.state.rows.length = 0;\n      this.state.expanded = {};\n    }\n\n    return true;\n  }\n\n  expandRoot() {\n    const {\n      _obj,\n      _tabular,\n      scheme\n    } = this.props;\n    const dims = scheme.dims();\n    const rows = _obj[_tabular]._rows || [];\n\n    if (rows.length && dims.length\n    /*&& !dims[0]*/\n    ) {\n        const srows = rows.slice(0);\n        const subRows = rows[0].children;\n        srows.splice(1, 0, ...subRows);\n        this.updateSubRowDetails(subRows, 1);\n        this.setState({\n          expanded: {\n            '0': true\n          },\n          rows: srows\n        });\n      } else {\n      this.setState({\n        expanded: {},\n        rows\n      });\n    }\n  }\n\n  expandAll(level = 0) {\n    const dims = this.props.scheme.dims();\n    const {\n      expanded,\n      rows\n    } = this.state;\n\n    if (rows.length && dims.length) {\n      const srows = rows.slice(0);\n      rows.slice(0).forEach((rootRow, idx) => {\n        if (rootRow._level || !rootRow.children || expanded[rootRow.row]) {\n          return;\n        }\n\n        const subRows = rootRow.children;\n        srows.splice(srows.indexOf(rootRow) + 1, 0, ...subRows);\n        this.updateSubRowDetails(subRows, 1);\n        expanded[rootRow.row] = true;\n      });\n      this.setState({\n        expanded,\n        rows: srows\n      });\n    }\n  }\n\n  render() {\n    const {\n      props,\n      state,\n      RowRenderer\n    } = this;\n    const {\n      _columns,\n      minHeight,\n      hideHeader\n    } = props; // rowRenderer={RowRenderer}\n    // onRowExpandToggle={onRowExpandToggle}\n    // rowGroupRenderer={RowGroupRenderer}\n\n    return /*#__PURE__*/React.createElement(ReactDataGrid, {\n      columns: _columns,\n      enableCellSelect: true,\n      rowGetter: this.getRows,\n      rowsCount: state.rows.length,\n      getSubRowDetails: this.getSubRowDetails,\n      onCellExpand: this.onCellExpand,\n      minHeight: minHeight || 220,\n      rowHeight: 33,\n      headerRowHeight: hideHeader ? 1 : 33,\n      rowRenderer: RowRenderer\n    });\n  }\n\n}\nRepTabularSection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  _obj: PropTypes.object.isRequired,\n  _tabular: PropTypes.string.isRequired,\n  _meta: PropTypes.object,\n  _columns: PropTypes.array.isRequired,\n  // колонки\n  handleRowChange: PropTypes.func\n} : {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MDNRComponent from '../common/MDNRComponent';\nimport LoadingMessage from '../DumbLoader/LoadingMessage';\nimport RepToolbar from './RepToolbar';\nimport RepTabularSection from './RepTabularSection';\nimport SchemeSettingsTabs from '../SchemeSettings/SchemeSettingsTabs';\nimport { Helmet } from 'react-helmet';\nimport { withIface } from 'metadata-redux';\n\nclass Report extends MDNRComponent {\n  constructor(_props, context) {\n    super(_props, context);\n\n    this.handleSave = () => {\n      const {\n        _obj,\n        scheme\n      } = this.state;\n\n      if (scheme && !scheme.empty()) {\n        if (_obj.scheme !== scheme) {\n          _obj.scheme = scheme;\n        }\n\n        return _obj.calculate().then(() => this._result.expandRoot());\n      } else {\n        return Promise.reject(new Error('Пустая схема компоновки'));\n      }\n    };\n\n    this.handlePrint = () => {};\n\n    this.handleClose = () => {};\n\n    this.handleSettingsOpen = () => {\n      this.setState({\n        settings_open: true\n      });\n    };\n\n    this.handleSettingsClose = () => {\n      this.setState({\n        settings_open: false\n      });\n    };\n\n    this.handleSchemeChange = scheme => {\n      const {\n        props,\n        state: {\n          _obj,\n          _meta\n        }\n      } = this;\n      const {\n        handleSchemeChange,\n        handleColumns,\n        read_only\n      } = props;\n\n      const _columns = scheme.rx_columns({\n        mode: 'ts',\n        fields: _meta.fields,\n        _obj,\n        read_only\n      });\n\n      handleColumns && handleColumns(_columns); // в этом методе\n\n      handleSchemeChange && handleSchemeChange(this, scheme); // обновляем state, shouldComponentUpdate берём из MDNRComponent\n\n      this.setState({\n        scheme,\n        _columns\n      }, () => this.shouldComponentUpdate(props));\n    };\n\n    const {\n      _mgr,\n      _meta: _meta2,\n      _obj: _obj2\n    } = _props;\n\n    const _tabular = _props._tabular || _mgr._tabular || 'data';\n\n    this.state = {\n      _obj: _obj2 || _mgr.create(),\n      _meta: _meta2 || _mgr.metadata(_tabular),\n      _tabular,\n      settings_open: false\n    };\n    (_props.scheme ? Promise.resolve(_props.scheme) : $p.cat.scheme_settings.get_scheme(_mgr.class_name + `.${_tabular}`)).then(this.handleSchemeChange).then(() => {\n      if (_props.autoexec) {\n        Promise.resolve().then(() => this.handleSave());\n      }\n    });\n    _props.registerRep && _props.registerRep(this);\n  }\n\n  get ltitle() {\n    const {\n      _mgr\n    } = this.props;\n    const {\n      scheme\n    } = this.state;\n    return _mgr.metadata().synonym + (scheme && scheme.name ? ` (${scheme.name})` : '');\n  }\n\n  render() {\n    const {\n      props,\n      state\n    } = this;\n    const {\n      _obj,\n      _columns,\n      _tabular,\n      scheme,\n      settings_open\n    } = state;\n    const {\n      RepParams\n    } = _obj._manager;\n\n    if (!scheme) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Чтение настроек компоновки...\"\n      });\n    } else if (!_obj) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Чтение объекта данных...\"\n      });\n    } else if (!_columns || !_columns.length) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Ошибка настроек компоновки...\"\n      });\n    }\n\n    const pheight = props.height || props.minHeight || 500;\n    const show_grid = !settings_open || pheight > 572;\n    return [!props.ignoreTitle && /*#__PURE__*/React.createElement(Helmet, {\n      key: \"helmet\",\n      title: props.title\n    }, /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Отчет\"\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      property: \"og:title\",\n      content: props.title\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      property: \"og:description\",\n      content: \"Отчет\"\n    })), !props.hideToolbar && /*#__PURE__*/React.createElement(RepToolbar, {\n      key: \"toolbar\",\n      _obj: _obj,\n      _tabular: _tabular,\n      _columns: _columns,\n      scheme: scheme,\n      settings_open: settings_open,\n      ToolbarExt: props.ToolbarExt,\n      handleSettingsOpen: this.handleSettingsOpen,\n      handleSettingsClose: this.handleSettingsClose,\n      handleSchemeChange: this.handleSchemeChange,\n      handleSave: this.handleSave,\n      handlePrint: this.handlePrint,\n      handleClose: this.handleClose\n    }), settings_open && /*#__PURE__*/React.createElement(SchemeSettingsTabs, {\n      key: \"tabs\",\n      height: show_grid ? 272 : pheight - 104,\n      width: props.width,\n      scheme: scheme,\n      tabParams: RepParams && /*#__PURE__*/React.createElement(RepParams, {\n        _obj: _obj,\n        scheme: scheme\n      }),\n      handleSchemeChange: this.handleSchemeChange\n    }), show_grid && /*#__PURE__*/React.createElement(RepTabularSection, {\n      key: \"tabular\",\n      ref: el => this._result = el,\n      _obj: _obj,\n      _tabular: _tabular,\n      _columns: _columns,\n      scheme: scheme,\n      minHeight: pheight - 52 - (settings_open ? 320 : 0),\n      hideHeader: props.hideHeader\n    })];\n  }\n\n}\n\nReport.propTypes = {\n  _mgr: PropTypes.object.isRequired,\n  // менеджер отчета\n  _obj: PropTypes.object,\n  // объект данных - отчет DataProcessorObj\n  _meta: PropTypes.object,\n  // метаданные можно переопределить\n  _tabular: PropTypes.string,\n  // имя табчасти, в которой живут данные отчета\n  _acl: PropTypes.string,\n  // права текущего пользователя\n  read_only: PropTypes.bool,\n  // морозит ячейки\n  autoexec: PropTypes.bool,\n  // запускает формирование отчета после монтирования компонента\n  ignoreTitle: PropTypes.bool,\n  // запрет установки заголовка приложения\n  handlePrint: PropTypes.func,\n  // внешний обработчик печати\n  handleSchemeChange: PropTypes.func,\n  // внешний обработчик при изменении настроек компоновки\n  handleColumns: PropTypes.func,\n  // внешний обработчик при расчете свойств колонок - чтобы переопределить editors и formatters\n  registerRep: PropTypes.func,\n  // регистрация ссылки на объект отчета в родительском компоненте\n  ToolbarExt: PropTypes.func\n};\nexport default withIface(Report);","import Report from './Report';\nexport default Report;"],"sourceRoot":""}