{"version":3,"sources":["components/CalcOrder/Additions/AdditionsGroup.js","components/CalcOrder/Additions/AdditionsGroups.js","components/CalcOrder/Additions/index.js","components/CalcOrder/Additions/Additions.js","components/CalcOrder/Additions/AdditionsItem.js","components/CalcOrder/Additions/connect.js","components/CalcOrder/Additions/styles.js","../node_modules/@material-ui/icons/Delete.js","components/CalcOrder/Additions/Frame.js"],"names":["AdditionsGroup","React","Component","constructor","props","super","onRowUpdated","updated","row","Object","prototype","hasOwnProperty","call","inset","$p","cat","clrs","selection_exclude_service","this","meta","fields","clr","clr_group","default_clr","onCellSelected","e","tabular","state","_columns","column","idx","key","mf","choice_params","type","is_ref","types","_mgr","property_values","selectedRow","rowGetter","rowIdx","utils","is_guid","tune","handleAdd","bind","handleRemove","count","render","Renderer","group","dp","classes","scheme","ref","presentation","style","flex","minHeight","ListItem","disableGutters","className","listitem","IconButton","title","onClick","disabled","ListItemText","primary","groupTitle","ListItemSecondaryAction","secondary","filter","production","reduce","sum","quantity","Collapse","in","timeout","entered","height","tref","el","onCellDeSelected","Divider","withStyles","AdditionsGroups","context","inset_change","obj","groups","_owner","get","insert_type","forceUpdate","schemas","Map","componentDidMount","fill_data","dialog","fill_schemas","scheme_settings","find_rows","user","buyers_order","on","componentWillUnmount","off","items","components","List","map","find_inset","cmp","set","CalcOrderAdditions","Frame","Content","AdditionsItem","TabularSection","_obj","_meta","_tabular","hideToolbar","ItemData","inserts","enm","inserts_types","additions_groups","create","calc_order","doc","by_ref","forEach","v","product_params","_data","_loading","ordn","blank","guid","characteristic","origin","empty","indexOf","elm","params","param","value","add","len","width","note","ProductionRow","docs","item","name","setState","value_change","Параметрик","i","setTimeout","_grid","selectCell","msg","show_msg","text","calc_order_row","del","onSelect","_inset","metadata","path","push","curr","next","priority","compose","connect","handleCalck","additions","process_add_product_list","then","sync_grid","wnd","elmnts","grids","handleCancel","handlers","handleIfaceState","component","theme","marginTop","spacing","fontWeight","paddingTop","paddingBottom","_interopRequireDefault","require","defineProperty","exports","default","_react","_default","createElement","d","ParametricFrame","handleOk","catch","err","message","handleErrClose","queryClose","actions","open","initFullScreen","large","onClose","color","ok","calck","toLowerCase"],"mappings":"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","file":"static/js/17.9296fd42.chunk.js","sourcesContent":["/**\r\n * ### Форма добавления услуг и комплектуюущих\r\n * список элементов группы - конкретные подоконники, отливы и т.д.\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\r\nimport RemoveIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport withStyles from './styles';\r\nimport {handleAdd, handleRemove} from './connect';\r\n\r\n\r\nclass AdditionsGroup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectedRow = null;\r\n    this.handleAdd = handleAdd.bind(this);\r\n    this.handleRemove = handleRemove.bind(this);\r\n    this.state = {count: props.count};\r\n  }\r\n\r\n\r\n  onRowUpdated = (updated, row) => {\r\n    if(updated && Object.prototype.hasOwnProperty.call(updated, 'inset')){\r\n      const {inset} = row;\r\n      $p.cat.clrs.selection_exclude_service(this.props.meta.fields.clr, inset);\r\n      // проверим доступность цветов, при необходимости обновим\r\n      inset.clr_group.default_clr(row);\r\n    }\r\n  }\r\n\r\n  onCellSelected = (e) => {\r\n    const {props: {meta}, tabular} = this;\r\n    if(tabular && tabular.state._columns){\r\n      const column = tabular.state._columns[e.idx];\r\n      const {key} = column;\r\n      const mf = meta.fields[key] || {\r\n        choice_params: [],\r\n        type: {\r\n          is_ref: true,\r\n          types: [\"cat.property_values\"],\r\n          _mgr: $p.cat.property_values,\r\n        }\r\n      };\r\n      this.selectedRow = tabular.rowGetter(e.rowIdx);\r\n      if(key === 'clr') {\r\n        $p.cat.clrs.selection_exclude_service(mf, this.selectedRow.inset);\r\n      }\r\n      else if($p.utils.is_guid(key)) {\r\n        this.selectedRow.tune(key, mf, column);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {props, state: {count}, handleAdd, handleRemove} = this;\r\n    const {Renderer, group, dp, classes, scheme, meta} = props;\r\n    const {ref, presentation} = group;\r\n    const style = {flex: 'initial'};\r\n    if(count) {\r\n      style.minHeight = 80 + (33 * (count - 1));\r\n      //style.maxHeight = 320;\r\n    }\r\n\r\n    function pieces() {\r\n      return scheme.filter(dp.production).reduce((sum, row) => sum + row.quantity, 0);\r\n    }\r\n\r\n    return <div style={style}>\r\n      <ListItem disableGutters className={classes.listitem}>\r\n        <IconButton title=\"Добавить строку\" onClick={handleAdd}><AddIcon/></IconButton>\r\n        <IconButton title=\"Удалить строку\" disabled={!count} onClick={handleRemove}><RemoveIcon/></IconButton>\r\n        <ListItemText classes={count ? {primary: classes.groupTitle} : {}} primary={presentation}/>\r\n        <ListItemSecondaryAction className={classes.secondary}>{count ? `${pieces()} шт` : ''}</ListItemSecondaryAction>\r\n      </ListItem>\r\n\r\n      <Collapse in={!!count} timeout={100} classes={{entered: classes.entered}}>\r\n        <div style={{height: (style.minHeight || 0) + 35}}>\r\n          <Renderer\r\n            tref={(el) => this.tabular = el}\r\n            minHeight={style.minHeight}\r\n            dp={dp}\r\n            group={group}\r\n            scheme={scheme}\r\n            meta={meta}\r\n            onRowUpdated={this.onRowUpdated}\r\n            onCellSelected={this.onCellSelected}\r\n            onCellDeSelected={() => this.selectedRow = null}\r\n          />\r\n        </div>\r\n      </Collapse>\r\n\r\n      {!count && <Divider key={`d${ref}`}/>}\r\n\r\n    </div>;\r\n  }\r\n\r\n}\r\n\r\nAdditionsGroup.propTypes = {\r\n  dp: PropTypes.object.isRequired,\r\n  group: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  scheme: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  Renderer: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(AdditionsGroup);\r\n\r\n","/**\r\n * ### Форма добавления услуг и комплектуюущих\r\n * список групп (подоконники, услуги и т.д.)\r\n * Здесь есть немного работы с данными - создаём экземпляр обработки, находим варианты настроек\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AdditionsGroup from './AdditionsGroup';\r\nimport {fill_data, fill_schemas, find_inset} from './connect';\r\n\r\n\r\nexport default class AdditionsGroups extends React.Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {schemas: null};\r\n    this.groups = new Map();\r\n  }\r\n\r\n  componentDidMount() {\r\n    fill_data.call(this, this.props.dialog.ref);\r\n    const {cat, dp} = $p;\r\n    fill_schemas.call(this, cat.scheme_settings.find_rows({obj: 'dp.buyers_order.production', user: ''}));\r\n    dp.buyers_order.on('update', this.inset_change);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $p.dp.buyers_order.off('update', this.inset_change);\r\n  }\r\n\r\n  inset_change = (obj, fields) => {\r\n    const {groups, dp} = this;\r\n    if(fields && fields.inset && obj._owner == dp.production) {\r\n      const group = groups.get(obj.inset.insert_type);\r\n      group && group.forceUpdate();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {items, components, dp} = this;\r\n    const {schemas} = this.state || {};\r\n\r\n    return <List>\r\n      {schemas ?\r\n        items.map(group => {\r\n          if(!group || !find_inset.call({}, group)) {\r\n            return null;\r\n          }\r\n          const cmp = components.get(group);\r\n          return <AdditionsGroup\r\n            key={`${group.ref}`}\r\n            ref={el => this.groups.set(group, el)}\r\n            dp={dp}\r\n            group={group}\r\n            {...cmp}\r\n            scheme={schemas.get(group)}\r\n          />;\r\n\r\n        })\r\n        :\r\n        <ListItem>\r\n          <ListItemText primary=\"Чтение настроек компоновки...\"/>\r\n        </ListItem>\r\n      }\r\n    </List>;\r\n  }\r\n}\r\n\r\nAdditionsGroups.propTypes = {\r\n  dialog: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\n","import CalcOrderAdditions from './Additions';\r\n\r\nexport default CalcOrderAdditions;\r\n","/**\r\n * ### Форма добавления услуг и комплектуюущих\r\n * каркас компонента - визуальная глупая часть\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport React from 'react';\r\nimport Frame from './Frame';\r\nimport AdditionsGroups from './AdditionsGroups';\r\n\r\nexport default function CalcOrderAdditions(props) {\r\n  return <Frame Content={AdditionsGroups} title=\"Аксессуары и услуги\" {...props} />;\r\n}\r\n","/**\r\n * ### Форма добавления услуг и комплектуюущих\r\n * Абстрактная строка допвставки - от неё наследуются строки подоконников, отливов и т.д.\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import {FormGroup} from '@material-ui/core/Form';\r\nimport TabularSection from 'metadata-react/TabularSection';\r\n\r\nexport default class AdditionsItem extends Component {\r\n\r\n  render() {\r\n    const {dp, meta, scheme, tref, onRowUpdated, onCellSelected, minHeight} = this.props;\r\n\r\n    return <TabularSection\r\n      ref={tref}\r\n      _obj={dp}\r\n      _meta={meta}\r\n      _tabular=\"production\"\r\n      scheme={scheme}\r\n      onRowUpdated={onRowUpdated}\r\n      onCellSelected={onCellSelected}\r\n      minHeight={minHeight}\r\n      hideToolbar\r\n    />;\r\n  }\r\n\r\n}\r\n\r\nAdditionsItem.propTypes = {\r\n  dp: PropTypes.object.isRequired,\r\n  scheme: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n  tref: PropTypes.func.isRequired,\r\n  onRowUpdated: PropTypes.func.isRequired,\r\n  onCellSelected: PropTypes.func.isRequired,\r\n  minHeight: PropTypes.number,\r\n};\r\n","/**\r\n * ### Форма добавления услуг и комплектуюущих\r\n * обработчики событий и модификаторы данных\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport {connect} from 'react-redux';\r\nimport withStyles from './styles';\r\nimport {compose} from 'redux';\r\n\r\nimport AdditionsItem from './AdditionsItem';\r\nconst {ItemData} = $p.cat.inserts;\r\n\r\n\r\n// заполняет компонент данными\r\nexport function fill_data(ref, items) {\r\n\r\n  if(!items) {\r\n    items = this.items = $p.enm.inserts_types.additions_groups;\r\n  }\r\n  const dp = this.dp = $p.dp.buyers_order.create();\r\n  dp.calc_order = $p.doc.calc_order.by_ref[ref];\r\n  const components = this.components = new Map();\r\n  items.forEach(v => components.set(v, new ItemData(v, AdditionsItem)));\r\n\r\n  const {production, product_params} = dp;\r\n\r\n  // фильтруем по пустой ведущей продукции\r\n  dp._data._loading = true;\r\n  dp.calc_order.production.find_rows({ordn: $p.utils.blank.guid}, (row) => {\r\n    const {characteristic} = row;\r\n    const {origin} = characteristic;\r\n    // фильтруем по типу вставки\r\n    if(!characteristic.empty() && origin && !origin.empty() && items.indexOf(origin.insert_type) != -1) {\r\n      const cmp = components.get(origin.insert_type);\r\n      // добавляем параметры\r\n      const elm = production.count() + 1;\r\n      characteristic.params.forEach(({param, value}) => {\r\n        product_params.add({elm, param, value});\r\n      });\r\n      // добавляем строку продукции\r\n      production.add({\r\n        characteristic,\r\n        inset: origin,\r\n        clr: characteristic.clr,\r\n        len: row.len,\r\n        height: row.width,\r\n        quantity: row.quantity,\r\n        note: row.note,\r\n      }, false, cmp.ProductionRow);\r\n      // счетчик строк данного типа\r\n      cmp.count++;\r\n    }\r\n  });\r\n  dp._data._loading = false;\r\n}\r\n\r\n// заполняет соответствие схем и типов вставок в state компонента\r\nexport function fill_schemas(docs = []) {\r\n  const schemas = new Map();\r\n  for (const doc of docs) {\r\n    for (const item of this.items) {\r\n      if(item && doc.name == item.name) {\r\n        schemas.set(item, doc);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  this.setState({schemas});\r\n}\r\n\r\nexport function handleAdd() {\r\n  const {tabular, props} = this;\r\n  const inset = find_inset.call(this, props.group);\r\n  if(inset && tabular) {\r\n    const {_data} = tabular.state._tabular._owner;\r\n    _data._loading = true;\r\n    const row = tabular.state._tabular.add({inset, quantity: 1}, false, props.ProductionRow);\r\n    _data._loading = false;\r\n    row.value_change('inset', 'force', row.inset);\r\n    this.setState({\r\n      count: this.state.count + 1,\r\n    });\r\n\r\n    //selectRow\r\n    if(inset.insert_type == $p.enm.inserts_types.Параметрик) {\r\n      for(let i = 0; i < row.row; i++) {\r\n        if(tabular.rowGetter(i) === row) {\r\n          setTimeout(() => tabular._grid.selectCell({rowIdx: i, idx: 0}, true));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    $p.msg.show_msg({\r\n      type: 'alert-info',\r\n      text: `Нет вставки подходящего типа (${props.group})`,\r\n      title: 'Новая строка'\r\n    });\r\n  }\r\n}\r\n\r\nexport function handleRemove() {\r\n  const {props, tabular, state, selectedRow} = this;\r\n  if(tabular && selectedRow){\r\n    const {calc_order_row} = selectedRow.characteristic;\r\n    selectedRow._owner.del(selectedRow);\r\n    this.selectedRow = null;\r\n    tabular.forceUpdate();\r\n    if(state.count) {\r\n      this.setState({\r\n        count: state.count - 1,\r\n      });\r\n    }\r\n    if(calc_order_row){\r\n      calc_order_row._owner.del(calc_order_row);\r\n    }\r\n    props.onSelect && props.onSelect(null);\r\n  }\r\n  else{\r\n    $p.msg.show_msg({\r\n      type: 'alert-info',\r\n      text: `Укажите строку для удаления (${props.group})`,\r\n      title: 'Удаление строки'\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// ищет первую, наиболее приоритетную вставку данного типа\r\nexport function find_inset(insert_type) {\r\n  if(!this._inset) {\r\n    const {choice_params} = $p.dp.buyers_order.metadata('production').fields.inset;\r\n    const filter = {insert_type};\r\n    choice_params && choice_params.forEach(({name, path}) => {\r\n      if(name === 'insert_type') {\r\n        return;\r\n      }\r\n      if(Object.prototype.hasOwnProperty.call(filter, name)) {\r\n        filter[name] = [filter[name]];\r\n        filter[name].push(path);\r\n      }\r\n      else {\r\n        filter[name] = path;\r\n      }\r\n    });\r\n    this._inset = $p.cat.inserts.find_rows(filter)\r\n      .reduce((curr, next) => curr && curr.priority >= next.priority ? curr : next, null);\r\n  }\r\n  return this._inset;\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    handleCalck() {\r\n      const {additions} = this;\r\n      const {dp} = additions;\r\n      return dp ?\r\n        dp.calc_order.process_add_product_list(dp)\r\n          .then(() => {\r\n            dp.calc_order.production.sync_grid(props.dialog.wnd.elmnts.grids.production);\r\n          })\r\n        :\r\n        additions.handleCalck();\r\n    },\r\n    handleCancel() {\r\n      props.handlers.handleIfaceState({\r\n        component: 'DataObjPage',\r\n        name: 'dialog',\r\n        value: null,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//   return {};\r\n// }\r\n\r\nexport default compose(\r\n  withStyles,\r\n  connect(mapStateToProps /*, mapDispatchToProps */),\r\n);\r\n","/**\r\n * ### Форма добавления услуг и комплектуюущих\r\n * стили оформления\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport {withStyles} from '@material-ui/styles';\r\n\r\nconst styles = theme => ({\r\n  entered: {\r\n    minHeight: 120,\r\n  },\r\n  secondary: {\r\n    marginTop: -theme.spacing(1.5),\r\n  },\r\n  groupTitle: {\r\n    fontWeight: 'bold',\r\n  },\r\n  listitem: {\r\n    paddingTop: theme.spacing(),\r\n    paddingBottom: theme.spacing(),\r\n  }\r\n});\r\n\r\nexport default withStyles(styles);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","/**\r\n * ### Диалог редактирования параметрических изделий\r\n *\r\n * @module Frame\r\n *\r\n * Created by Evgeniy Malyarov on 22.07.2019.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from 'metadata-react/App/Dialog';\r\n\r\nimport connect from './connect';\r\n\r\nclass ParametricFrame extends React.Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    const {handleCancel} = props;\r\n    this.handleCancel = handleCancel.bind(this);\r\n    this.state = {msg: null, queryClose: false};\r\n  }\r\n\r\n  handleOk = () => {\r\n    this.props.handleCalck.call(this)\r\n      .then(this.handleCancel)\r\n      .catch((err) => {\r\n        this.setState({msg: err.msg || err.message});\r\n      });\r\n  };\r\n\r\n  handleCalck = () => {\r\n    this.props.handleCalck.call(this)\r\n      .catch((err) => {\r\n        this.setState({msg: err.msg});\r\n      });\r\n  };\r\n\r\n  handleErrClose = () => {\r\n    this.setState({msg: null, queryClose: false});\r\n  };\r\n\r\n  queryClose = () => {\r\n    this.setState({queryClose: true});\r\n  };\r\n\r\n  render() {\r\n\r\n    const {handleCancel, handleErrClose, props: {dialog, title, actions, Content}, state: {msg, queryClose}} = this;\r\n\r\n    return <Dialog\r\n      open\r\n      initFullScreen\r\n      large\r\n      title={title}\r\n      onClose={this.queryClose}\r\n      actions={[\r\n        !actions && <Button key=\"ok\" onClick={this.handleOk} color=\"primary\">Рассчитать и закрыть</Button>,\r\n        actions && actions.ok && <Button key=\"ok\" onClick={this.handleOk} color=\"primary\">{actions.ok}</Button>,\r\n        !actions && <Button key=\"calck\" onClick={this.handleCalck} color=\"primary\">Рассчитать</Button>,\r\n        actions && actions.calck && <Button key=\"calck\" onClick={this.handleCalck} color=\"primary\">{actions.calck}</Button>,\r\n        <Button key=\"cancel\" onClick={handleCancel} color=\"primary\">Закрыть</Button>\r\n      ]}\r\n    >\r\n      <Content ref={(el) => this.additions = el} dialog={dialog}/>\r\n      {msg && <Dialog\r\n        open\r\n        title={msg.title || 'Ошибка при записи'}\r\n        onClose={handleErrClose}\r\n        actions={[\r\n          <Button key=\"ok\" onClick={handleErrClose} color=\"primary\">Ок</Button>,\r\n        ]}\r\n      >\r\n        {msg.obj && <div>{msg.obj.name}</div>}\r\n        {msg.text || msg}\r\n      </Dialog>}\r\n      {queryClose && <Dialog\r\n        open\r\n        title={`Закрыть ${title.toLowerCase()}?`}\r\n        onClose={handleErrClose}\r\n        actions={[\r\n          <Button key=\"ok\" onClick={handleCancel} color=\"primary\">Ок</Button>,\r\n          <Button key=\"cancel\" onClick={handleErrClose} color=\"primary\">Отмена</Button>\r\n        ]}\r\n      >\r\n        Внесённые изменения будут потеряны\r\n      </Dialog>}\r\n    </Dialog>;\r\n\r\n  }\r\n}\r\n\r\nParametricFrame.propTypes = {\r\n  Content: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  dialog: PropTypes.object.isRequired,\r\n  actions: PropTypes.object,\r\n  handlers: PropTypes.object.isRequired,\r\n  handleCalck: PropTypes.func.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(ParametricFrame);\r\n"],"sourceRoot":""}