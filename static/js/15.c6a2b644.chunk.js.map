{"version":3,"sources":["components/CalcOrder/CutEvaluation/Mode.js","components/CalcOrder/CutEvaluation/Additions.js","components/CalcOrder/CutEvaluation/index.js","components/CalcOrder/CutEvaluation/Parametric.js","components/CalcOrder/Additions/AdditionsItem.js","components/CalcOrder/Additions/connect.js","components/CalcOrder/Additions/styles.js","components/CalcOrder/Additions/Frame.js","components/WorkCentersTask/Progress.js","components/WorkCentersTask/styles.js","components/WorkCentersTask/Report1D.js"],"names":["SelectMode","mode","setMode","FormControl","component","FormLabel","RadioGroup","value","onChange","event","target","FormControlLabel","control","Radio","label","steps","Additions","React","Component","state","activeStep","evaluating","statuses","handleNext","this","setState","fillAndRun","then","catch","handleBack","handleReset","handleOnStep","status","nom","characteristic","cut_row","$p","utils","_clone","row","some","elm","push","Object","assign","componentDidMount","doc","work_centers_task","create","fill_by_orders","props","dialog","ref","componentWillUnmount","unload","handleCalck","calc_order","get","production","wnd","elmnts","grids","cuts","clear","record_kind","group_by","forEach","quantity","order_row","add","qty","len","width","s","refresh_row","Promise","resolve","demand","cutting","fill_cutting","clr_only","optimize","onStep","getStepContent","List","map","index","Progress","key","Report1D","_obj","hide_head","render","classes","className","root","Stepper","head","Step","StepLabel","instructions","Button","disabled","length","onClick","backButton","variant","color","withStyles","theme","padding","spacing","marginRight","marginTop","marginBottom","maxHeight","overflow","Parametric","Frame","Content","title","actions","ok","AdditionsItem","dp","meta","scheme","tref","onRowUpdated","onCellSelected","minHeight","TabularSection","_meta","_tabular","hideToolbar","ItemData","cat","inserts","fill_data","items","enm","inserts_types","additions_groups","buyers_order","by_ref","components","Map","v","set","product_params","_data","_loading","find_rows","ordn","blank","guid","origin","empty","indexOf","insert_type","cmp","count","params","param","inset","clr","height","note","ProductionRow","fill_schemas","docs","schemas","item","name","handleAdd","tabular","find_inset","call","group","_owner","value_change","Параметрик","i","rowGetter","setTimeout","_grid","selectCell","rowIdx","idx","msg","show_msg","type","text","handleRemove","selectedRow","calc_order_row","del","forceUpdate","onSelect","_inset","choice_params","metadata","fields","filter","path","prototype","hasOwnProperty","reduce","curr","next","priority","compose","connect","additions","process_add_product_list","sync_grid","handleCancel","handlers","handleIfaceState","entered","secondary","groupTitle","fontWeight","listitem","paddingTop","paddingBottom","ParametricFrame","constructor","context","super","handleOk","err","message","handleErrClose","queryClose","bind","open","initFullScreen","large","onClose","calck","el","obj","toLowerCase","stat","rows","workpieces","products_len","workpieces_len","scraps_percent","scraps_len","userData","usefulscrap","toFixed","sum","val","completed","progress","buffer","Math","random","bottom","primary","valueBuffer","noPadding","marginLeft","backgroundColor","palette","common","white","border","data","canvas","Head","orders","Set","planning","Typography","presentation","Table","cell","TableBody","TableRow","TableCell","recipient","colSpan","Array","from","number_doc","sort","join","NomTable","res","debit_credit_kinds","fragments","characteristics","crows","cuts_in","credit","cuts_out","debit","knifewidth","stick","Visualization","V1D","paper","Project","redraw","h","workpiece","w","y","round","Path","segments","strokeColor","strokeScaling","strokeWidth","closed","a","b","fillColor","Color","PointText","point","content","justification","fontSize","zoom_fit","view","update","bounds","activeLayer","strokeBounds","zoom","min","viewSize","center","propTypes","PropTypes","object","isRequired"],"mappings":"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","file":"static/js/15.c6a2b644.chunk.js","sourcesContent":["import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nexport default function SelectMode({mode, setMode}) {\r\n\r\n  const handleChange = event => {\r\n    setMode(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Материалы к оптимизации</FormLabel>\r\n      <RadioGroup value={mode} onChange={handleChange}>\r\n        <FormControlLabel value=\"all\" control={<Radio />} label=\"Все профили\" />\r\n        <FormControlLabel value=\"clrs\" control={<Radio />} label=\"Только цветные\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport SelectMode from './Mode';\r\nimport Progress from '../../WorkCentersTask/Progress';\r\nimport Report1D from '../../WorkCentersTask/Report1D';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  head: {\r\n    padding: theme.spacing(),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(),\r\n    marginBottom: theme.spacing(),\r\n    maxHeight: 'calc(100vh - 320px)',\r\n    overflow: 'auto',\r\n  },\r\n});\r\n\r\nconst steps = ['Выбор профилей', 'Раскрой', 'Анализ'];\r\n\r\n\r\nclass Additions extends React.Component {\r\n\r\n  state = {\r\n    activeStep: 0,\r\n    evaluating: true,\r\n    statuses: [],\r\n    mode: 'all',\r\n  };\r\n\r\n  componentDidMount() {\r\n    $p.doc.work_centers_task.create().then((doc) => {\r\n      this.doc = doc;\r\n      doc.fill_by_orders([this.props.dialog.ref])\r\n        .then(() => this.setState({evaluating: false}));\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.doc && this.doc.unload();\r\n  }\r\n\r\n  // закидываем обрезки в заказ\r\n  handleCalck() {\r\n    const {props: {dialog}, doc} = this;\r\n    const calc_order = $p.doc.calc_order.get(dialog.ref);\r\n    const {production} = dialog.wnd ? dialog.wnd.elmnts.grids : {};\r\n    doc.cuts.clear({record_kind: 'Расход'});\r\n    doc.cuts.group_by(['nom', 'characteristic'], ['quantity']);\r\n    doc.cuts.forEach((row) => {\r\n      if(!row.quantity) {\r\n        return;\r\n      }\r\n      const order_row = calc_order.production.add({\r\n        nom: row.nom,\r\n        characteristic: row.characteristic,\r\n        quantity: row.quantity,\r\n        qty: row.quantity,\r\n        len: 0,\r\n        width: 0,\r\n      });\r\n      order_row.s = 0;\r\n      if(production) {\r\n        production.refresh_row(order_row);\r\n      }\r\n    });\r\n    return Promise.resolve();\r\n  }\r\n\r\n  handleNext = () => {\r\n    const {activeStep} = this.state;\r\n    this.setState({activeStep: activeStep + 1});\r\n\r\n    if(activeStep === 0) {\r\n      this.fillAndRun()\r\n        .then(() => {\r\n\r\n        })\r\n        .catch(() => null)\r\n        .then(() => {\r\n          this.setState({evaluating: false}, this.handleNext);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleBack = () => {\r\n    const {activeStep} = this.state;\r\n    this.setState({activeStep: activeStep - 1});\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({activeStep: 0});\r\n  };\r\n\r\n  setMode = (mode) => {\r\n    this.setState({mode});\r\n  };\r\n\r\n  // вызывается из раскроя\r\n  handleOnStep = (status) => {\r\n    const {nom, characteristic} = status.cut_row;\r\n    const statuses = $p.utils._clone(this.state.statuses);\r\n    let row;\r\n    if(!statuses.some((elm) => {\r\n      if(elm.nom === nom && elm.characteristic === characteristic) {\r\n        row = elm;\r\n        return true;\r\n      }\r\n    })) {\r\n      row = {nom, characteristic};\r\n      statuses.push(row);\r\n    }\r\n    Object.assign(row, status);\r\n\r\n    this.setState({statuses});\r\n  };\r\n\r\n  fillAndRun() {\r\n    const {state: {mode}, doc} = this;\r\n    this.setState({evaluating: true, statuses: []});\r\n\r\n    // чистим документ\r\n    doc.demand.clear();\r\n    doc.cuts.clear();\r\n    doc.cutting.clear();\r\n\r\n    // заполняем\r\n    return doc.fill_cutting({clr_only: mode === 'clrs'})\r\n      .then(() => {\r\n        // подключаем визуализацию процесса раскроя и запускаем\r\n        return doc.optimize({onStep: this.handleOnStep});\r\n      });\r\n\r\n  }\r\n\r\n  getStepContent() {\r\n    const {state: {mode, activeStep, statuses}, setMode, doc} = this;\r\n    switch (activeStep) {\r\n    case 0:\r\n      return <SelectMode mode={mode} setMode={setMode}/>;\r\n    case 1:\r\n      return <List>\r\n        {statuses.map((status, index) => <Progress key={`p-${index}`} status={status}/>)}\r\n      </List>;\r\n    case 2:\r\n      return doc ? <Report1D _obj={doc} hide_head/> : 'Документ пуст';\r\n    default:\r\n      return 'Ошибка шага';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {props: {classes}, state: {activeStep, evaluating}, doc} = this;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Stepper activeStep={activeStep} classes={{root: classes.head}}>\r\n          {steps.map(label => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <div>\r\n          <div className={classes.instructions}>{this.getStepContent()}</div>\r\n          {!doc && <div>Подготовка данных</div>}\r\n          <div>\r\n            <Button\r\n              disabled={(activeStep === 0) || (activeStep === steps.length - 1) || evaluating}\r\n              onClick={this.handleBack}\r\n              className={classes.backButton}\r\n            >\r\n              Назад\r\n            </Button>\r\n            <Button\r\n              disabled={evaluating}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={activeStep === steps.length - 1 ? this.handleReset : this.handleNext}\r\n            >\r\n              {activeStep === steps.length - 1 ? 'Сброс' : 'Далее'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAdditions.propTypes = {\r\n  dialog: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Additions);\r\n","import Parametric from './Parametric';\r\n\r\nexport default Parametric;\r\n","/**\r\n * ### Форма редактирования параметрических изделий\r\n *\r\n * Created by Evgeniy Malyarov on 22.07.2019.\r\n */\r\n\r\nimport React from 'react';\r\nimport Frame from '../Additions/Frame';\r\nimport Additions from './Additions';\r\n\r\nexport default function Parametric(props) {\r\n  return <Frame\r\n    Content={Additions}\r\n    title=\"Раскрой\"\r\n    actions={{ok: 'Добавить обрезь в заказ'}}\r\n    {...props}\r\n  />;\r\n}\r\n","/**\r\n * ### Форма добавления услуг и комплектуюущих\r\n * Абстрактная строка допвставки - от неё наследуются строки подоконников, отливов и т.д.\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import {FormGroup} from '@material-ui/core/Form';\r\nimport TabularSection from 'metadata-react/TabularSection';\r\n\r\nexport default class AdditionsItem extends Component {\r\n\r\n  render() {\r\n    const {dp, meta, scheme, tref, onRowUpdated, onCellSelected, minHeight} = this.props;\r\n\r\n    return <TabularSection\r\n      ref={tref}\r\n      _obj={dp}\r\n      _meta={meta}\r\n      _tabular=\"production\"\r\n      scheme={scheme}\r\n      onRowUpdated={onRowUpdated}\r\n      onCellSelected={onCellSelected}\r\n      minHeight={minHeight}\r\n      hideToolbar\r\n    />;\r\n  }\r\n\r\n}\r\n\r\nAdditionsItem.propTypes = {\r\n  dp: PropTypes.object.isRequired,\r\n  scheme: PropTypes.object.isRequired,\r\n  meta: PropTypes.object.isRequired,\r\n  tref: PropTypes.func.isRequired,\r\n  onRowUpdated: PropTypes.func.isRequired,\r\n  onCellSelected: PropTypes.func.isRequired,\r\n  minHeight: PropTypes.number,\r\n};\r\n","/**\r\n * ### Форма добавления услуг и комплектуюущих\r\n * обработчики событий и модификаторы данных\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport {connect} from 'react-redux';\r\nimport withStyles from './styles';\r\nimport {compose} from 'redux';\r\n\r\nimport AdditionsItem from './AdditionsItem';\r\nconst {ItemData} = $p.cat.inserts;\r\n\r\n\r\n// заполняет компонент данными\r\nexport function fill_data(ref, items) {\r\n\r\n  if(!items) {\r\n    items = this.items = $p.enm.inserts_types.additions_groups;\r\n  }\r\n  const dp = this.dp = $p.dp.buyers_order.create();\r\n  dp.calc_order = $p.doc.calc_order.by_ref[ref];\r\n  const components = this.components = new Map();\r\n  items.forEach(v => components.set(v, new ItemData(v, AdditionsItem)));\r\n\r\n  const {production, product_params} = dp;\r\n\r\n  // фильтруем по пустой ведущей продукции\r\n  dp._data._loading = true;\r\n  dp.calc_order.production.find_rows({ordn: $p.utils.blank.guid}, (row) => {\r\n    const {characteristic} = row;\r\n    const {origin} = characteristic;\r\n    // фильтруем по типу вставки\r\n    if(!characteristic.empty() && origin && !origin.empty() && items.indexOf(origin.insert_type) != -1) {\r\n      const cmp = components.get(origin.insert_type);\r\n      // добавляем параметры\r\n      const elm = production.count() + 1;\r\n      characteristic.params.forEach(({param, value}) => {\r\n        product_params.add({elm, param, value});\r\n      });\r\n      // добавляем строку продукции\r\n      production.add({\r\n        characteristic,\r\n        inset: origin,\r\n        clr: characteristic.clr,\r\n        len: row.len,\r\n        height: row.width,\r\n        quantity: row.quantity,\r\n        note: row.note,\r\n      }, false, cmp.ProductionRow);\r\n      // счетчик строк данного типа\r\n      cmp.count++;\r\n    }\r\n  });\r\n  dp._data._loading = false;\r\n}\r\n\r\n// заполняет соответствие схем и типов вставок в state компонента\r\nexport function fill_schemas(docs = []) {\r\n  const schemas = new Map();\r\n  for (const doc of docs) {\r\n    for (const item of this.items) {\r\n      if(item && doc.name == item.name) {\r\n        schemas.set(item, doc);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  this.setState({schemas});\r\n}\r\n\r\nexport function handleAdd() {\r\n  const {tabular, props} = this;\r\n  const inset = find_inset.call(this, props.group);\r\n  if(inset && tabular) {\r\n    const {_data} = tabular.state._tabular._owner;\r\n    _data._loading = true;\r\n    const row = tabular.state._tabular.add({inset, quantity: 1}, false, props.ProductionRow);\r\n    _data._loading = false;\r\n    row.value_change('inset', 'force', row.inset);\r\n    this.setState({\r\n      count: this.state.count + 1,\r\n    });\r\n\r\n    //selectRow\r\n    if(inset.insert_type == $p.enm.inserts_types.Параметрик) {\r\n      for(let i = 0; i < row.row; i++) {\r\n        if(tabular.rowGetter(i) === row) {\r\n          setTimeout(() => tabular._grid.selectCell({rowIdx: i, idx: 0}, true));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    $p.msg.show_msg({\r\n      type: 'alert-info',\r\n      text: `Нет вставки подходящего типа (${props.group})`,\r\n      title: 'Новая строка'\r\n    });\r\n  }\r\n}\r\n\r\nexport function handleRemove() {\r\n  const {props, tabular, state, selectedRow} = this;\r\n  if(tabular && selectedRow){\r\n    const {calc_order_row} = selectedRow.characteristic;\r\n    selectedRow._owner.del(selectedRow);\r\n    this.selectedRow = null;\r\n    tabular.forceUpdate();\r\n    if(state.count) {\r\n      this.setState({\r\n        count: state.count - 1,\r\n      });\r\n    }\r\n    if(calc_order_row){\r\n      calc_order_row._owner.del(calc_order_row);\r\n    }\r\n    props.onSelect && props.onSelect(null);\r\n  }\r\n  else{\r\n    $p.msg.show_msg({\r\n      type: 'alert-info',\r\n      text: `Укажите строку для удаления (${props.group})`,\r\n      title: 'Удаление строки'\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// ищет первую, наиболее приоритетную вставку данного типа\r\nexport function find_inset(insert_type) {\r\n  if(!this._inset) {\r\n    const {choice_params} = $p.dp.buyers_order.metadata('production').fields.inset;\r\n    const filter = {insert_type};\r\n    choice_params && choice_params.forEach(({name, path}) => {\r\n      if(name === 'insert_type') {\r\n        return;\r\n      }\r\n      if(Object.prototype.hasOwnProperty.call(filter, name)) {\r\n        filter[name] = [filter[name]];\r\n        filter[name].push(path);\r\n      }\r\n      else {\r\n        filter[name] = path;\r\n      }\r\n    });\r\n    this._inset = $p.cat.inserts.find_rows(filter)\r\n      .reduce((curr, next) => curr && curr.priority >= next.priority ? curr : next, null);\r\n  }\r\n  return this._inset;\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    handleCalck() {\r\n      const {additions} = this;\r\n      const {dp} = additions;\r\n      return dp ?\r\n        dp.calc_order.process_add_product_list(dp)\r\n          .then(() => {\r\n            dp.calc_order.production.sync_grid(props.dialog.wnd.elmnts.grids.production);\r\n          })\r\n        :\r\n        additions.handleCalck();\r\n    },\r\n    handleCancel() {\r\n      props.handlers.handleIfaceState({\r\n        component: 'DataObjPage',\r\n        name: 'dialog',\r\n        value: null,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//   return {};\r\n// }\r\n\r\nexport default compose(\r\n  withStyles,\r\n  connect(mapStateToProps /*, mapDispatchToProps */),\r\n);\r\n","/**\r\n * ### Форма добавления услуг и комплектуюущих\r\n * стили оформления\r\n *\r\n * Created by Evgeniy Malyarov on 13.11.2017.\r\n */\r\n\r\nimport {withStyles} from '@material-ui/styles';\r\n\r\nconst styles = theme => ({\r\n  entered: {\r\n    minHeight: 120,\r\n  },\r\n  secondary: {\r\n    marginTop: -theme.spacing(1.5),\r\n  },\r\n  groupTitle: {\r\n    fontWeight: 'bold',\r\n  },\r\n  listitem: {\r\n    paddingTop: theme.spacing(),\r\n    paddingBottom: theme.spacing(),\r\n  }\r\n});\r\n\r\nexport default withStyles(styles);\r\n","/**\r\n * ### Диалог редактирования параметрических изделий\r\n *\r\n * @module Frame\r\n *\r\n * Created by Evgeniy Malyarov on 22.07.2019.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from 'metadata-react/App/Dialog';\r\n\r\nimport connect from './connect';\r\n\r\nclass ParametricFrame extends React.Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    const {handleCancel} = props;\r\n    this.handleCancel = handleCancel.bind(this);\r\n    this.state = {msg: null, queryClose: false};\r\n  }\r\n\r\n  handleOk = () => {\r\n    this.props.handleCalck.call(this)\r\n      .then(this.handleCancel)\r\n      .catch((err) => {\r\n        this.setState({msg: err.msg || err.message});\r\n      });\r\n  };\r\n\r\n  handleCalck = () => {\r\n    this.props.handleCalck.call(this)\r\n      .catch((err) => {\r\n        this.setState({msg: err.msg});\r\n      });\r\n  };\r\n\r\n  handleErrClose = () => {\r\n    this.setState({msg: null, queryClose: false});\r\n  };\r\n\r\n  queryClose = () => {\r\n    this.setState({queryClose: true});\r\n  };\r\n\r\n  render() {\r\n\r\n    const {handleCancel, handleErrClose, props: {dialog, title, actions, Content}, state: {msg, queryClose}} = this;\r\n\r\n    return <Dialog\r\n      open\r\n      initFullScreen\r\n      large\r\n      title={title}\r\n      onClose={this.queryClose}\r\n      actions={[\r\n        !actions && <Button key=\"ok\" onClick={this.handleOk} color=\"primary\">Рассчитать и закрыть</Button>,\r\n        actions && actions.ok && <Button key=\"ok\" onClick={this.handleOk} color=\"primary\">{actions.ok}</Button>,\r\n        !actions && <Button key=\"calck\" onClick={this.handleCalck} color=\"primary\">Рассчитать</Button>,\r\n        actions && actions.calck && <Button key=\"calck\" onClick={this.handleCalck} color=\"primary\">{actions.calck}</Button>,\r\n        <Button key=\"cancel\" onClick={handleCancel} color=\"primary\">Закрыть</Button>\r\n      ]}\r\n    >\r\n      <Content ref={(el) => this.additions = el} dialog={dialog}/>\r\n      {msg && <Dialog\r\n        open\r\n        title={msg.title || 'Ошибка при записи'}\r\n        onClose={handleErrClose}\r\n        actions={[\r\n          <Button key=\"ok\" onClick={handleErrClose} color=\"primary\">Ок</Button>,\r\n        ]}\r\n      >\r\n        {msg.obj && <div>{msg.obj.name}</div>}\r\n        {msg.text || msg}\r\n      </Dialog>}\r\n      {queryClose && <Dialog\r\n        open\r\n        title={`Закрыть ${title.toLowerCase()}?`}\r\n        onClose={handleErrClose}\r\n        actions={[\r\n          <Button key=\"ok\" onClick={handleCancel} color=\"primary\">Ок</Button>,\r\n          <Button key=\"cancel\" onClick={handleErrClose} color=\"primary\">Отмена</Button>\r\n        ]}\r\n      >\r\n        Внесённые изменения будут потеряны\r\n      </Dialog>}\r\n    </Dialog>;\r\n\r\n  }\r\n}\r\n\r\nParametricFrame.propTypes = {\r\n  Content: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  dialog: PropTypes.object.isRequired,\r\n  actions: PropTypes.object,\r\n  handlers: PropTypes.object.isRequired,\r\n  handleCalck: PropTypes.func.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(ParametricFrame);\r\n","/**\r\n *\r\n *\r\n * @module Progress\r\n *\r\n * Created by Evgeniy Malyarov on 27.09.2018.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport {withStyles} from '@material-ui/styles';\r\n\r\nconst styles = (theme) => ({\r\n  bottom: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  noPadding: {\r\n    padding: 0,\r\n  }\r\n});\r\n\r\nexport function stat(status) {\r\n  const {rows, workpieces, products_len, workpieces_len, scraps_percent, scraps_len, userData: {usefulscrap}} = status;\r\n  return `${(products_len / 1000).toFixed(1)}м, ${rows.length}шт, Заготовок: ${\r\n    (workpieces_len / 1000).toFixed(1)}м, ${workpieces.length}шт, Обрезь: ${\r\n    (scraps_len / 1000).toFixed(1)}м, ${workpieces.reduce((sum, val) => val > usefulscrap ? sum + 1 : sum, 0)}шт, Отходы: ${\r\n    ((workpieces_len - products_len - scraps_len) / 1000).toFixed(1)}м, ${scraps_percent.toFixed(1)}%`;\r\n}\r\n\r\nclass Progress extends Component {\r\n\r\n  render() {\r\n    const {status, classes} = this.props;\r\n    const completed = status.progress * 100;\r\n    const buffer = completed + Math.random() * 6;\r\n\r\n    return <div className={classes.bottom}>\r\n      <ListItemText primary={`${status.nom.name}${status.characteristic.empty() ? '' : ' ' + status.characteristic.name}`}/>\r\n      <LinearProgress color=\"secondary\" variant=\"buffer\" value={completed} valueBuffer={buffer}/>\r\n      <ListItemText secondary={stat(status)} className={classes.noPadding}/>\r\n    </div>;\r\n  }\r\n}\r\n\r\nProgress.propTypes = {\r\n  status: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Progress);\r\n","/**\r\n * ### Карточка покупателя\r\n * стили оформления\r\n *\r\n * Created by Evgeniy Malyarov on 14.03.2018.\r\n */\r\n\r\nimport {withStyles} from '@material-ui/styles';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '80vw',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media print': {\r\n      width: '190mm',\r\n      backgroundColor: theme.palette.common.white\r\n    },\r\n    '& td': {\r\n      padding: theme.spacing() / 2,\r\n      border: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n  },\r\n  row: {\r\n    height: 'inherit',\r\n  },\r\n  nom: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  data: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  canvas: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\nexport default withStyles(styles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n//import TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport withStyles from './styles';\r\nimport {stat} from './Progress';\r\n\r\n\r\nfunction Report1D({hide_head, ...props}) {\r\n  return <div className={props.classes.root}>\r\n    {!hide_head && <Head key=\"head\" {...props}/>}\r\n    <div className={props.classes.data} key=\"table\"><NomTable {...props}/></div>\r\n  </div>;\r\n}\r\n\r\n// рисует шапку\r\nfunction Head({_obj, classes}) {\r\n  const orders = new Set();\r\n  _obj.planning.forEach(({obj}) => orders.add(obj.calc_order));\r\n  return <div>\r\n    <Typography variant=\"headline\">{_obj.presentation}</Typography>\r\n      <Table classes={{cell: classes.cell}}>\r\n        <TableBody>\r\n          <TableRow className={classes.row}>\r\n            <TableCell><Typography variant=\"subtitle1\">Участок</Typography></TableCell>\r\n            <TableCell>{_obj.key.presentation}</TableCell>\r\n            <TableCell><Typography variant=\"subtitle1\">Получатель</Typography></TableCell>\r\n            <TableCell>{_obj.recipient.presentation}</TableCell>\r\n          </TableRow>\r\n          <TableRow className={classes.row}>\r\n            <TableCell><Typography variant=\"subtitle1\">Заказы</Typography></TableCell>\r\n            <TableCell colSpan={3}>{Array.from(orders).map((v) => v.number_doc).sort().join(', ')}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n  </div>;\r\n}\r\n\r\n// рисует таблицу по номенклатуре\r\nfunction NomTable({_obj, classes}) {\r\n  const res = [];\r\n  const {debit_credit_kinds} = $p.enm;\r\n\r\n  // бежим по свёрнутой табчасти раскроя\r\n  const fragments = _obj.fragments();\r\n  fragments.forEach((characteristics, nom) => {\r\n    for(const [characteristic] of characteristics) {\r\n      const crows = _obj.cutting.find_rows({nom, characteristic});\r\n      const cuts_in = _obj.cuts.find_rows({record_kind: debit_credit_kinds.credit, nom, characteristic});\r\n      const cuts_out = _obj.cuts.find_rows({record_kind: debit_credit_kinds.debit, nom, characteristic});\r\n\r\n      const products_len = crows.reduce((sum, row) => sum + row.len, 0);\r\n      const workpieces_len = cuts_in.reduce((sum, row) => sum + row.len, 0);\r\n      const scraps_len = cuts_out.reduce((sum, row) => sum + row.len, 0);\r\n      const knifewidth = nom.knifewidth || 7;\r\n      const workpieces = cuts_in.map(({len, stick}) => {\r\n        crows.forEach((row) => {\r\n          if(stick === row.stick) {\r\n            len -= (row.len + knifewidth);\r\n          }\r\n        });\r\n        return len > 0 ? len : 0;\r\n      });\r\n      const scraps_percent = (workpieces_len - products_len - scraps_len - crows.length * knifewidth) * 100 / workpieces_len;\r\n\r\n      const status = {\r\n        rows: crows,\r\n        cuts_in,\r\n        workpieces,\r\n        products_len,\r\n        workpieces_len,\r\n        scraps_len,\r\n        scraps_percent: scraps_percent > 0 ? scraps_percent : 0,\r\n        userData: {usefulscrap: 600, knifewidth}\r\n      };\r\n\r\n      res.push(<div key={`${nom.ref}-${characteristic.ref}`} className={classes.nom}>\r\n        <Typography variant=\"h6\">{nom.name + (characteristic.empty() ? '' : ` ${characteristic.name}`)}</Typography>\r\n        <Typography variant=\"subtitle1\">{stat(status)}</Typography>\r\n        <Visualization classes={classes} status={status}/>\r\n      </div>);\r\n    }\r\n  });\r\n  return res;\r\n}\r\n\r\nclass V1D extends paper.Project {\r\n\r\n  redraw({userData, cuts_in, rows}) {\r\n\r\n    this.clear();\r\n\r\n    let x=0, h=88;\r\n\r\n    for (let i = 0; i < cuts_in.length; i++) {\r\n\r\n      const workpiece = cuts_in[i];\r\n      const w = workpiece.len;\r\n      const y = Math.round(h * 1.3) * i;\r\n\r\n      new paper.Path({\r\n        segments: [[x, y], [x + w, y], [x + w, y + h], [x, y + h]],\r\n        strokeColor: 'grey',\r\n        strokeScaling: false,\r\n        strokeWidth: 1,\r\n        closed: true\r\n      });\r\n\r\n      const res = [];\r\n      rows.forEach(({stick, len}) => {\r\n        if(stick === workpiece.stick){\r\n          res.push(len);\r\n        }\r\n      });\r\n      res.sort((a, b) => b - a);\r\n      res.reduce((sum, curr) => {\r\n        new paper.Path({\r\n          segments: [[x + sum + h / 2, y + 4], [x + sum + curr - h / 2, y + 4], [x + sum + curr, y + h - 4], [x + sum, y + h - 4]],\r\n          fillColor: new paper.Color(Math.random() * 0.1 + 0.7, Math.random() * 0.2 + 0.8, Math.random() * 0.1 + 0.88),\r\n          closed: true\r\n        });\r\n        new paper.PointText({\r\n          point: [x + sum + curr / 2, y + 24 + h / 2],\r\n          content: curr,\r\n          fillColor: 'black',\r\n          justification: 'center',\r\n          fontSize: 72\r\n        });\r\n        return sum + curr + userData.knifewidth;\r\n      }, 0);\r\n\r\n    }\r\n\r\n    this.zoom_fit();\r\n    this.view.update();\r\n  }\r\n\r\n  zoom_fit () {\r\n\r\n    var bounds = this.activeLayer && this.activeLayer.strokeBounds;\r\n\r\n    if(bounds && bounds.height && bounds.width){\r\n      this.view.zoom = Math.min((this.view.viewSize.height - 8) / bounds.height, (this.view.viewSize.width - 8) / bounds.width);\r\n      this.view.center = bounds.center;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// рисует результат раскроя\r\nfunction Visualization({status, classes}) {\r\n  return <canvas className={classes.canvas} ref={(canvas) => {\r\n    if(canvas) {\r\n      canvas.height = status.cuts_in.length * 27 * canvas.width / 1530;\r\n      const scheme = new V1D(canvas);\r\n      scheme.redraw(status);\r\n    }\r\n  }}/>;\r\n}\r\n\r\nReport1D.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  _obj: PropTypes.object.isRequired,\r\n  hide_head: PropTypes.bool,\r\n};\r\n\r\nNomTable.propTypes = {\r\n  _obj: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nHead.propTypes = {\r\n  _obj: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nVisualization.propTypes = {\r\n  status: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default withStyles(Report1D);\r\n"],"sourceRoot":""}