{"version":3,"sources":["../windowbuilder-addictions/genetic-cutting/src/index.js","../windowbuilder-addictions/genetic-cutting/src/genetic.js","../windowbuilder-addictions/genetic-cutting/src/Engine1D.js"],"names":["Genetic","require","Engine1D","module","exports","constructor","userData","this","engine","genetic","create","optimize","Optimize","Minimize","select1","Select1","Tournament2","select2","Select2","prop","evolve","config","Serialization","stringify","obj","JSON","key","value","Function","toString","RegExp","from","name","join","parse","str","lastIndexOf","eval","slice","indexOf","akey","split","substr","Clone","Maximize","a","b","pop","n","length","Math","floor","random","fitness","entity","Tournament3","c","best","Fittest","Random","RandomLinearRank","internalGenState","min","Sequential","call","FittestRandom","seed","mutate","crossover","generation","notification","configuration","size","mutation","iterations","fittestAlwaysSurvives","maxResults","webWorkers","skip","entities","usingWebWorker","start","message","parents","children","self","mutateOrNot","data","push","i","map","sort","mean","reduce","stdev","sqrt","stats","maximum","minimum","r","isFinished","sendNotification","newPop","response","postMessage","prototype","k","addslashes","replace","Blob","Worker","window","URL","createObjectURL","blobScript","blob","worker","onmessage","e","terminate","onerror","alert","lineno","filename","Int16Array","fill","Error","len","products","decision","ind","i2","j","mother","father","tmp_len","ca","son","daughter","tmp","res","workpiece_index","scrap_len","min_len","workpieces","Array","scraps","Infinity","some","val","index","knifewidth","overmeasure","wrongsnipmin","wrongsnipmax","sticklength","workpieces_len","products_len","scraps_len","forEach","usefulscrap","scraps_percent","every"],"mappings":"qGAQA,MAAMA,EAAUC,EAAQ,KAClBC,EAAYD,EAAQ,KAsB1BE,EAAOC,QApBP,MACEC,YAAYC,GAEVC,KAAKC,OAAS,IAAIN,EAElBK,KAAKE,QAAUT,EAAQU,SACvBH,KAAKE,QAAQE,SAAWX,EAAQY,SAASC,SACzCN,KAAKE,QAAQK,QAAUd,EAAQe,QAAQC,YACvCT,KAAKE,QAAQQ,QAAUjB,EAAQkB,QAAQF,YAEvC,IAAI,MAAMG,IAAQ,CAAC,OAAQ,SAAU,YAAa,UAAW,cAC3DZ,KAAKE,QAAQU,GAAQZ,KAAKC,OAAOW,GAIrCC,OAAOC,EAAQf,GACb,OAAOC,KAAKC,OAAOY,OAAOb,KAAKE,QAASY,EAAQf,M,iDC1BpD,IAAIN,QAAUA,SAAY,WAEzB,aAGC,IAAIsB,cAAgB,CAClBC,UAAW,SAAUC,GACnB,OAAOC,KAAKF,UAAUC,GAAK,SAAUE,EAAKC,GACxC,OAAGA,aAAiBC,UAA4B,mBAATD,EAA4B,YAAcA,EAAME,WACpFF,aAAiBG,OAAe,aAAeH,EAC/B,iBAATA,GAAsD,mBAA1BA,EAAMtB,YAAY0B,KAC/C,KAAOJ,EAAMtB,YAAY2B,KAAO,MAAQL,EAAMM,OAEhDN,MAGXO,MAAO,SAAUC,KACf,OAAOV,KAAKS,MAAMC,KAAK,SAAUT,IAAKC,OACpC,GAAmB,iBAATA,MAAmB,OAAOA,MACpC,GAAyC,IAAtCA,MAAMS,YAAY,YAAa,GAAU,OAAOC,KAAK,IAAMV,MAAMW,MAAM,GAAK,KAC/E,GAA0C,IAAvCX,MAAMS,YAAY,aAAc,GAAU,OAAOC,KAAK,IAAMV,MAAMW,MAAM,IAAM,KACjF,IAAiC,GAA9BX,MAAMY,QAAQ,YAAmB,CAClC,IAAIC,KAAOb,MAAMc,MAAM,OACvB,OAAOJ,KAAKG,KAAK,GAAGE,OAAO,GAAK,UAAYF,KAAK,GAAK,MAExD,OAAOb,WAKTgB,MAAQ,SAAUnB,GACpB,OAAU,MAAPA,GAA6B,iBAAPA,EAChBA,EAEyB,mBAAxBA,EAAInB,YAAY0B,KACjBP,EAAInB,YAAY0B,KAAKP,GAEvBC,KAAKS,MAAMT,KAAKF,UAAUC,KAG/BZ,SAAW,CACfgC,SAAU,SAAUC,EAAGC,GAAK,OAAOD,GAAKC,GACtCjC,SAAU,SAAUgC,EAAGC,GAAK,OAAOD,EAAIC,IAGtC/B,QAAU,CACbC,YAAa,SAAS+B,GACrB,IAAIC,EAAID,EAAIE,OACRJ,EAAIE,EAAIG,KAAKC,MAAMD,KAAKE,SAASJ,IACjCF,EAAIC,EAAIG,KAAKC,MAAMD,KAAKE,SAASJ,IACrC,OAAOzC,KAAKI,SAASkC,EAAEQ,QAASP,EAAEO,SAAWR,EAAES,OAASR,EAAEQ,QAEzDC,YAAa,SAASR,GACvB,IAAIC,EAAID,EAAIE,OACRJ,EAAIE,EAAIG,KAAKC,MAAMD,KAAKE,SAASJ,IACjCF,EAAIC,EAAIG,KAAKC,MAAMD,KAAKE,SAASJ,IACjCQ,EAAIT,EAAIG,KAAKC,MAAMD,KAAKE,SAASJ,IACjCS,EAAOlD,KAAKI,SAASkC,EAAEQ,QAASP,EAAEO,SAAWR,EAAIC,EAErD,OADAW,EAAOlD,KAAKI,SAAS8C,EAAKJ,QAASG,EAAEH,SAAWI,EAAOD,GAC3CF,QAEXI,QAAS,SAAUX,GACpB,OAAOA,EAAI,GAAGO,QAEbK,OAAQ,SAAUZ,GACnB,OAAOA,EAAIG,KAAKC,MAAMD,KAAKE,SAASL,EAAIE,SAASK,QAEhDM,iBAAkB,SAAUb,GAE7B,OADAxC,KAAKsD,iBAAL,IAA+BtD,KAAKsD,iBAAL,KAA8B,EACtDd,EAAIG,KAAKC,MAAMD,KAAKE,SAASF,KAAKY,IAAIf,EAAIE,OAAQ1C,KAAKsD,iBAAL,SAAmCP,QAE3FS,WAAY,SAAUhB,GAEvB,OADAxC,KAAKsD,iBAAL,IAA+BtD,KAAKsD,iBAAL,KAA8B,EACtDd,EAAKxC,KAAKsD,iBAAL,MAAgCd,EAAIE,QAAQK,SAItDpC,QAAU,CACbF,YAAa,SAAS+B,GACrB,MAAO,CAAChC,QAAQC,YAAYgD,KAAKzD,KAAMwC,GAAMhC,QAAQC,YAAYgD,KAAKzD,KAAMwC,KAE3EQ,YAAa,SAASR,GACvB,MAAO,CAAChC,QAAQwC,YAAYS,KAAKzD,KAAMwC,GAAMhC,QAAQwC,YAAYS,KAAKzD,KAAMwC,KAE3EY,OAAQ,SAAUZ,GACnB,MAAO,CAAChC,QAAQ4C,OAAOK,KAAKzD,KAAMwC,GAAMhC,QAAQ4C,OAAOK,KAAKzD,KAAMwC,KAEjEa,iBAAkB,SAAUb,GAC7B,MAAO,CAAChC,QAAQ6C,iBAAiBI,KAAKzD,KAAMwC,GAAMhC,QAAQ6C,iBAAiBI,KAAKzD,KAAMwC,KAErFgB,WAAY,SAAUhB,GACvB,MAAO,CAAChC,QAAQgD,WAAWC,KAAKzD,KAAMwC,GAAMhC,QAAQgD,WAAWC,KAAKzD,KAAMwC,KAEzEkB,cAAe,SAAUlB,GAC1B,MAAO,CAAChC,QAAQ2C,QAAQM,KAAKzD,KAAMwC,GAAMhC,QAAQ4C,OAAOK,KAAKzD,KAAMwC,MAIrE,SAAS/C,UAGRO,KAAK8C,QAAU,KACf9C,KAAK2D,KAAO,KACZ3D,KAAK4D,OAAS,KACd5D,KAAK6D,UAAY,KACjB7D,KAAKO,QAAU,KACfP,KAAKU,QAAU,KACfV,KAAKI,SAAW,KAChBJ,KAAK8D,WAAa,KAClB9D,KAAK+D,aAAe,KAEpB/D,KAAKgE,cAAgB,CACpBC,KAAM,IACHJ,UAAW,GACXK,SAAU,GACVrB,OAAQ,GACRsB,WAAY,IACZC,uBAAuB,EACvBC,WAAY,IACZC,YAAY,EACZC,KAAM,GAGVvE,KAAKD,SAAW,GAChBC,KAAKsD,iBAAmB,GAExBtD,KAAKwE,SAAW,GAEhBxE,KAAKyE,gBAAiB,EAEtBzE,KAAK0E,MAAQ,SAASC,GAErB,IAAIC,EAASC,EACTC,EAAO9E,KAEX,SAAS+E,EAAYhC,GAEpB,OAAOJ,KAAKE,UAAYiC,EAAKd,cAAcE,UAAYY,EAAKlB,OAASkB,EAAKlB,OAAOxB,MAAMW,IAAWA,EAQnG,IAJG4B,GAAWA,EAAQK,OAErBhF,KAAKwE,SAAWzD,cAAcY,MAAMgD,EAAQK,MAAMR,UAE5CxE,KAAKwE,SAAS9B,OAAS1C,KAAKgE,cAAcC,MAChDjE,KAAKwE,SAASS,KAAKjF,KAAK2D,QAGzB,IAAK,IAAIuB,EAAE,EAAGA,EAAElF,KAAKgE,cAAcG,aAAce,EAAG,CAEnDlF,KAAKsD,iBAAmB,GAGxB,IAAId,EAAMxC,KAAKwE,SACbW,KAAI,SAAUpC,GACd,MAAO,CAAC,QAAW+B,EAAKhC,QAAQC,GAAS,OAAUA,MAEnDqC,MAAK,SAAU9C,EAAGC,GAClB,OAAOuC,EAAK1E,SAASkC,EAAEQ,QAASP,EAAEO,UAAY,EAAI,KAIhDuC,EAAO7C,EAAI8C,QAAO,SAAUhD,EAAGC,GAAK,OAAOD,EAAIC,EAAEO,UAAY,GAAGN,EAAIE,OACpE6C,EAAQ5C,KAAK6C,KAAKhD,EACpB2C,KAAI,SAAU7C,GAAK,OAAQA,EAAEQ,QAAUuC,IAAS/C,EAAEQ,QAAUuC,MAC5DC,QAAO,SAAUhD,EAAGC,GAAK,OAAOD,EAAEC,IAAM,GAAGC,EAAIE,QAE7C+C,EAAQ,CACXC,QAASlD,EAAI,GAAGM,QACX6C,QAASnD,EAAIA,EAAIE,OAAO,GAAGI,QAC3BuC,KAAMA,EACNE,MAAOA,GAGTK,GAAI5F,KAAK8D,YAAa9D,KAAK8D,WAAWtB,EAAK0C,EAAGO,GAC9CI,EAA0B,oBAALD,IAAqBA,GAAOV,GAAKlF,KAAKgE,cAAcG,WAAW,EASxF,GANCnE,KAAK+D,eACD8B,GAA4C,GAA9B7F,KAAKgE,cAAL,MAAmCkB,EAAElF,KAAKgE,cAAL,MAA8B,IAErFhE,KAAK8F,iBAAiBtD,EAAIT,MAAM,EAAG/B,KAAKqE,YAAaa,EAAGO,EAAOI,GAG5DA,EACH,MAGD,IAAIE,EAAS,GAcb,IAZI/F,KAAKgE,cAAcI,wBACtB2B,EAAOd,KAAK7C,MAAMI,EAAI,GAAGO,SACzBgD,EAAOd,KAAK7C,MAAMI,EAAI,GAAGO,SACrB/C,KAAK6D,YACRgB,EAAW7E,KAAK6D,UAAUkC,EAAO,GAAI/F,KAAKO,QAAQiC,IAClDuD,EAAOd,KAAKJ,EAAS,GAAIA,EAAS,IAClCA,EAAW7E,KAAK6D,UAAUkC,EAAO,GAAI/F,KAAKO,QAAQiC,IAClDuD,EAAOd,KAAKJ,EAAS,GAAIA,EAAS,KAEnCkB,EAAOd,KAAKjF,KAAK4D,OAAOxB,MAAM2D,EAAO,OAG/BA,EAAOrD,OAASoC,EAAKd,cAAcC,MAEtCtB,KAAKE,UAAY7C,KAAKgE,cAAcnB,OACtCkD,EAAOd,KAAKjF,KAAK2D,QAGjB3D,KAAK6D,WACFlB,KAAKE,UAAY7C,KAAKgE,cAAcH,WACpCkC,EAAOrD,OAAO,EAAIoC,EAAKd,cAAcC,MAExCW,EAAU5E,KAAKU,QAAQ8B,GACvBqC,EAAW7E,KAAK6D,UAAUe,EAAQ,GAAIA,EAAQ,IAAIO,IAAIJ,GACtDgB,EAAOd,KAAKJ,EAAS,GAAIA,EAAS,KAElCkB,EAAOd,KAAKF,EAAYD,EAAKvE,QAAQiC,KAIvCxC,KAAKwE,SAAWuB,IAIlB/F,KAAK8F,iBAAmB,SAAStD,EAAKsB,EAAY2B,EAAOI,GACxD,IAAIG,EAAW,CACdxD,IAAKA,EAAI2C,IAAIpE,cAAcC,WACvB8C,WAAYA,EACZ2B,MAAOA,EACPI,WAAYA,GAGX7F,KAAKyE,eACNwB,YAAYD,GAIZlB,KAAKf,aAAaiC,EAASxD,IAAI2C,IAAIpE,cAAcY,OAAQqE,EAASlC,WAAYkC,EAASP,MAAOO,EAASH,aAqE9G,OA/DApG,QAAQyG,UAAUrF,OAAS,SAASC,OAAQf,UAE3C,IAAIoG,EACJ,IAAKA,KAAKrF,OACTd,KAAKgE,cAAcmC,GAAKrF,OAAOqF,GAGhC,IAAKA,KAAKpG,SACTC,KAAKD,SAASoG,GAAKpG,SAASoG,GAU7B,SAASC,WAAWxE,GACnB,OAAOA,EAAIyE,QAAQ,UAAW,QAAQA,QAAQ,UAAW,OAP1DrG,KAAKyE,eAAiBzE,KAAKgE,cAAcM,YACtB,oBAARgC,MACU,oBAAVC,QACc,oBAAdC,OAAOC,KACuB,oBAA9BD,OAAOC,IAAIC,gBAOtB,IAAIC,WAAa,iBACjBA,YAAc,qCAAuC5F,cAAcC,UAAUM,WAAa,cAAgBP,cAAcY,MAAML,WAAa,OAC3IqF,YAAc,eAAiBvE,MAAMd,WAAa,MAGlDqF,YAAc,uCAA0CP,WAAWrF,cAAcC,UAAUX,WAAa,QACxGsG,YAAc,sCAAyCP,WAAWrF,cAAcC,UAAUR,UAAY,QACtGmG,YAAc,sCAAyCP,WAAWrF,cAAcC,UAAUL,UAAY,QAGtGgG,YAAc,sCAAyCP,WAAWrF,cAAcC,UAAUhB,OAAS,QACnG2G,YAAc,kDAEd,IAAI7B,KAAO9E,KAEX,GAAIA,KAAKyE,eAAgB,CAExB,MAAMmC,EAAO,IAAIN,KAAK,CAACK,aACdE,EAAS,IAAIN,OAAOC,OAAOC,IAAIC,gBAAgBE,IACxDC,EAAOC,UAAY,SAASC,GAC1B,MAAM,IAACvE,EAAD,WAAMsB,EAAN,MAAkB2B,EAAlB,WAAyBI,GAAckB,EAAE/B,KAC/CF,KAAKf,aAAavB,EAAI2C,IAAIpE,cAAcY,OAAQmC,EAAY2B,EAAOI,GAChEA,GACEgB,EAAOG,aAGdH,EAAOI,QAAU,SAASF,GACzBG,MAAM,eAAiBH,EAAEI,OAAS,OAASJ,EAAEK,SAAW,KAAOL,EAAEpC,UAElEkC,EAAOZ,YAAY,SAGnB,WACC,IAAIa,UACJhF,KAAK6E,YACLG,UAAU,MAHX,IAQK,CACN3G,OAAQ,WACP,OAAO,IAAIV,SAEVe,QACAG,QACAN,SACA+B,OA1TsB,GAkUzBxC,OAAOC,QAAUJ,S,kBC3TlB,MAAME,EAEJkB,OAAOX,EAASY,EAAQf,GACtB,OAAOG,EAAQW,OAAOC,EAAQf,IAQlCJ,EAASuG,UAAUvC,KAAO,WAExB,IAAI0D,WAAWnB,UAAUoB,KACvB,MAAM,IAAIC,MAAM,wHAGlB,MAAMC,EAAMxH,KAAKD,SAAS0H,SAAS/E,OAC7BgF,EAAW,IAAIL,WAAWG,GAAKF,MAAM,GAE3C,IAAI,IAAIpC,EAAE,EAAGA,EAAEsC,EAAKtC,IAAI,CACtB,IAAIyC,EAAMhF,KAAKC,MAAMD,KAAKE,UAAY2E,EAAMtC,IACxC0C,EAAK,EAET,KAAOA,EAAGD,GAASD,EAASC,IAAM,GAC7BD,EAASE,IAAK,GACfD,IACFC,IAEFF,EAASC,GAAOzC,EAIlB,OAAOwC,GAQT/H,EAASuG,UAAUtC,OAAS,SAASb,GAOnC,IAJA,IAAIyE,EAAMzE,EAAOL,OACfwC,EAAIvC,KAAKC,MAAMD,KAAKE,SAAS2E,GAC7BK,EAAIlF,KAAKC,MAAMD,KAAKE,SAAS2E,GAExBtC,GAAK2C,GAAKL,EAAM,GACrBK,EAAIlF,KAAKC,MAAMD,KAAKE,SAASE,EAAOL,QAEtC,IAAIyD,EAAIpD,EAAO8E,GAIf,OAHA9E,EAAO8E,GAAK9E,EAAOmC,GACnBnC,EAAOmC,GAAKiB,EAELpD,GASTpD,EAASuG,UAAUrC,UAAY,SAASiE,EAAQC,GAG9C,IAKEC,EAAS9C,EALPsC,EAAMM,EAAOpF,OACfuF,EAAKtF,KAAKC,MAAMD,KAAKE,SAAS2E,GAC9BU,EAAM,IAAIb,WAAWG,GAAKF,MAAM,GAChCa,EAAW,IAAId,WAAWG,GAAKF,MAAM,GACrCc,EAAM,IAAIf,WAAWG,GAOvB,IAFAY,EAAId,MAAM,GACVU,EAAU,EACN9C,EAAE,EAAGA,EAAE+C,EAAI/C,IACbgD,EAAIhD,GAAK6C,EAAO7C,GAEhBkD,EAAIJ,GAAWF,EAAO9F,QAAQkG,EAAIhD,IAClC8C,IAIF,IADAA,EAAUC,EACN/C,EAAE,EAAGA,EAAEsC,EAAKtC,KACQ,GAAnBkD,EAAIpG,QAAQkD,KACbgD,EAAIF,GAAWF,EAAO5C,GACtB8C,KAOJ,IAFAI,EAAId,MAAM,GACVU,EAAU,EACN9C,EAAE,EAAGA,EAAE+C,EAAI/C,IACbiD,EAASjD,GAAK4C,EAAO5C,GAErBkD,EAAIJ,GAAWD,EAAO/F,QAAQmG,EAASjD,IACvC8C,IAIF,IADAA,EAAUC,EACN/C,EAAE,EAAGA,EAAEsC,EAAKtC,KACQ,GAAnBkD,EAAIpG,QAAQkD,KACbiD,EAASH,GAAWD,EAAO7C,GAC3B8C,KAIJ,MAAO,CAACE,EAAKC,IAQfxI,EAASuG,UAAUpD,QAAU,SAASC,EAAQ2E,GAE5C,IAEEW,EAIAC,EAAiBC,EAAWC,EAAStD,EANnCpC,EAAU,EACZ0E,EAAMzE,EAAOL,OAEb3C,EAAWC,KAAKD,SAChB0I,EAAaC,MAAMlH,KAAKzB,EAAS0I,YACjCE,EAASF,EAAW/F,OAMtB,IAHGgF,IACDW,EAAM,IAAIhB,WAAWG,IAElBtC,EAAE,EAAGA,EAAEnC,EAAOL,SAAUwC,EAE3BsD,EAAUI,IACVN,GAAmB,EAGnBG,EAAWI,MAAK,SAAUC,EAAKC,GAU7B,GAPAR,EAAYO,EAAM/I,EAAS0H,SAAS1E,EAAOmC,IAAMnF,EAASiJ,WAGvDD,EAAQJ,GAAU5I,EAAS0I,WAAWM,IAAUD,GAAO/I,EAASkJ,cACjEV,GAAaxI,EAASkJ,aAGrBV,GAAa,GAAKA,EAAYC,EAAQ,CAEvC,GAAGD,EAAYxI,EAASmJ,cAAgBnJ,EAASoJ,cAAgBZ,EAAYxI,EAASoJ,aACpF,OAMF,GAFAb,EAAkBS,EAEJ,IAHdP,EAAUD,GAIR,OAAO,MAKVD,GAAkB,GACnBG,EAAWH,GAAmBE,EAC3Bd,IACDW,EAAItF,EAAOmC,IAAMoD,KAGnBG,EAAWxD,KAAKlF,EAASqJ,YAAcrJ,EAAS0H,SAAS1E,EAAOmC,IAAMnF,EAASkJ,aAC5EvB,IACDW,EAAItF,EAAOmC,IAAMuD,EAAW/F,OAAS,IA2C3C,OApCIgF,GAUF5E,EAAU,CACR2F,WAAYA,EACZJ,IAAKA,EACLgB,eAAgB,EAChBC,aAAcvJ,EAAS0H,SAASnC,QAAO,SAAShD,EAAGC,GAAK,OAAOD,EAAIC,IAAM,GACzEgH,WAAY,GAGdd,EAAWe,SAAQ,SAAUV,EAAKC,GAG9BjG,EAAQuG,gBADPN,EAAQJ,EACiB5I,EAAS0I,WAAWM,GAEpBhJ,EAASqJ,YAElCN,GAAO/I,EAAS0J,cACjB3G,EAAQyG,YAAcT,MAG1BhG,EAAQ4G,eAI8C,KAHpD5G,EAAQuG,eACNvG,EAAQwG,aACRxG,EAAQyG,WACRxJ,EAAS0H,SAAS/E,OAAS3C,EAASiJ,YAAoBlG,EAAQuG,gBAhCpEZ,EAAWe,SAAQ,SAAUV,EAAKC,GAChCjG,GAAW,KAIXA,GAAWgG,EAAMA,KA8BdhG,GAUTnD,EAASuG,UAAUpC,WAAa,SAAStB,EAAKsB,EAAY2B,GAExD,GAAG3B,EAAa9D,KAAKgE,cAAcO,MAAQT,EAAa9D,KAAKgE,cAAcO,MAAO,EAChF,OAAO,EAET,IAAImD,EAAW1H,KAAK8C,QAAQN,EAAI,GAAGO,QAAQ,GACzC0G,EAAczJ,KAAKD,SAAS0J,YAE9B,QAAI/B,EAASgC,eAAiB,IAAO5F,EAAa9D,KAAKgE,cAAcG,WAAa,GAC/EuD,EAASgC,eAAiB,GAAKhC,EAASe,WAAWkB,OAAM,SAAUb,GAClE,OAAOA,EAAMW,YAFjB,GAOF7J,EAAOC,QAAUF","file":"static/js/26.65379531.chunk.js","sourcesContent":["/**\r\n *\r\n *\r\n * @module index\r\n *\r\n * Created by Evgeniy Malyarov on 27.09.2018.\r\n */\r\n\r\nconst Genetic = require('./genetic');\r\nconst Engine1D  = require('./Engine1D');\r\n\r\nclass Cutting {\r\n  constructor(userData) {\r\n\r\n    this.engine = new Engine1D();\r\n\r\n    this.genetic = Genetic.create();\r\n    this.genetic.optimize = Genetic.Optimize.Minimize;\r\n    this.genetic.select1 = Genetic.Select1.Tournament2;\r\n    this.genetic.select2 = Genetic.Select2.Tournament2;\r\n\r\n    for(const prop of ['seed', 'mutate', 'crossover', 'fitness', 'generation']) {\r\n      this.genetic[prop] = this.engine[prop];\r\n    }\r\n  }\r\n\r\n  evolve(config, userData) {\r\n    return this.engine.evolve(this.genetic, config, userData);\r\n  }\r\n}\r\n\r\nmodule.exports = Cutting;","\r\nvar Genetic = Genetic || (function(){\r\n\t\r\n\t'use strict';\r\n\t\r\n\t// facilitates communcation between web workers\r\n  var Serialization = {\r\n    stringify: function (obj) {\r\n      return JSON.stringify(obj, function (key, value) {\r\n        if(value instanceof Function || typeof value == 'function') return '__func__:' + value.toString();\r\n        if(value instanceof RegExp) return '__regex__:' + value;\r\n        if(typeof value == 'object' && typeof value.constructor.from == 'function') {\r\n          return '__' + value.constructor.name + '__:' + value.join();\r\n        }\r\n        return value;\r\n      });\r\n    },\r\n    parse: function (str) {\r\n      return JSON.parse(str, function (key, value) {\r\n        if(typeof value != 'string') return value;\r\n        if(value.lastIndexOf('__func__:', 0) === 0) return eval('(' + value.slice(9) + ')');\r\n        if(value.lastIndexOf('__regex__:', 0) === 0) return eval('(' + value.slice(10) + ')');\r\n        if(value.indexOf('Array__:') != -1) {\r\n          var akey = value.split('__:');\r\n          return eval(akey[0].substr(2) + '.from([' + akey[1] + '])');\r\n        }\r\n        return value;\r\n      });\r\n    }\r\n  };\r\n\r\n  var Clone = function (obj) {\r\n    if(obj == null || typeof obj != 'object') {\r\n      return obj;\r\n    }\r\n    if(typeof obj.constructor.from == 'function') {\r\n      return obj.constructor.from(obj);\r\n    }\r\n    return JSON.parse(JSON.stringify(obj));\r\n  };\r\n\r\n  var Optimize = {\r\n\t\tMaximize: function (a, b) { return a >= b; },\r\n    Minimize: function (a, b) { return a < b; }\r\n\t};\r\n\t\r\n\tvar Select1 = {\r\n\t\tTournament2: function(pop) {\r\n\t\t\tvar n = pop.length;\r\n\t\t\tvar a = pop[Math.floor(Math.random()*n)];\r\n\t\t\tvar b = pop[Math.floor(Math.random()*n)];\r\n\t\t\treturn this.optimize(a.fitness, b.fitness) ? a.entity : b.entity;\r\n\t\t},\r\n    Tournament3: function(pop) {\r\n\t\t\tvar n = pop.length;\r\n\t\t\tvar a = pop[Math.floor(Math.random()*n)];\r\n\t\t\tvar b = pop[Math.floor(Math.random()*n)];\r\n\t\t\tvar c = pop[Math.floor(Math.random()*n)];\r\n\t\t\tvar best = this.optimize(a.fitness, b.fitness) ? a : b;\r\n\t\t\tbest = this.optimize(best.fitness, c.fitness) ? best : c;\r\n\t\t\treturn best.entity;\r\n\t\t},\r\n    Fittest: function (pop) {\r\n\t\t\treturn pop[0].entity;\r\n\t\t},\r\n    Random: function (pop) {\r\n\t\t\treturn pop[Math.floor(Math.random()*pop.length)].entity;\r\n\t\t},\r\n    RandomLinearRank: function (pop) {\r\n\t\t\tthis.internalGenState[\"rlr\"] = this.internalGenState[\"rlr\"]||0;\r\n\t\t\treturn pop[Math.floor(Math.random()*Math.min(pop.length,(this.internalGenState[\"rlr\"]++)))].entity;\r\n\t\t},\r\n    Sequential: function (pop) {\r\n\t\t\tthis.internalGenState[\"seq\"] = this.internalGenState[\"seq\"]||0;\r\n\t\t\treturn pop[(this.internalGenState[\"seq\"]++)%pop.length].entity;\r\n\t\t}\r\n\t};\r\n\t\r\n\tvar Select2 = {\r\n\t\tTournament2: function(pop) {\r\n\t\t\treturn [Select1.Tournament2.call(this, pop), Select1.Tournament2.call(this, pop)];\r\n\t\t},\r\n    Tournament3: function(pop) {\r\n\t\t\treturn [Select1.Tournament3.call(this, pop), Select1.Tournament3.call(this, pop)];\r\n\t\t},\r\n    Random: function (pop) {\r\n\t\t\treturn [Select1.Random.call(this, pop), Select1.Random.call(this, pop)];\r\n\t\t},\r\n    RandomLinearRank: function (pop) {\r\n\t\t\treturn [Select1.RandomLinearRank.call(this, pop), Select1.RandomLinearRank.call(this, pop)];\r\n\t\t},\r\n    Sequential: function (pop) {\r\n\t\t\treturn [Select1.Sequential.call(this, pop), Select1.Sequential.call(this, pop)];\r\n\t\t},\r\n    FittestRandom: function (pop) {\r\n\t\t\treturn [Select1.Fittest.call(this, pop), Select1.Random.call(this, pop)];\r\n\t\t}\r\n\t};\r\n\t\r\n\tfunction Genetic() {\r\n\t\t\r\n\t\t// population\r\n\t\tthis.fitness = null;\r\n\t\tthis.seed = null;\r\n\t\tthis.mutate = null;\r\n\t\tthis.crossover = null;\r\n\t\tthis.select1 = null;\r\n\t\tthis.select2 = null;\r\n\t\tthis.optimize = null;\r\n\t\tthis.generation = null;\r\n\t\tthis.notification = null;\r\n\t\t\r\n\t\tthis.configuration = {\r\n\t\t\tsize: 250,\r\n      crossover: 0.8,\r\n      mutation: 0.2,\r\n      random: 0.1,\r\n      iterations: 100,\r\n      fittestAlwaysSurvives: true,\r\n      maxResults: 100,\r\n      webWorkers: true,\r\n      skip: 0\r\n\t\t};\r\n\t\t\r\n\t\tthis.userData = {};\r\n\t\tthis.internalGenState = {};\r\n\t\t\r\n\t\tthis.entities = [];\r\n\t\t\r\n\t\tthis.usingWebWorker = false;\r\n\t\t\r\n\t\tthis.start = function(message) {\r\n\t\t\t\r\n\t\t\tvar parents, children;\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\tfunction mutateOrNot(entity) {\r\n\t\t\t\t// applies mutation based on mutation probability\r\n\t\t\t\treturn Math.random() <= self.configuration.mutation && self.mutate ? self.mutate(Clone(entity)) : entity;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// seed the population\r\n\t\t\tif(message && message.data){\r\n\t\t\t\t// {entities: \"__Int16Array__:\"}\r\n\t\t\t\tthis.entities = Serialization.parse(message.data).entities;\r\n\t\t\t}\t\t\t\r\n\t\t\twhile (this.entities.length < this.configuration.size)\r\n\t\t\t\tthis.entities.push(this.seed());\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tfor (var i=0; i<this.configuration.iterations; ++i) {\r\n\t\t\t\t// reset for each generation\r\n\t\t\t\tthis.internalGenState = {};\r\n\t\t\t\t\r\n\t\t\t\t// score and sort\r\n\t\t\t\tvar pop = this.entities\r\n\t\t\t\t\t.map(function (entity) {\r\n\t\t\t\t\t\treturn {\"fitness\": self.fitness(entity), \"entity\": entity };\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.sort(function (a, b) {\r\n\t\t\t\t\t\treturn self.optimize(a.fitness, b.fitness) ? -1 : 1;\r\n\t\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// generation notification\r\n\t\t\t\tvar mean = pop.reduce(function (a, b) { return a + b.fitness; }, 0)/pop.length;\r\n\t\t\t\tvar stdev = Math.sqrt(pop\r\n\t\t\t\t\t.map(function (a) { return (a.fitness - mean) * (a.fitness - mean); })\r\n\t\t\t\t\t.reduce(function (a, b) { return a+b; }, 0)/pop.length);\r\n\t\t\t\t\t\r\n\t\t\t\tvar stats = {\r\n\t\t\t\t\tmaximum: pop[0].fitness,\r\n          minimum: pop[pop.length-1].fitness,\r\n          mean: mean,\r\n          stdev: stdev\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar r = this.generation ? this.generation(pop, i, stats) : true;\r\n\t\t\t\tvar isFinished = (typeof r != \"undefined\" && !r) || (i == this.configuration.iterations-1);\r\n\t\t\t\t\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.notification\r\n\t\t\t\t\t&& (isFinished || this.configuration[\"skip\"] == 0 || i%this.configuration[\"skip\"] == 0)\r\n\t\t\t\t) {\r\n\t\t\t\t\tthis.sendNotification(pop.slice(0, this.maxResults), i, stats, isFinished);\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tif (isFinished)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t\t// crossover and mutate\r\n\t\t\t\tvar newPop = [];\r\n\t\t\t\t\r\n\t\t\t\tif (this.configuration.fittestAlwaysSurvives){  // lets the best solution fall through\r\n\t\t\t\t\tnewPop.push(Clone(pop[0].entity));\r\n\t\t\t\t\tnewPop.push(Clone(pop[1].entity));\r\n\t\t\t\t\tif (this.crossover) {   // if there is a crossover function\r\n\t\t\t\t\t\tchildren = this.crossover(newPop[0], this.select1(pop));\r\n\t\t\t\t\t\tnewPop.push(children[0], children[1]);\r\n\t\t\t\t\t\tchildren = this.crossover(newPop[1], this.select1(pop));\r\n\t\t\t\t\t\tnewPop.push(children[0], children[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewPop.push(this.mutate(Clone(newPop[0])));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\twhile (newPop.length < self.configuration.size) {\r\n\r\n\t\t\t\t\tif(Math.random() <= this.configuration.random)\r\n\t\t\t\t\t\tnewPop.push(this.seed());   // add a random child\r\n\r\n\t\t\t\t\telse if (\r\n\t\t\t\t\t\tthis.crossover // if there is a crossover function\r\n\t\t\t\t\t\t&& Math.random() <= this.configuration.crossover // base crossover on specified probability\r\n\t\t\t\t\t\t&& newPop.length+1 < self.configuration.size // keeps us from going 1 over the max population size\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tparents = this.select2(pop);\r\n\t\t\t\t\t\tchildren = this.crossover(parents[0], parents[1]).map(mutateOrNot);\r\n\t\t\t\t\t\tnewPop.push(children[0], children[1]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewPop.push(mutateOrNot(self.select1(pop)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.entities = newPop;\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tthis.sendNotification = function(pop, generation, stats, isFinished) {\r\n\t\t\tvar response = {\r\n\t\t\t\tpop: pop.map(Serialization.stringify),\r\n        generation: generation,\r\n        stats: stats,\r\n        isFinished: isFinished\r\n\t\t\t};\r\n\r\n      if(this.usingWebWorker) {\r\n        postMessage(response);\r\n      }\r\n      else {\r\n        // self declared outside of scope\r\n        self.notification(response.pop.map(Serialization.parse), response.generation, response.stats, response.isFinished);\r\n      }\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\tGenetic.prototype.evolve = function(config, userData) {\r\n\t\t\r\n\t\tvar k;\r\n\t\tfor (k in config) {\r\n\t\t\tthis.configuration[k] = config[k];\r\n\t\t}\r\n\t\t\r\n\t\tfor (k in userData) {\r\n\t\t\tthis.userData[k] = userData[k];\r\n\t\t}\r\n\t\t\r\n\t\t// determine if we can use webworkers\r\n\t\tthis.usingWebWorker = this.configuration.webWorkers\r\n\t\t\t&& typeof Blob != \"undefined\"\r\n\t\t\t&& typeof Worker != \"undefined\"\r\n\t\t\t&& typeof window.URL != \"undefined\"\r\n\t\t\t&& typeof window.URL.createObjectURL != \"undefined\";\r\n\t\t\r\n\t\tfunction addslashes(str) {\r\n\t\t\treturn str.replace(/[\\\\\"']/g, '\\\\$&').replace(/\\u0000/g, '\\\\0');\r\n\t\t}\r\n\t\t\t\r\n\t\t// bootstrap webworker script\r\n\t\tvar blobScript = \"'use strict'\\n\";\r\n\t\tblobScript += \"var Serialization = {'stringify': \" + Serialization.stringify.toString() + \", 'parse': \" + Serialization.parse.toString() + \"};\\n\";\r\n\t\tblobScript += \"var Clone = \" + Clone.toString() + \";\\n\";\r\n\t\t\r\n\t\t// make available in webworker\r\n\t\tblobScript += \"var Optimize = Serialization.parse(\\\"\" + addslashes(Serialization.stringify(Optimize)) + \"\\\");\\n\";\r\n\t\tblobScript += \"var Select1 = Serialization.parse(\\\"\" + addslashes(Serialization.stringify(Select1)) + \"\\\");\\n\";\r\n\t\tblobScript += \"var Select2 = Serialization.parse(\\\"\" + addslashes(Serialization.stringify(Select2)) + \"\\\");\\n\";\r\n\t\t\r\n\t\t// materialize our ga instance in the worker\r\n\t\tblobScript += \"var genetic = Serialization.parse(\\\"\" + addslashes(Serialization.stringify(this)) + \"\\\");\\n\";\r\n\t\tblobScript += \"onmessage = function(e) { genetic.start(e); }\\n\";\r\n\t\t\r\n\t\tvar self = this;\r\n\t\t\r\n\t\tif (this.usingWebWorker) {\r\n\t\t\t// webworker\r\n\t\t\tconst blob = new Blob([blobScript]);\r\n      const worker = new Worker(window.URL.createObjectURL(blob));\r\n\t\t\tworker.onmessage = function(e) {\r\n\t\t\t  const {pop, generation, stats, isFinished} = e.data;\r\n\t\t\t  self.notification(pop.map(Serialization.parse), generation, stats, isFinished);\r\n\t\t\t  if(isFinished) {\r\n          worker.terminate();\r\n        }\r\n\t\t\t};\r\n\t\t\tworker.onerror = function(e) {\r\n\t\t\t\talert('ERROR: Line ' + e.lineno + ' in ' + e.filename + ': ' + e.message);\r\n\t\t\t};\r\n\t\t\tworker.postMessage(\"\");\r\n\t\t} else {\r\n\t\t\t// simulate webworker\r\n\t\t\t(function(){\r\n\t\t\t\tvar onmessage;\r\n\t\t\t\teval(blobScript);\r\n\t\t\t\tonmessage(null);\r\n\t\t\t})();\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn {\r\n\t\tcreate: function() {\r\n\t\t\treturn new Genetic();\r\n\t\t},\r\n    Select1: Select1,\r\n    Select2: Select2,\r\n    Optimize: Optimize,\r\n    Clone: Clone\r\n\t};\r\n\t\r\n})();\r\n\r\n\r\n// so we don't have to build to run in the browser\r\nif (typeof module != \"undefined\") {\r\n\tmodule.exports = Genetic;\r\n}\r\n","/**\r\n * Движок линейного раскроя\r\n *\r\n * @module Engine1D\r\n *\r\n * Created by Evgeniy Malyarov on 27.09.2018.\r\n */\r\n\r\nclass Engine1D {\r\n\r\n  evolve(genetic, config, userData) {\r\n    return genetic.evolve(config, userData);\r\n  }\r\n}\r\n\r\n/**\r\n * Случайный массив индексов\r\n * @return {Int16Array}\r\n */\r\nEngine1D.prototype.seed = function seed() {\r\n\r\n  if(!Int16Array.prototype.fill){\r\n    throw new Error(\"Unsupported browser. Use Chrome, FireFox or MS EDGE\\n\\nУстаревший браузер. Используйте Chrome, FireFox или MS EDGE\\n\");\r\n  }\r\n\r\n  const len = this.userData.products.length;\r\n  const decision = new Int16Array(len).fill(-1);\r\n\r\n  for(let i=0; i<len; i++){\r\n    let ind = Math.floor(Math.random() * (len - i));\r\n    let i2 = 0;\r\n\r\n    while((i2<ind) || (decision[ind]>=0)){\r\n      if(decision[i2]>=0)\r\n        ind++;\r\n      i2++;\r\n    }\r\n    decision[ind] = i;\r\n  }\r\n\r\n  // create random strings that are equal in length to solution\r\n  return decision;\r\n};\r\n\r\n/**\r\n * Мутация - перестановка двух случайных генов\r\n * @param entity {Int16Array}\r\n * @return {Int16Array}\r\n */\r\nEngine1D.prototype.mutate = function(entity) {\r\n\r\n  // chromosomal drift\r\n  var len = entity.length,\r\n    i = Math.floor(Math.random()*len),\r\n    j = Math.floor(Math.random()*len);\r\n\r\n  while (i == j && len > 1)\r\n    j = Math.floor(Math.random()*entity.length);\r\n\r\n  var k = entity[j];\r\n  entity[j] = entity[i];\r\n  entity[i] = k;\r\n\r\n  return entity;\r\n};\r\n\r\n/**\r\n * Смешивает гены родителей\r\n * @param mother\r\n * @param father\r\n * @return {Int16Array[]}\r\n */\r\nEngine1D.prototype.crossover = function(mother, father) {\r\n\r\n  // single-point crossover\r\n  var len = mother.length,\r\n    ca = Math.floor(Math.random()*len),\r\n    son = new Int16Array(len).fill(-1),\r\n    daughter = new Int16Array(len).fill(-1),\r\n    tmp = new Int16Array(len),\r\n    tmp_len, i;\r\n\r\n\r\n  // начальные кусочки от родителей заполняем без хитростей, но запоминаем индексы второго родителя\r\n  tmp.fill(-1);\r\n  tmp_len = 0;\r\n  for(i=0; i<ca; i++){\r\n    son[i] = father[i];\r\n\r\n    tmp[tmp_len] = mother.indexOf(son[i]);\r\n    tmp_len++;\r\n  }\r\n\r\n  tmp_len = ca;\r\n  for(i=0; i<len; i++){\r\n    if(tmp.indexOf(i) == -1){\r\n      son[tmp_len] = mother[i];\r\n      tmp_len++;\r\n    }\r\n  }\r\n\r\n\r\n  tmp.fill(-1);\r\n  tmp_len = 0;\r\n  for(i=0; i<ca; i++){\r\n    daughter[i] = mother[i];\r\n\r\n    tmp[tmp_len] = father.indexOf(daughter[i]);\r\n    tmp_len++;\r\n  }\r\n\r\n  tmp_len = ca;\r\n  for(i=0; i<len; i++){\r\n    if(tmp.indexOf(i) == -1){\r\n      daughter[tmp_len] = father[i];\r\n      tmp_len++;\r\n    }\r\n  }\r\n\r\n  return [son, daughter];\r\n};\r\n\r\n/**\r\n * Осуществляет укладку заготовок и оценку решения\r\n * @param entity {Int16Array}\r\n * @return {number}\r\n */\r\nEngine1D.prototype.fitness = function(entity, decision) {\r\n\r\n  var fitness = 0,\r\n    len = entity.length,\r\n    res,\r\n    userData = this.userData,\r\n    workpieces = Array.from(userData.workpieces),\r\n    scraps = workpieces.length,\r\n    workpiece_index, scrap_len, min_len, i;\r\n\r\n  if(decision)\r\n    res = new Int16Array(len);\r\n\r\n  for (i=0; i<entity.length; ++i) {\r\n\r\n    min_len = Infinity;\r\n    workpiece_index = -1;\r\n\r\n    // бежим по заготовкам, ищем самую короткую, на которую можно уложить\r\n    workpieces.some(function (val, index) {\r\n\r\n      // получаем длину остатка\r\n      scrap_len = val - userData.products[entity[i]] - userData.knifewidth;\r\n\r\n      // укорачиваем заготовку на припуск\r\n      if(index < scraps && userData.workpieces[index] == val && userData.overmeasure)\r\n        scrap_len -= userData.overmeasure;\r\n\r\n      // анализируем остаток\r\n      if(scrap_len >= 0 && scrap_len < min_len){\r\n\r\n        if(scrap_len > userData.wrongsnipmin && userData.wrongsnipmax && scrap_len < userData.wrongsnipmax){\r\n          return;\r\n        }\r\n\r\n        min_len = scrap_len;\r\n        workpiece_index = index;\r\n\r\n        if(min_len == 0)\r\n          return true;\r\n      }\r\n    });\r\n\r\n    // если найдено - укладываем, иначе - добавляем палку\r\n    if(workpiece_index >=0){\r\n      workpieces[workpiece_index] = min_len;\r\n      if(decision)\r\n        res[entity[i]] = workpiece_index;\r\n\r\n    }else{\r\n      workpieces.push(userData.sticklength - userData.products[entity[i]] - userData.overmeasure);\r\n      if(decision)\r\n        res[entity[i]] = workpieces.length - 1;\r\n\r\n    }\r\n  }\r\n\r\n\r\n  // в зависимости от признака decision, возвращаем оценку решения или полное решение\r\n  if(!decision){\r\n    workpieces.forEach(function (val, index) {\r\n      fitness += 10e12;\r\n      // форсируем использование обрези, уменьшая её цену\r\n      // if(index < scraps)\r\n      // \tfitness -= 10000;\r\n      fitness -= val * val;\r\n    });\r\n\r\n  }else{\r\n    fitness = {\r\n      workpieces: workpieces,\r\n      res: res,\r\n      workpieces_len: 0,\r\n      products_len: userData.products.reduce(function(a, b) { return a + b; }, 0),\r\n      scraps_len: 0\r\n    };\r\n\r\n    workpieces.forEach(function (val, index) {\r\n\r\n      if(index < scraps)\r\n        fitness.workpieces_len += userData.workpieces[index];\r\n      else\r\n        fitness.workpieces_len += userData.sticklength;\r\n\r\n      if(val >= userData.usefulscrap)\r\n        fitness.scraps_len += val;\r\n    });\r\n\r\n    fitness.scraps_percent = (\r\n      fitness.workpieces_len\r\n      - fitness.products_len\r\n      - fitness.scraps_len\r\n      - userData.products.length * userData.knifewidth) * 100 / fitness.workpieces_len;\r\n  }\r\n\r\n  return fitness;\r\n};\r\n\r\n/**\r\n * Принимает решение о целесообразности дальнейшей эволюции\r\n * @param pop\r\n * @param generation\r\n * @param stats\r\n * @return {boolean}\r\n */\r\nEngine1D.prototype.generation = function(pop, generation, stats) {\r\n  // stop running once we've reached the solution\r\n  if(generation < this.configuration.skip || generation % this.configuration.skip !=0)\r\n    return true;\r\n\r\n  var decision = this.fitness(pop[0].entity, true),\r\n    usefulscrap = this.userData.usefulscrap;\r\n  // останавливаем эволюцию, если обрезь < 1% и нет длинных обрезков\r\n  if((decision.scraps_percent < 0.5 && generation > this.configuration.iterations / 3) ||\r\n    (decision.scraps_percent < 1 && decision.workpieces.every(function (val) {\r\n      return val < usefulscrap\r\n    })))\r\n    return false;\r\n};\r\n\r\nmodule.exports = Engine1D;\r\n\r\n\r\n\r\n"],"sourceRoot":""}