{"version":3,"sources":["components/RepMaterialsDemand/Report.js","../node_modules/metadata-react/FrmReport/RepToolbar.js","../node_modules/metadata-react/FrmReport/RepTabularSection.js","../node_modules/metadata-react/FrmReport/Report.js","../node_modules/metadata-react/FrmReport/index.js"],"names":["RepMaterialsDemand","Component","constructor","props","context","super","handleMenuOpen","event","this","setState","menuOpen","anchorEl","currentTarget","_report","forceUpdate","handleMenuClose","handleList","ref","state","calcOrders","handleNavigate","handleObj","ToolbarExt","res","key","size","onClick","style","alignSelf","open","onClose","_mgr","_obj","create","undefined","componentDidMount","location","search","replace","test","fill_by_order","_id","then","catch","first","production","forEach","characteristic","calc_order","empty","indexOf","number_doc","render","el","rname","withIface","RepToolbar","handleChange","handleSchemeChange","scheme","export_handlers","call","handleSave","handleClose","handlePrint","_tabular","classes","settings_open","React","createElement","Toolbar","disableGutters","className","toolbar","Button","disabled","standard_period","IconButton","DateRange","_fld","_meta","synonym","Typography","color","flex","SchemeSettingsButtons","handleSettingsOpen","handleSettingsClose","show_variants","title","MoreVertIcon","Menu","MenuItem","PrintIcon","handleExportCSV","CopyIcon","handleExportJSON","CloudDownloadIcon","handleExportXLS","FileDownloadIcon","propTypes","withStyles","RepTabularSection","_props","getRows","i","rows","onRowExpandToggle","args","expanded","Object","assign","columnGroupName","row","isExpanded","shouldExpand","onCellExpand","slice","rowKey","rowData","rowIndex","subRows","expandArgs","children","updateSubRowDetails","treeDepth","splice","length","getSubRowDetails","rowItem","_columns","group","field","siblingIndex","numberSiblings","RowRenderer","renderBaseRow","formatted","conditional_appearance","find_rows","use","crow","check","JSON","parse","css","e","parentTreeDepth","sr","_metadata","shouldComponentUpdate","tabular","count","_rows","_count","clear","expandRoot","dims","srows","expandAll","level","rootRow","idx","_level","minHeight","hideHeader","ReactDataGrid","columns","enableCellSelect","rowGetter","rowsCount","rowHeight","headerRowHeight","rowRenderer","Report","MDNRComponent","calculate","_result","Promise","reject","Error","handleColumns","read_only","rx_columns","mode","fields","_meta2","_obj2","metadata","resolve","$p","cat","scheme_settings","get_scheme","class_name","autoexec","registerRep","name","RepParams","_manager","LoadingMessage","text","pheight","height","show_grid","ignoreTitle","Helmet","content","property","hideToolbar","SchemeSettingsTabs","width","tabParams","PropTypes","object","isRequired","string","_acl","bool","func"],"mappings":"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","file":"static/js/28.2887a795.chunk.js","sourcesContent":["/**\r\n * Индивидуальная форма отчета\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FrmReport from 'metadata-react/FrmReport';\r\nimport {withIface} from 'metadata-redux';\r\n\r\nclass RepMaterialsDemand extends Component {\r\n\r\n  static propTypes = {\r\n    _obj: PropTypes.object,\r\n    _mgr: PropTypes.object.isRequired,\r\n    location: PropTypes.object.isRequired,\r\n    handleNavigate: PropTypes.func,\r\n\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    const {_mgr, _obj} = props;\r\n    this._obj = _obj || _mgr.create();\r\n\r\n    this.state = {\r\n      anchorEl: undefined,\r\n      menuOpen: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {location} = this.props;\r\n    const ref = location && location.search.replace(/\\?/g, '');\r\n    if(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/.test(ref)) {\r\n      this._obj.fill_by_order({_id: `doc.calc_order|${ref}`})\r\n        .then(() => {\r\n          this._report && this._report.forceUpdate();\r\n        })\r\n        .catch(() => {\r\n          return null;\r\n        });\r\n    }\r\n  }\r\n\r\n  calcOrders(first) {\r\n    let res = first ? {} : '';\r\n    this._obj.production.forEach(({characteristic: {calc_order}}) => {\r\n      if(!calc_order.empty()){\r\n        if(first){\r\n          res.ref = calc_order.ref;\r\n          res.state = calc_order.state;\r\n          return false;\r\n        }\r\n        else if(res.indexOf(calc_order.number_doc) == -1){\r\n          if(res){\r\n            res += ', ';\r\n          }\r\n          res += calc_order.number_doc;\r\n        }\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  handleMenuOpen = (event) => {\r\n    this.setState({menuOpen: true, anchorEl: event.currentTarget}, () => this._report && this._report.forceUpdate());\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({menuOpen: false}, () => this._report && this._report.forceUpdate());\r\n  };\r\n\r\n  handleList = () => {\r\n    //this.props.handleNavigate(`/${_mgr.class_name}/list${_obj ? '/?ref=' + _obj.ref : ''}`);\r\n    const {ref, state} = this.calcOrders(true);\r\n    if(ref && state){\r\n      this.props.handleNavigate(`/?ref=${ref}&state_filter=${state}`);\r\n    }\r\n    else{\r\n      this.props.handleNavigate(`/`);\r\n    }\r\n  }\r\n\r\n  handleObj = () => {\r\n    const {ref} = this.calcOrders(true);\r\n    this.props.handleNavigate(`/doc.calc_order/${ref || 'list'}`);\r\n  }\r\n\r\n  ToolbarExt = () => {\r\n    const {state} = this;\r\n    const res = this.calcOrders();\r\n\r\n    return [\r\n      <Button key=\"go\" size=\"small\" onClick={this.handleMenuOpen} style={{alignSelf: 'center'}}>{res || 'Перейти'}</Button>,\r\n      <Menu\r\n        key=\"menu\"\r\n        anchorEl={state.anchorEl}\r\n        open={state.menuOpen}\r\n        onClose={this.handleMenuClose}\r\n      >\r\n        <MenuItem onClick={this.handleObj}>В форму заказа</MenuItem>\r\n        <MenuItem onClick={this.handleList}>В форму списка заказов</MenuItem>\r\n      </Menu>\r\n    ];\r\n  };\r\n\r\n  render() {\r\n    const {props, _obj} = this;\r\n    return <FrmReport ref={(el) => this._report = el} {...props} _obj={_obj} ToolbarExt={this.ToolbarExt}/>;\r\n  }\r\n}\r\n\r\nRepMaterialsDemand.rname = 'RepMaterialsDemand';\r\n\r\nexport default withIface(RepMaterialsDemand);\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport RunIcon from '@material-ui/icons/PlayArrow';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PrintIcon from '@material-ui/icons/Print';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport FileDownloadIcon from '@material-ui/icons/ArrowDropDownCircle';\nimport { export_handlers } from '../plugin';\nimport SchemeSettingsButtons from '../SchemeSettings/SchemeSettingsButtons';\nimport DateRange from '../SchemeSettings/DateRange';\nimport withStyles from '../Header/toolbar';\n\nclass RepToolbar extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = () => {\n      this.props.handleSchemeChange(this.props.scheme);\n    };\n\n    this.state = {\n      anchorEl: undefined,\n      menuOpen: false\n    };\n    export_handlers.call(this);\n  }\n\n  render() {\n    const {\n      props,\n      state,\n      handleChange\n    } = this;\n    const {\n      handleSave,\n      handleClose,\n      handlePrint,\n      _obj,\n      _tabular,\n      classes,\n      scheme,\n      settings_open,\n      ToolbarExt\n    } = props;\n    return /*#__PURE__*/React.createElement(Toolbar, {\n      disableGutters: true,\n      className: classes.toolbar\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handleSave,\n      disabled: settings_open\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-play fa-fw\"\n    }), \" Сформировать\"), !scheme.standard_period.empty() && /*#__PURE__*/React.createElement(IconButton, {\n      disabled: true\n    }, \"|\"), !scheme.standard_period.empty() && /*#__PURE__*/React.createElement(DateRange, {\n      _obj: scheme,\n      _fld: 'date',\n      _meta: {\n        synonym: 'Период'\n      },\n      classes: classes,\n      handleChange: handleChange\n    }), ToolbarExt && /*#__PURE__*/React.createElement(ToolbarExt, null), /*#__PURE__*/React.createElement(Typography, {\n      color: \"inherit\",\n      className: classes.flex\n    }, \" \"), /*#__PURE__*/React.createElement(SchemeSettingsButtons, {\n      handleSettingsOpen: props.handleSettingsOpen,\n      handleSettingsClose: props.handleSettingsClose,\n      handleSchemeChange: props.handleSchemeChange,\n      settings_open: settings_open,\n      classes: classes,\n      scheme: scheme,\n      show_variants: true\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleMenuOpen,\n      title: \"Дополнительно\"\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, null)), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: state.anchorEl,\n      open: state.menuOpen,\n      onClose: this.handleMenuClose\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      disabled: true,\n      onClick: handlePrint\n    }, /*#__PURE__*/React.createElement(PrintIcon, null), \"  Печать\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleExportCSV\n    }, /*#__PURE__*/React.createElement(CopyIcon, null), \"  Копировать CSV\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleExportJSON\n    }, /*#__PURE__*/React.createElement(CloudDownloadIcon, null), \"  Копировать JSON\"), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: this.handleExportXLS\n    }, /*#__PURE__*/React.createElement(FileDownloadIcon, null), \"  Экспорт в XLS\")));\n  }\n\n}\n\nRepToolbar.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  handleSave: PropTypes.func.isRequired,\n  // обработчик формирования отчета\n  handlePrint: PropTypes.func.isRequired,\n  // обработчик открытия диалога печати\n  handleClose: PropTypes.func.isRequired,\n  // команда закрытия формы\n  handleSettingsOpen: PropTypes.func.isRequired,\n  handleSettingsClose: PropTypes.func.isRequired,\n  handleSchemeChange: PropTypes.func.isRequired,\n  // обработчик при изменении настроек компоновки\n  _obj: PropTypes.object,\n  // объект данных - отчет DataProcessorObj\n  _tabular: PropTypes.string.isRequired,\n  // имя табчасти с данными\n  scheme: PropTypes.object.isRequired,\n  // значение настроек компоновки CatSchemeSettings\n  settings_open: PropTypes.bool,\n  // открыта панель настроек\n  ToolbarExt: PropTypes.func\n} : {};\n;\nexport default withStyles(RepToolbar);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDataGrid from 'react-data-grid';\nexport default class RepTabularSection extends Component {\n  constructor(_props, context) {\n    super(_props, context);\n\n    this.getRows = i => {\n      return this.state.rows[i];\n    };\n\n    this.onRowExpandToggle = args => {\n      const expanded = Object.assign({}, this.state.expanded);\n      expanded[args.columnGroupName] = Object.assign({}, expanded[args.columnGroupName]);\n      expanded[args.columnGroupName][args.row] = {\n        isExpanded: args.shouldExpand\n      };\n      this.setState({\n        expanded: expanded\n      });\n    };\n\n    this.onCellExpand = args => {\n      let rows = this.state.rows.slice(0);\n      let rowKey = args.rowData.row;\n      let rowIndex = rows.indexOf(args.rowData);\n      let subRows = args.expandArgs.children;\n      let expanded = Object.assign({}, this.state.expanded);\n\n      if (expanded && !expanded[rowKey]) {\n        expanded[rowKey] = true;\n        this.updateSubRowDetails(subRows, args.rowData.treeDepth);\n        rows.splice(rowIndex + 1, 0, ...subRows);\n      } else if (expanded[rowKey]) {\n        expanded[rowKey] = false;\n        rows.splice(rowIndex + 1, subRows.length);\n      }\n\n      this.setState({\n        expanded,\n        rows\n      });\n    };\n\n    this.getSubRowDetails = rowItem => {\n      const {\n        _columns\n      } = this.props;\n      const {\n        key\n      } = _columns[0];\n      let isExpanded = this.state.expanded[rowItem.row] ? this.state.expanded[rowItem.row] : false;\n      return {\n        group: rowItem.children && rowItem.children.length > 0,\n        expanded: isExpanded,\n        children: rowItem.children,\n        field: key,\n        treeDepth: rowItem.treeDepth || 0,\n        siblingIndex: rowItem.siblingIndex,\n        numberSiblings: rowItem.numberSiblings\n      };\n    };\n\n    this.RowRenderer = ({\n      renderBaseRow,\n      ...props\n    }) => {\n      let formatted;\n      const {\n        scheme\n      } = this.props;\n      scheme.conditional_appearance.find_rows({\n        use: true\n      }, crow => {\n        if (crow.check(props.row)) {\n          try {\n            formatted = /*#__PURE__*/React.createElement(\"div\", {\n              style: JSON.parse(crow.css)\n            }, renderBaseRow(props));\n          } catch (e) {}\n\n          return false;\n        }\n      });\n      return formatted || renderBaseRow(props);\n    };\n\n    this.updateSubRowDetails = (subRows, parentTreeDepth) => {\n      let treeDepth = parentTreeDepth || 0;\n      subRows.forEach((sr, i) => {\n        sr.treeDepth = treeDepth + 1;\n        sr.siblingIndex = i;\n        sr.numberSiblings = subRows.length;\n        sr.children && this.updateSubRowDetails(sr.children, sr.treeDepth);\n      });\n    };\n\n    const {\n      _obj,\n      _tabular,\n      _meta\n    } = _props;\n    const that = this;\n    this.state = {\n      _meta: _meta || _obj._metadata(_tabular),\n      rows: [],\n      expanded: {}\n    };\n  }\n\n  shouldComponentUpdate({\n    scheme\n  }) {\n    if (scheme !== this.props.scheme) {\n      // в случае непустого результата - чистим\n      const {\n        _obj,\n        _tabular\n      } = this.props;\n      const tabular = _obj[_tabular];\n\n      if (tabular && tabular.count()) {\n        if (tabular._rows) {\n          tabular._rows.length = tabular._rows._count = 0;\n        }\n\n        tabular.clear();\n      }\n\n      this.state.rows.length = 0;\n      this.state.expanded = {};\n    }\n\n    return true;\n  }\n\n  expandRoot() {\n    const {\n      _obj,\n      _tabular,\n      scheme\n    } = this.props;\n    const dims = scheme.dims();\n    const rows = _obj[_tabular]._rows || [];\n\n    if (rows.length && dims.length\n    /*&& !dims[0]*/\n    ) {\n        const srows = rows.slice(0);\n        const subRows = rows[0].children;\n        srows.splice(1, 0, ...subRows);\n        this.updateSubRowDetails(subRows, 1);\n        this.setState({\n          expanded: {\n            '0': true\n          },\n          rows: srows\n        });\n      } else {\n      this.setState({\n        expanded: {},\n        rows\n      });\n    }\n  }\n\n  expandAll(level = 0) {\n    const dims = this.props.scheme.dims();\n    const {\n      expanded,\n      rows\n    } = this.state;\n\n    if (rows.length && dims.length) {\n      const srows = rows.slice(0);\n      rows.slice(0).forEach((rootRow, idx) => {\n        if (rootRow._level || !rootRow.children || expanded[rootRow.row]) {\n          return;\n        }\n\n        const subRows = rootRow.children;\n        srows.splice(srows.indexOf(rootRow) + 1, 0, ...subRows);\n        this.updateSubRowDetails(subRows, 1);\n        expanded[rootRow.row] = true;\n      });\n      this.setState({\n        expanded,\n        rows: srows\n      });\n    }\n  }\n\n  render() {\n    const {\n      props,\n      state,\n      RowRenderer\n    } = this;\n    const {\n      _columns,\n      minHeight,\n      hideHeader\n    } = props; // rowRenderer={RowRenderer}\n    // onRowExpandToggle={onRowExpandToggle}\n    // rowGroupRenderer={RowGroupRenderer}\n\n    return /*#__PURE__*/React.createElement(ReactDataGrid, {\n      columns: _columns,\n      enableCellSelect: true,\n      rowGetter: this.getRows,\n      rowsCount: state.rows.length,\n      getSubRowDetails: this.getSubRowDetails,\n      onCellExpand: this.onCellExpand,\n      minHeight: minHeight || 220,\n      rowHeight: 33,\n      headerRowHeight: hideHeader ? 1 : 33,\n      rowRenderer: RowRenderer\n    });\n  }\n\n}\nRepTabularSection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  _obj: PropTypes.object.isRequired,\n  _tabular: PropTypes.string.isRequired,\n  _meta: PropTypes.object,\n  _columns: PropTypes.array.isRequired,\n  // колонки\n  handleRowChange: PropTypes.func\n} : {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MDNRComponent from '../common/MDNRComponent';\nimport LoadingMessage from '../DumbLoader/LoadingMessage';\nimport RepToolbar from './RepToolbar';\nimport RepTabularSection from './RepTabularSection';\nimport SchemeSettingsTabs from '../SchemeSettings/SchemeSettingsTabs';\nimport { Helmet } from 'react-helmet';\nimport { withIface } from 'metadata-redux';\n\nclass Report extends MDNRComponent {\n  constructor(_props, context) {\n    super(_props, context);\n\n    this.handleSave = () => {\n      const {\n        _obj,\n        scheme\n      } = this.state;\n\n      if (scheme && !scheme.empty()) {\n        if (_obj.scheme !== scheme) {\n          _obj.scheme = scheme;\n        }\n\n        return _obj.calculate().then(() => this._result.expandRoot());\n      } else {\n        return Promise.reject(new Error('Пустая схема компоновки'));\n      }\n    };\n\n    this.handlePrint = () => {};\n\n    this.handleClose = () => {};\n\n    this.handleSettingsOpen = () => {\n      this.setState({\n        settings_open: true\n      });\n    };\n\n    this.handleSettingsClose = () => {\n      this.setState({\n        settings_open: false\n      });\n    };\n\n    this.handleSchemeChange = scheme => {\n      const {\n        props,\n        state: {\n          _obj,\n          _meta\n        }\n      } = this;\n      const {\n        handleSchemeChange,\n        handleColumns,\n        read_only\n      } = props;\n\n      const _columns = scheme.rx_columns({\n        mode: 'ts',\n        fields: _meta.fields,\n        _obj,\n        read_only\n      });\n\n      handleColumns && handleColumns(_columns); // в этом методе\n\n      handleSchemeChange && handleSchemeChange(this, scheme); // обновляем state, shouldComponentUpdate берём из MDNRComponent\n\n      this.setState({\n        scheme,\n        _columns\n      }, () => this.shouldComponentUpdate(props));\n    };\n\n    const {\n      _mgr,\n      _meta: _meta2,\n      _obj: _obj2\n    } = _props;\n\n    const _tabular = _props._tabular || _mgr._tabular || 'data';\n\n    this.state = {\n      _obj: _obj2 || _mgr.create(),\n      _meta: _meta2 || _mgr.metadata(_tabular),\n      _tabular,\n      settings_open: false\n    };\n    (_props.scheme ? Promise.resolve(_props.scheme) : $p.cat.scheme_settings.get_scheme(_mgr.class_name + `.${_tabular}`)).then(this.handleSchemeChange).then(() => {\n      if (_props.autoexec) {\n        Promise.resolve().then(() => this.handleSave());\n      }\n    });\n    _props.registerRep && _props.registerRep(this);\n  }\n\n  get ltitle() {\n    const {\n      _mgr\n    } = this.props;\n    const {\n      scheme\n    } = this.state;\n    return _mgr.metadata().synonym + (scheme && scheme.name ? ` (${scheme.name})` : '');\n  }\n\n  render() {\n    const {\n      props,\n      state\n    } = this;\n    const {\n      _obj,\n      _columns,\n      _tabular,\n      scheme,\n      settings_open\n    } = state;\n    const {\n      RepParams\n    } = _obj._manager;\n\n    if (!scheme) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Чтение настроек компоновки...\"\n      });\n    } else if (!_obj) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Чтение объекта данных...\"\n      });\n    } else if (!_columns || !_columns.length) {\n      return /*#__PURE__*/React.createElement(LoadingMessage, {\n        text: \"Ошибка настроек компоновки...\"\n      });\n    }\n\n    const pheight = props.height || props.minHeight || 500;\n    const show_grid = !settings_open || pheight > 572;\n    return [!props.ignoreTitle && /*#__PURE__*/React.createElement(Helmet, {\n      key: \"helmet\",\n      title: props.title\n    }, /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Отчет\"\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      property: \"og:title\",\n      content: props.title\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      property: \"og:description\",\n      content: \"Отчет\"\n    })), !props.hideToolbar && /*#__PURE__*/React.createElement(RepToolbar, {\n      key: \"toolbar\",\n      _obj: _obj,\n      _tabular: _tabular,\n      _columns: _columns,\n      scheme: scheme,\n      settings_open: settings_open,\n      ToolbarExt: props.ToolbarExt,\n      handleSettingsOpen: this.handleSettingsOpen,\n      handleSettingsClose: this.handleSettingsClose,\n      handleSchemeChange: this.handleSchemeChange,\n      handleSave: this.handleSave,\n      handlePrint: this.handlePrint,\n      handleClose: this.handleClose\n    }), settings_open && /*#__PURE__*/React.createElement(SchemeSettingsTabs, {\n      key: \"tabs\",\n      height: show_grid ? 272 : pheight - 104,\n      width: props.width,\n      scheme: scheme,\n      tabParams: RepParams && /*#__PURE__*/React.createElement(RepParams, {\n        _obj: _obj,\n        scheme: scheme\n      }),\n      handleSchemeChange: this.handleSchemeChange\n    }), show_grid && /*#__PURE__*/React.createElement(RepTabularSection, {\n      key: \"tabular\",\n      ref: el => this._result = el,\n      _obj: _obj,\n      _tabular: _tabular,\n      _columns: _columns,\n      scheme: scheme,\n      minHeight: pheight - 52 - (settings_open ? 320 : 0),\n      hideHeader: props.hideHeader\n    })];\n  }\n\n}\n\nReport.propTypes = {\n  _mgr: PropTypes.object.isRequired,\n  // менеджер отчета\n  _obj: PropTypes.object,\n  // объект данных - отчет DataProcessorObj\n  _meta: PropTypes.object,\n  // метаданные можно переопределить\n  _tabular: PropTypes.string,\n  // имя табчасти, в которой живут данные отчета\n  _acl: PropTypes.string,\n  // права текущего пользователя\n  read_only: PropTypes.bool,\n  // морозит ячейки\n  autoexec: PropTypes.bool,\n  // запускает формирование отчета после монтирования компонента\n  ignoreTitle: PropTypes.bool,\n  // запрет установки заголовка приложения\n  handlePrint: PropTypes.func,\n  // внешний обработчик печати\n  handleSchemeChange: PropTypes.func,\n  // внешний обработчик при изменении настроек компоновки\n  handleColumns: PropTypes.func,\n  // внешний обработчик при расчете свойств колонок - чтобы переопределить editors и formatters\n  registerRep: PropTypes.func,\n  // регистрация ссылки на объект отчета в родительском компоненте\n  ToolbarExt: PropTypes.func\n};\nexport default withIface(Report);","import Report from './Report';\nexport default Report;"],"sourceRoot":""}